{"version":3,"sources":["node_modules/browser-pack/_prelude.js","_js-es6/app.js","_js-es6/libs/photoswipe-ui-default.js","_js-es6/libs/photoswipe.js","_js-es6/libs/waypoints.js","_js-es6/libs/zenscroll.js","_js-es6/modules/primary-nav.js","_js-es6/modules/timeline-loading.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// libraries\nimport ZenScroll from './libs/zenscroll';\nimport WayPoints from './libs/waypoints';\nimport PhotoSwipe from './libs/photoswipe';\nimport PhotoSwipeUI_Default from './libs/photoswipe-ui-default';\n\n// modules\nimport PrimaryNav from './modules/primary-nav';\nPrimaryNav();\n\nimport TimelineLoading from './modules/timeline-loading';\nTimelineLoading();\n\n// Photoswipe\n  var initPhotoSwipeFromDOM = function(gallerySelector) {\n\n      var parseThumbnailElements = function(el) {\n          var thumbElements = el.childNodes,\n              numNodes = thumbElements.length,\n              items = [],\n              el,\n              childElements,\n              thumbnailEl,\n              size,\n              item;\n\n          for(var i = 0; i < numNodes; i++) {\n              el = thumbElements[i];\n\n              // include only element nodes\n              if(el.nodeType !== 1) {\n                continue;\n              }\n\n              childElements = el.children;\n\n              size = el.getAttribute('data-size').split('x');\n\n              // create slide object\n              item = {\n                  src: el.getAttribute('href'),\n                  w: parseInt(size[0], 10),\n                  h: parseInt(size[1], 10),\n                  author: el.getAttribute('data-author')\n              };\n\n              item.el = el; // save link to element for getThumbBoundsFn\n\n              if(childElements.length > 0) {\n                item.msrc = childElements[0].getAttribute('src'); // thumbnail url\n                if(childElements.length > 1) {\n                    item.title = childElements[1].innerHTML; // caption (contents of figure)\n                }\n              }\n\n\n              var mediumSrc = el.getAttribute('data-med');\n                if(mediumSrc) {\n                  size = el.getAttribute('data-med-size').split('x');\n                  // \"medium-sized\" image\n                  item.m = {\n                        src: mediumSrc,\n                        w: parseInt(size[0], 10),\n                        h: parseInt(size[1], 10)\n                  };\n                }\n                // original image\n                item.o = {\n                    src: item.src,\n                    w: item.w,\n                    h: item.h\n                };\n\n              items.push(item);\n          }\n\n          return items;\n      };\n\n      // find nearest parent element\n      var closest = function closest(el, fn) {\n          return el && ( fn(el) ? el : closest(el.parentNode, fn) );\n      };\n\n      var onThumbnailsClick = function(e) {\n          debugger;\n          e = e || window.event;\n          e.preventDefault ? e.preventDefault() : e.returnValue = false;\n\n          var eTarget = e.target || e.srcElement;\n\n          var clickedListItem = closest(eTarget, function(el) {\n              return el.tagName === 'A';\n          });\n\n          if(!clickedListItem) {\n              return;\n          }\n\n          var clickedGallery = clickedListItem.parentNode;\n\n          var childNodes = clickedListItem.parentNode.childNodes,\n              numChildNodes = childNodes.length,\n              nodeIndex = 0,\n              index;\n\n          for (var i = 0; i < numChildNodes; i++) {\n              if(childNodes[i].nodeType !== 1) {\n                  continue;\n              }\n\n              if(childNodes[i] === clickedListItem) {\n                  index = nodeIndex;\n                  break;\n              }\n              nodeIndex++;\n          }\n\n          if(index >= 0) {\n              openPhotoSwipe( index, clickedGallery );\n          }\n          return false;\n      };\n\n      var photoswipeParseHash = function() {\n          var hash = window.location.hash.substring(1),\n          params = {};\n\n          if(hash.length < 5) { // pid=1\n              return params;\n          }\n\n          var vars = hash.split('&');\n          for (var i = 0; i < vars.length; i++) {\n              if(!vars[i]) {\n                  continue;\n              }\n              var pair = vars[i].split('=');\n              if(pair.length < 2) {\n                  continue;\n              }\n              params[pair[0]] = pair[1];\n          }\n\n          if(params.gid) {\n              params.gid = parseInt(params.gid, 10);\n          }\n\n          return params;\n      };\n\n      var openPhotoSwipe = function(index, galleryElement, disableAnimation, fromURL) {\n          var pswpElement = document.querySelectorAll('.pswp')[0],\n              gallery,\n              options,\n              items;\n\n          items = parseThumbnailElements(galleryElement);\n\n          // define options (if needed)\n          options = {\n\n              galleryUID: galleryElement.getAttribute('data-pswp-uid'),\n\n              getThumbBoundsFn: function(index) {\n                  // See Options->getThumbBoundsFn section of docs for more info\n                  var thumbnail = items[index].el.children[0],\n                      pageYScroll = window.pageYOffset || document.documentElement.scrollTop,\n                      rect = thumbnail.getBoundingClientRect();\n\n                  return {x:rect.left, y:rect.top + pageYScroll, w:rect.width};\n              },\n\n              addCaptionHTMLFn: function(item, captionEl, isFake) {\n                  if(!item.title) {\n                      captionEl.children[0].innerText = '';\n                      return false;\n                  }\n                  captionEl.children[0].innerHTML = item.title +  '<br/><small>Photo: ' + item.author + '</small>';\n                  return true;\n              }\n\n          };\n\n\n          if(fromURL) {\n              if(options.galleryPIDs) {\n                  // parse real index when custom PIDs are used\n                  // http://photoswipe.com/documentation/faq.html#custom-pid-in-url\n                  for(var j = 0; j < items.length; j++) {\n                      if(items[j].pid == index) {\n                          options.index = j;\n                          break;\n                      }\n                  }\n              } else {\n                  options.index = parseInt(index, 10) - 1;\n              }\n          } else {\n              options.index = parseInt(index, 10);\n          }\n\n          // exit if index not found\n          if( isNaN(options.index) ) {\n              return;\n          }\n\n          if(disableAnimation) {\n              options.showAnimationDuration = 0;\n          }\n\n          // Pass data to PhotoSwipe and initialize it\n          gallery = new PhotoSwipe( pswpElement, PhotoSwipeUI_Default, items, options);\n\n          // see: http://photoswipe.com/documentation/responsive-images.html\n          var realViewportWidth,\n              useLargeImages = false,\n              firstResize = true,\n              imageSrcWillChange;\n\n          gallery.listen('beforeResize', function() {\n\n              var dpiRatio = window.devicePixelRatio ? window.devicePixelRatio : 1;\n              dpiRatio = Math.min(dpiRatio, 2.5);\n              realViewportWidth = gallery.viewportSize.x * dpiRatio;\n\n\n              if(realViewportWidth >= 1200 || (!gallery.likelyTouchDevice && realViewportWidth > 800) || screen.width > 1200 ) {\n                  if(!useLargeImages) {\n                      useLargeImages = true;\n                      imageSrcWillChange = true;\n                  }\n\n              } else {\n                  if(useLargeImages) {\n                      useLargeImages = false;\n                      imageSrcWillChange = true;\n                  }\n              }\n\n              if(imageSrcWillChange && !firstResize) {\n                  gallery.invalidateCurrItems();\n              }\n\n              if(firstResize) {\n                  firstResize = false;\n              }\n\n              imageSrcWillChange = false;\n\n          });\n\n          gallery.listen('gettingData', function(index, item) {\n              if( useLargeImages ) {\n                  item.src = item.o.src;\n                  item.w = item.o.w;\n                  item.h = item.o.h;\n              } else {\n                  item.src = item.m.src;\n                  item.w = item.m.w;\n                  item.h = item.m.h;\n              }\n          });\n\n          gallery.init();\n      };\n\n      // select all gallery elements\n      var galleryElements = document.querySelectorAll( gallerySelector );\n      for(var i = 0, l = galleryElements.length; i < l; i++) {\n          galleryElements[i].setAttribute('data-pswp-uid', i+1);\n          galleryElements[i].onclick = onThumbnailsClick;\n      }\n\n      // Parse URL and open gallery if it contains #&pid=3&gid=1\n      var hashData = photoswipeParseHash();\n      if(hashData.pid && hashData.gid) {\n          openPhotoSwipe( hashData.pid,  galleryElements[ hashData.gid - 1 ], true, true );\n      }\n  };\n\n  initPhotoSwipeFromDOM('.gallery');\n","/*! PhotoSwipe Default UI - 4.1.1 - 2015-12-24\n* http://photoswipe.com\n* Copyright (c) 2015 Dmitry Semenov; */\n/**\n*\n* UI on top of main sliding area (caption, arrows, close button, etc.).\n* Built just using public methods/properties of PhotoSwipe.\n*\n*/\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.PhotoSwipeUI_Default = factory();\n  }\n})(this, function () {\n\n  'use strict';\n\n\n\nvar PhotoSwipeUI_Default =\n function(pswp, framework) {\n\n  var ui = this;\n  var _overlayUIUpdated = false,\n    _controlsVisible = true,\n    _fullscrenAPI,\n    _controls,\n    _captionContainer,\n    _fakeCaptionContainer,\n    _indexIndicator,\n    _shareButton,\n    _shareModal,\n    _shareModalHidden = true,\n    _initalCloseOnScrollValue,\n    _isIdle,\n    _listen,\n\n    _loadingIndicator,\n    _loadingIndicatorHidden,\n    _loadingIndicatorTimeout,\n\n    _galleryHasOneSlide,\n\n    _options,\n    _defaultUIOptions = {\n      barsSize: {top:44, bottom:'auto'},\n      closeElClasses: ['item', 'caption', 'zoom-wrap', 'ui', 'top-bar'],\n      timeToIdle: 4000,\n      timeToIdleOutside: 1000,\n      loadingIndicatorDelay: 1000, // 2s\n\n      addCaptionHTMLFn: function(item, captionEl /*, isFake */) {\n        if(!item.title) {\n          captionEl.children[0].innerHTML = '';\n          return false;\n        }\n        captionEl.children[0].innerHTML = item.title;\n        return true;\n      },\n\n      closeEl:true,\n      captionEl: true,\n      fullscreenEl: true,\n      zoomEl: true,\n      shareEl: true,\n      counterEl: true,\n      arrowEl: true,\n      preloaderEl: true,\n\n      tapToClose: false,\n      tapToToggleControls: true,\n\n      clickToCloseNonZoomable: true,\n\n      shareButtons: [\n        {id:'facebook', label:'Share on Facebook', url:'https://www.facebook.com/sharer/sharer.php?u={{url}}'},\n        {id:'twitter', label:'Tweet', url:'https://twitter.com/intent/tweet?text={{text}}&url={{url}}'},\n        {id:'download', label:'Download image', url:'{{raw_image_url}}', download:true}\n      ],\n      getImageURLForShare: function( /* shareButtonData */ ) {\n        return pswp.currItem.src || '';\n      },\n      getPageURLForShare: function( /* shareButtonData */ ) {\n        return window.location.href;\n      },\n      getTextForShare: function( /* shareButtonData */ ) {\n        return pswp.currItem.title || '';\n      },\n\n      indexIndicatorSep: ' / ',\n      fitControlsWidth: 1200\n\n    },\n    _blockControlsTap,\n    _blockControlsTapTimeout;\n\n\n\n  var _onControlsTap = function(e) {\n      if(_blockControlsTap) {\n        return true;\n      }\n\n\n      e = e || window.event;\n\n      if(_options.timeToIdle && _options.mouseUsed && !_isIdle) {\n        // reset idle timer\n        _onIdleMouseMove();\n      }\n\n\n      var target = e.target || e.srcElement,\n        uiElement,\n        clickedClass = target.getAttribute('class') || '',\n        found;\n\n      for(var i = 0; i < _uiElements.length; i++) {\n        uiElement = _uiElements[i];\n        if(uiElement.onTap && clickedClass.indexOf('pswp__' + uiElement.name ) > -1 ) {\n          uiElement.onTap();\n          found = true;\n\n        }\n      }\n\n      if(found) {\n        if(e.stopPropagation) {\n          e.stopPropagation();\n        }\n        _blockControlsTap = true;\n\n        // Some versions of Android don't prevent ghost click event\n        // when preventDefault() was called on touchstart and/or touchend.\n        //\n        // This happens on v4.3, 4.2, 4.1,\n        // older versions strangely work correctly,\n        // but just in case we add delay on all of them)\n        var tapDelay = framework.features.isOldAndroid ? 600 : 30;\n        _blockControlsTapTimeout = setTimeout(function() {\n          _blockControlsTap = false;\n        }, tapDelay);\n      }\n\n    },\n    _fitControlsInViewport = function() {\n      return !pswp.likelyTouchDevice || _options.mouseUsed || screen.width > _options.fitControlsWidth;\n    },\n    _togglePswpClass = function(el, cName, add) {\n      framework[ (add ? 'add' : 'remove') + 'Class' ](el, 'pswp__' + cName);\n    },\n\n    // add class when there is just one item in the gallery\n    // (by default it hides left/right arrows and 1ofX counter)\n    _countNumItems = function() {\n      var hasOneSlide = (_options.getNumItemsFn() === 1);\n\n      if(hasOneSlide !== _galleryHasOneSlide) {\n        _togglePswpClass(_controls, 'ui--one-slide', hasOneSlide);\n        _galleryHasOneSlide = hasOneSlide;\n      }\n    },\n    _toggleShareModalClass = function() {\n      _togglePswpClass(_shareModal, 'share-modal--hidden', _shareModalHidden);\n    },\n    _toggleShareModal = function() {\n\n      _shareModalHidden = !_shareModalHidden;\n\n\n      if(!_shareModalHidden) {\n        _toggleShareModalClass();\n        setTimeout(function() {\n          if(!_shareModalHidden) {\n            framework.addClass(_shareModal, 'pswp__share-modal--fade-in');\n          }\n        }, 30);\n      } else {\n        framework.removeClass(_shareModal, 'pswp__share-modal--fade-in');\n        setTimeout(function() {\n          if(_shareModalHidden) {\n            _toggleShareModalClass();\n          }\n        }, 300);\n      }\n\n      if(!_shareModalHidden) {\n        _updateShareURLs();\n      }\n      return false;\n    },\n\n    _openWindowPopup = function(e) {\n      e = e || window.event;\n      var target = e.target || e.srcElement;\n\n      pswp.shout('shareLinkClick', e, target);\n\n      if(!target.href) {\n        return false;\n      }\n\n      if( target.hasAttribute('download') ) {\n        return true;\n      }\n\n      window.open(target.href, 'pswp_share', 'scrollbars=yes,resizable=yes,toolbar=no,'+\n                    'location=yes,width=550,height=420,top=100,left=' +\n                    (window.screen ? Math.round(screen.width / 2 - 275) : 100)  );\n\n      if(!_shareModalHidden) {\n        _toggleShareModal();\n      }\n\n      return false;\n    },\n    _updateShareURLs = function() {\n      var shareButtonOut = '',\n        shareButtonData,\n        shareURL,\n        image_url,\n        page_url,\n        share_text;\n\n      for(var i = 0; i < _options.shareButtons.length; i++) {\n        shareButtonData = _options.shareButtons[i];\n\n        image_url = _options.getImageURLForShare(shareButtonData);\n        page_url = _options.getPageURLForShare(shareButtonData);\n        share_text = _options.getTextForShare(shareButtonData);\n\n        shareURL = shareButtonData.url.replace('{{url}}', encodeURIComponent(page_url) )\n                  .replace('{{image_url}}', encodeURIComponent(image_url) )\n                  .replace('{{raw_image_url}}', image_url )\n                  .replace('{{text}}', encodeURIComponent(share_text) );\n\n        shareButtonOut += '<a href=\"' + shareURL + '\" target=\"_blank\" '+\n                  'class=\"pswp__share--' + shareButtonData.id + '\"' +\n                  (shareButtonData.download ? 'download' : '') + '>' +\n                  shareButtonData.label + '</a>';\n\n        if(_options.parseShareButtonOut) {\n          shareButtonOut = _options.parseShareButtonOut(shareButtonData, shareButtonOut);\n        }\n      }\n      _shareModal.children[0].innerHTML = shareButtonOut;\n      _shareModal.children[0].onclick = _openWindowPopup;\n\n    },\n    _hasCloseClass = function(target) {\n      for(var  i = 0; i < _options.closeElClasses.length; i++) {\n        if( framework.hasClass(target, 'pswp__' + _options.closeElClasses[i]) ) {\n          return true;\n        }\n      }\n    },\n    _idleInterval,\n    _idleTimer,\n    _idleIncrement = 0,\n    _onIdleMouseMove = function() {\n      clearTimeout(_idleTimer);\n      _idleIncrement = 0;\n      if(_isIdle) {\n        ui.setIdle(false);\n      }\n    },\n    _onMouseLeaveWindow = function(e) {\n      e = e ? e : window.event;\n      var from = e.relatedTarget || e.toElement;\n      if (!from || from.nodeName === 'HTML') {\n        clearTimeout(_idleTimer);\n        _idleTimer = setTimeout(function() {\n          ui.setIdle(true);\n        }, _options.timeToIdleOutside);\n      }\n    },\n    _setupFullscreenAPI = function() {\n      if(_options.fullscreenEl && !framework.features.isOldAndroid) {\n        if(!_fullscrenAPI) {\n          _fullscrenAPI = ui.getFullscreenAPI();\n        }\n        if(_fullscrenAPI) {\n          framework.bind(document, _fullscrenAPI.eventK, ui.updateFullscreen);\n          ui.updateFullscreen();\n          framework.addClass(pswp.template, 'pswp--supports-fs');\n        } else {\n          framework.removeClass(pswp.template, 'pswp--supports-fs');\n        }\n      }\n    },\n    _setupLoadingIndicator = function() {\n      // Setup loading indicator\n      if(_options.preloaderEl) {\n\n        _toggleLoadingIndicator(true);\n\n        _listen('beforeChange', function() {\n\n          clearTimeout(_loadingIndicatorTimeout);\n\n          // display loading indicator with delay\n          _loadingIndicatorTimeout = setTimeout(function() {\n\n            if(pswp.currItem && pswp.currItem.loading) {\n\n              if( !pswp.allowProgressiveImg() || (pswp.currItem.img && !pswp.currItem.img.naturalWidth)  ) {\n                // show preloader if progressive loading is not enabled,\n                // or image width is not defined yet (because of slow connection)\n                _toggleLoadingIndicator(false);\n                // items-controller.js function allowProgressiveImg\n              }\n\n            } else {\n              _toggleLoadingIndicator(true); // hide preloader\n            }\n\n          }, _options.loadingIndicatorDelay);\n\n        });\n        _listen('imageLoadComplete', function(index, item) {\n          if(pswp.currItem === item) {\n            _toggleLoadingIndicator(true);\n          }\n        });\n\n      }\n    },\n    _toggleLoadingIndicator = function(hide) {\n      if( _loadingIndicatorHidden !== hide ) {\n        _togglePswpClass(_loadingIndicator, 'preloader--active', !hide);\n        _loadingIndicatorHidden = hide;\n      }\n    },\n    _applyNavBarGaps = function(item) {\n      var gap = item.vGap;\n\n      if( _fitControlsInViewport() ) {\n\n        var bars = _options.barsSize;\n        if(_options.captionEl && bars.bottom === 'auto') {\n          if(!_fakeCaptionContainer) {\n            _fakeCaptionContainer = framework.createEl('pswp__caption pswp__caption--fake');\n            _fakeCaptionContainer.appendChild( framework.createEl('pswp__caption__center') );\n            _controls.insertBefore(_fakeCaptionContainer, _captionContainer);\n            framework.addClass(_controls, 'pswp__ui--fit');\n          }\n          if( _options.addCaptionHTMLFn(item, _fakeCaptionContainer, true) ) {\n\n            var captionSize = _fakeCaptionContainer.clientHeight;\n            gap.bottom = parseInt(captionSize,10) || 44;\n          } else {\n            gap.bottom = bars.top; // if no caption, set size of bottom gap to size of top\n          }\n        } else {\n          gap.bottom = bars.bottom === 'auto' ? 0 : bars.bottom;\n        }\n\n        // height of top bar is static, no need to calculate it\n        gap.top = bars.top;\n      } else {\n        gap.top = gap.bottom = 0;\n      }\n    },\n    _setupIdle = function() {\n      // Hide controls when mouse is used\n      if(_options.timeToIdle) {\n        _listen('mouseUsed', function() {\n\n          framework.bind(document, 'mousemove', _onIdleMouseMove);\n          framework.bind(document, 'mouseout', _onMouseLeaveWindow);\n\n          _idleInterval = setInterval(function() {\n            _idleIncrement++;\n            if(_idleIncrement === 2) {\n              ui.setIdle(true);\n            }\n          }, _options.timeToIdle / 2);\n        });\n      }\n    },\n    _setupHidingControlsDuringGestures = function() {\n\n      // Hide controls on vertical drag\n      _listen('onVerticalDrag', function(now) {\n        if(_controlsVisible && now < 0.95) {\n          ui.hideControls();\n        } else if(!_controlsVisible && now >= 0.95) {\n          ui.showControls();\n        }\n      });\n\n      // Hide controls when pinching to close\n      var pinchControlsHidden;\n      _listen('onPinchClose' , function(now) {\n        if(_controlsVisible && now < 0.9) {\n          ui.hideControls();\n          pinchControlsHidden = true;\n        } else if(pinchControlsHidden && !_controlsVisible && now > 0.9) {\n          ui.showControls();\n        }\n      });\n\n      _listen('zoomGestureEnded', function() {\n        pinchControlsHidden = false;\n        if(pinchControlsHidden && !_controlsVisible) {\n          ui.showControls();\n        }\n      });\n\n    };\n\n\n\n  var _uiElements = [\n    {\n      name: 'caption',\n      option: 'captionEl',\n      onInit: function(el) {\n        _captionContainer = el;\n      }\n    },\n    {\n      name: 'share-modal',\n      option: 'shareEl',\n      onInit: function(el) {\n        _shareModal = el;\n      },\n      onTap: function() {\n        _toggleShareModal();\n      }\n    },\n    {\n      name: 'button--share',\n      option: 'shareEl',\n      onInit: function(el) {\n        _shareButton = el;\n      },\n      onTap: function() {\n        _toggleShareModal();\n      }\n    },\n    {\n      name: 'button--zoom',\n      option: 'zoomEl',\n      onTap: pswp.toggleDesktopZoom\n    },\n    {\n      name: 'counter',\n      option: 'counterEl',\n      onInit: function(el) {\n        _indexIndicator = el;\n      }\n    },\n    {\n      name: 'button--close',\n      option: 'closeEl',\n      onTap: pswp.close\n    },\n    {\n      name: 'button--arrow--left',\n      option: 'arrowEl',\n      onTap: pswp.prev\n    },\n    {\n      name: 'button--arrow--right',\n      option: 'arrowEl',\n      onTap: pswp.next\n    },\n    {\n      name: 'button--fs',\n      option: 'fullscreenEl',\n      onTap: function() {\n        if(_fullscrenAPI.isFullscreen()) {\n          _fullscrenAPI.exit();\n        } else {\n          _fullscrenAPI.enter();\n        }\n      }\n    },\n    {\n      name: 'preloader',\n      option: 'preloaderEl',\n      onInit: function(el) {\n        _loadingIndicator = el;\n      }\n    }\n\n  ];\n\n  var _setupUIElements = function() {\n    var item,\n      classAttr,\n      uiElement;\n\n    var loopThroughChildElements = function(sChildren) {\n      if(!sChildren) {\n        return;\n      }\n\n      var l = sChildren.length;\n      for(var i = 0; i < l; i++) {\n        item = sChildren[i];\n        classAttr = item.className;\n\n        for(var a = 0; a < _uiElements.length; a++) {\n          uiElement = _uiElements[a];\n\n          if(classAttr.indexOf('pswp__' + uiElement.name) > -1  ) {\n\n            if( _options[uiElement.option] ) { // if element is not disabled from options\n\n              framework.removeClass(item, 'pswp__element--disabled');\n              if(uiElement.onInit) {\n                uiElement.onInit(item);\n              }\n\n              //item.style.display = 'block';\n            } else {\n              framework.addClass(item, 'pswp__element--disabled');\n              //item.style.display = 'none';\n            }\n          }\n        }\n      }\n    };\n    loopThroughChildElements(_controls.children);\n\n    var topBar =  framework.getChildByClass(_controls, 'pswp__top-bar');\n    if(topBar) {\n      loopThroughChildElements( topBar.children );\n    }\n  };\n\n\n\n\n  ui.init = function() {\n\n    // extend options\n    framework.extend(pswp.options, _defaultUIOptions, true);\n\n    // create local link for fast access\n    _options = pswp.options;\n\n    // find pswp__ui element\n    _controls = framework.getChildByClass(pswp.scrollWrap, 'pswp__ui');\n\n    // create local link\n    _listen = pswp.listen;\n\n\n    _setupHidingControlsDuringGestures();\n\n    // update controls when slides change\n    _listen('beforeChange', ui.update);\n\n    // toggle zoom on double-tap\n    _listen('doubleTap', function(point) {\n      var initialZoomLevel = pswp.currItem.initialZoomLevel;\n      if(pswp.getZoomLevel() !== initialZoomLevel) {\n        pswp.zoomTo(initialZoomLevel, point, 333);\n      } else {\n        pswp.zoomTo(_options.getDoubleTapZoom(false, pswp.currItem), point, 333);\n      }\n    });\n\n    // Allow text selection in caption\n    _listen('preventDragEvent', function(e, isDown, preventObj) {\n      var t = e.target || e.srcElement;\n      if(\n        t &&\n        t.getAttribute('class') && e.type.indexOf('mouse') > -1 &&\n        ( t.getAttribute('class').indexOf('__caption') > 0 || (/(SMALL|STRONG|EM)/i).test(t.tagName) )\n      ) {\n        preventObj.prevent = false;\n      }\n    });\n\n    // bind events for UI\n    _listen('bindEvents', function() {\n      framework.bind(_controls, 'pswpTap click', _onControlsTap);\n      framework.bind(pswp.scrollWrap, 'pswpTap', ui.onGlobalTap);\n\n      if(!pswp.likelyTouchDevice) {\n        framework.bind(pswp.scrollWrap, 'mouseover', ui.onMouseOver);\n      }\n    });\n\n    // unbind events for UI\n    _listen('unbindEvents', function() {\n      if(!_shareModalHidden) {\n        _toggleShareModal();\n      }\n\n      if(_idleInterval) {\n        clearInterval(_idleInterval);\n      }\n      framework.unbind(document, 'mouseout', _onMouseLeaveWindow);\n      framework.unbind(document, 'mousemove', _onIdleMouseMove);\n      framework.unbind(_controls, 'pswpTap click', _onControlsTap);\n      framework.unbind(pswp.scrollWrap, 'pswpTap', ui.onGlobalTap);\n      framework.unbind(pswp.scrollWrap, 'mouseover', ui.onMouseOver);\n\n      if(_fullscrenAPI) {\n        framework.unbind(document, _fullscrenAPI.eventK, ui.updateFullscreen);\n        if(_fullscrenAPI.isFullscreen()) {\n          _options.hideAnimationDuration = 0;\n          _fullscrenAPI.exit();\n        }\n        _fullscrenAPI = null;\n      }\n    });\n\n\n    // clean up things when gallery is destroyed\n    _listen('destroy', function() {\n      if(_options.captionEl) {\n        if(_fakeCaptionContainer) {\n          _controls.removeChild(_fakeCaptionContainer);\n        }\n        framework.removeClass(_captionContainer, 'pswp__caption--empty');\n      }\n\n      if(_shareModal) {\n        _shareModal.children[0].onclick = null;\n      }\n      framework.removeClass(_controls, 'pswp__ui--over-close');\n      framework.addClass( _controls, 'pswp__ui--hidden');\n      ui.setIdle(false);\n    });\n\n\n    if(!_options.showAnimationDuration) {\n      framework.removeClass( _controls, 'pswp__ui--hidden');\n    }\n    _listen('initialZoomIn', function() {\n      if(_options.showAnimationDuration) {\n        framework.removeClass( _controls, 'pswp__ui--hidden');\n      }\n    });\n    _listen('initialZoomOut', function() {\n      framework.addClass( _controls, 'pswp__ui--hidden');\n    });\n\n    _listen('parseVerticalMargin', _applyNavBarGaps);\n\n    _setupUIElements();\n\n    if(_options.shareEl && _shareButton && _shareModal) {\n      _shareModalHidden = true;\n    }\n\n    _countNumItems();\n\n    _setupIdle();\n\n    _setupFullscreenAPI();\n\n    _setupLoadingIndicator();\n  };\n\n  ui.setIdle = function(isIdle) {\n    _isIdle = isIdle;\n    _togglePswpClass(_controls, 'ui--idle', isIdle);\n  };\n\n  ui.update = function() {\n    // Don't update UI if it's hidden\n    if(_controlsVisible && pswp.currItem) {\n\n      ui.updateIndexIndicator();\n\n      if(_options.captionEl) {\n        _options.addCaptionHTMLFn(pswp.currItem, _captionContainer);\n\n        _togglePswpClass(_captionContainer, 'caption--empty', !pswp.currItem.title);\n      }\n\n      _overlayUIUpdated = true;\n\n    } else {\n      _overlayUIUpdated = false;\n    }\n\n    if(!_shareModalHidden) {\n      _toggleShareModal();\n    }\n\n    _countNumItems();\n  };\n\n  ui.updateFullscreen = function(e) {\n\n    if(e) {\n      // some browsers change window scroll position during the fullscreen\n      // so PhotoSwipe updates it just in case\n      setTimeout(function() {\n        pswp.setScrollOffset( 0, framework.getScrollY() );\n      }, 50);\n    }\n\n    // toogle pswp--fs class on root element\n    framework[ (_fullscrenAPI.isFullscreen() ? 'add' : 'remove') + 'Class' ](pswp.template, 'pswp--fs');\n  };\n\n  ui.updateIndexIndicator = function() {\n    if(_options.counterEl) {\n      _indexIndicator.innerHTML = (pswp.getCurrentIndex()+1) +\n                    _options.indexIndicatorSep +\n                    _options.getNumItemsFn();\n    }\n  };\n\n  ui.onGlobalTap = function(e) {\n    e = e || window.event;\n    var target = e.target || e.srcElement;\n\n    if(_blockControlsTap) {\n      return;\n    }\n\n    if(e.detail && e.detail.pointerType === 'mouse') {\n\n      // close gallery if clicked outside of the image\n      if(_hasCloseClass(target)) {\n        pswp.close();\n        return;\n      }\n\n      if(framework.hasClass(target, 'pswp__img')) {\n        if(pswp.getZoomLevel() === 1 && pswp.getZoomLevel() <= pswp.currItem.fitRatio) {\n          if(_options.clickToCloseNonZoomable) {\n            pswp.close();\n          }\n        } else {\n          pswp.toggleDesktopZoom(e.detail.releasePoint);\n        }\n      }\n\n    } else {\n\n      // tap anywhere (except buttons) to toggle visibility of controls\n      if(_options.tapToToggleControls) {\n        if(_controlsVisible) {\n          ui.hideControls();\n        } else {\n          ui.showControls();\n        }\n      }\n\n      // tap to close gallery\n      if(_options.tapToClose && (framework.hasClass(target, 'pswp__img') || _hasCloseClass(target)) ) {\n        pswp.close();\n        return;\n      }\n\n    }\n  };\n  ui.onMouseOver = function(e) {\n    e = e || window.event;\n    var target = e.target || e.srcElement;\n\n    // add class when mouse is over an element that should close the gallery\n    _togglePswpClass(_controls, 'ui--over-close', _hasCloseClass(target));\n  };\n\n  ui.hideControls = function() {\n    framework.addClass(_controls,'pswp__ui--hidden');\n    _controlsVisible = false;\n  };\n\n  ui.showControls = function() {\n    _controlsVisible = true;\n    if(!_overlayUIUpdated) {\n      ui.update();\n    }\n    framework.removeClass(_controls,'pswp__ui--hidden');\n  };\n\n  ui.supportsFullscreen = function() {\n    var d = document;\n    return !!(d.exitFullscreen || d.mozCancelFullScreen || d.webkitExitFullscreen || d.msExitFullscreen);\n  };\n\n  ui.getFullscreenAPI = function() {\n    var dE = document.documentElement,\n      api,\n      tF = 'fullscreenchange';\n\n    if (dE.requestFullscreen) {\n      api = {\n        enterK: 'requestFullscreen',\n        exitK: 'exitFullscreen',\n        elementK: 'fullscreenElement',\n        eventK: tF\n      };\n\n    } else if(dE.mozRequestFullScreen ) {\n      api = {\n        enterK: 'mozRequestFullScreen',\n        exitK: 'mozCancelFullScreen',\n        elementK: 'mozFullScreenElement',\n        eventK: 'moz' + tF\n      };\n\n\n\n    } else if(dE.webkitRequestFullscreen) {\n      api = {\n        enterK: 'webkitRequestFullscreen',\n        exitK: 'webkitExitFullscreen',\n        elementK: 'webkitFullscreenElement',\n        eventK: 'webkit' + tF\n      };\n\n    } else if(dE.msRequestFullscreen) {\n      api = {\n        enterK: 'msRequestFullscreen',\n        exitK: 'msExitFullscreen',\n        elementK: 'msFullscreenElement',\n        eventK: 'MSFullscreenChange'\n      };\n    }\n\n    if(api) {\n      api.enter = function() {\n        // disable close-on-scroll in fullscreen\n        _initalCloseOnScrollValue = _options.closeOnScroll;\n        _options.closeOnScroll = false;\n\n        if(this.enterK === 'webkitRequestFullscreen') {\n          pswp.template[this.enterK]( Element.ALLOW_KEYBOARD_INPUT );\n        } else {\n          return pswp.template[this.enterK]();\n        }\n      };\n      api.exit = function() {\n        _options.closeOnScroll = _initalCloseOnScrollValue;\n\n        return document[this.exitK]();\n\n      };\n      api.isFullscreen = function() { return document[this.elementK]; };\n    }\n\n    return api;\n  };\n\n\n\n};\nreturn PhotoSwipeUI_Default;\n\n\n});\n","/*! PhotoSwipe - v4.1.1 - 2015-12-24\n* http://photoswipe.com\n* Copyright (c) 2015 Dmitry Semenov; */\n(function (root, factory) { \n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\troot.PhotoSwipe = factory();\n\t}\n})(this, function () {\n\n\t'use strict';\n\tvar PhotoSwipe = function(template, UiClass, items, options){\n\n/*>>framework-bridge*/\n/**\n *\n * Set of generic functions used by gallery.\n * \n * You're free to modify anything here as long as functionality is kept.\n * \n */\nvar framework = {\n\tfeatures: null,\n\tbind: function(target, type, listener, unbind) {\n\t\tvar methodName = (unbind ? 'remove' : 'add') + 'EventListener';\n\t\ttype = type.split(' ');\n\t\tfor(var i = 0; i < type.length; i++) {\n\t\t\tif(type[i]) {\n\t\t\t\ttarget[methodName]( type[i], listener, false);\n\t\t\t}\n\t\t}\n\t},\n\tisArray: function(obj) {\n\t\treturn (obj instanceof Array);\n\t},\n\tcreateEl: function(classes, tag) {\n\t\tvar el = document.createElement(tag || 'div');\n\t\tif(classes) {\n\t\t\tel.className = classes;\n\t\t}\n\t\treturn el;\n\t},\n\tgetScrollY: function() {\n\t\tvar yOffset = window.pageYOffset;\n\t\treturn yOffset !== undefined ? yOffset : document.documentElement.scrollTop;\n\t},\n\tunbind: function(target, type, listener) {\n\t\tframework.bind(target,type,listener,true);\n\t},\n\tremoveClass: function(el, className) {\n\t\tvar reg = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)');\n\t\tel.className = el.className.replace(reg, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, ''); \n\t},\n\taddClass: function(el, className) {\n\t\tif( !framework.hasClass(el,className) ) {\n\t\t\tel.className += (el.className ? ' ' : '') + className;\n\t\t}\n\t},\n\thasClass: function(el, className) {\n\t\treturn el.className && new RegExp('(^|\\\\s)' + className + '(\\\\s|$)').test(el.className);\n\t},\n\tgetChildByClass: function(parentEl, childClassName) {\n\t\tvar node = parentEl.firstChild;\n\t\twhile(node) {\n\t\t\tif( framework.hasClass(node, childClassName) ) {\n\t\t\t\treturn node;\n\t\t\t}\n\t\t\tnode = node.nextSibling;\n\t\t}\n\t},\n\tarraySearch: function(array, value, key) {\n\t\tvar i = array.length;\n\t\twhile(i--) {\n\t\t\tif(array[i][key] === value) {\n\t\t\t\treturn i;\n\t\t\t} \n\t\t}\n\t\treturn -1;\n\t},\n\textend: function(o1, o2, preventOverwrite) {\n\t\tfor (var prop in o2) {\n\t\t\tif (o2.hasOwnProperty(prop)) {\n\t\t\t\tif(preventOverwrite && o1.hasOwnProperty(prop)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\to1[prop] = o2[prop];\n\t\t\t}\n\t\t}\n\t},\n\teasing: {\n\t\tsine: {\n\t\t\tout: function(k) {\n\t\t\t\treturn Math.sin(k * (Math.PI / 2));\n\t\t\t},\n\t\t\tinOut: function(k) {\n\t\t\t\treturn - (Math.cos(Math.PI * k) - 1) / 2;\n\t\t\t}\n\t\t},\n\t\tcubic: {\n\t\t\tout: function(k) {\n\t\t\t\treturn --k * k * k + 1;\n\t\t\t}\n\t\t}\n\t\t/*\n\t\t\telastic: {\n\t\t\t\tout: function ( k ) {\n\n\t\t\t\t\tvar s, a = 0.1, p = 0.4;\n\t\t\t\t\tif ( k === 0 ) return 0;\n\t\t\t\t\tif ( k === 1 ) return 1;\n\t\t\t\t\tif ( !a || a < 1 ) { a = 1; s = p / 4; }\n\t\t\t\t\telse s = p * Math.asin( 1 / a ) / ( 2 * Math.PI );\n\t\t\t\t\treturn ( a * Math.pow( 2, - 10 * k) * Math.sin( ( k - s ) * ( 2 * Math.PI ) / p ) + 1 );\n\n\t\t\t\t},\n\t\t\t},\n\t\t\tback: {\n\t\t\t\tout: function ( k ) {\n\t\t\t\t\tvar s = 1.70158;\n\t\t\t\t\treturn --k * k * ( ( s + 1 ) * k + s ) + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t*/\n\t},\n\n\t/**\n\t * \n\t * @return {object}\n\t * \n\t * {\n\t *  raf : request animation frame function\n\t *  caf : cancel animation frame function\n\t *  transfrom : transform property key (with vendor), or null if not supported\n\t *  oldIE : IE8 or below\n\t * }\n\t * \n\t */\n\tdetectFeatures: function() {\n\t\tif(framework.features) {\n\t\t\treturn framework.features;\n\t\t}\n\t\tvar helperEl = framework.createEl(),\n\t\t\thelperStyle = helperEl.style,\n\t\t\tvendor = '',\n\t\t\tfeatures = {};\n\n\t\t// IE8 and below\n\t\tfeatures.oldIE = document.all && !document.addEventListener;\n\n\t\tfeatures.touch = 'ontouchstart' in window;\n\n\t\tif(window.requestAnimationFrame) {\n\t\t\tfeatures.raf = window.requestAnimationFrame;\n\t\t\tfeatures.caf = window.cancelAnimationFrame;\n\t\t}\n\n\t\tfeatures.pointerEvent = navigator.pointerEnabled || navigator.msPointerEnabled;\n\n\t\t// fix false-positive detection of old Android in new IE\n\t\t// (IE11 ua string contains \"Android 4.0\")\n\t\t\n\t\tif(!features.pointerEvent) { \n\n\t\t\tvar ua = navigator.userAgent;\n\n\t\t\t// Detect if device is iPhone or iPod and if it's older than iOS 8\n\t\t\t// http://stackoverflow.com/a/14223920\n\t\t\t// \n\t\t\t// This detection is made because of buggy top/bottom toolbars\n\t\t\t// that don't trigger window.resize event.\n\t\t\t// For more info refer to _isFixedPosition variable in core.js\n\n\t\t\tif (/iP(hone|od)/.test(navigator.platform)) {\n\t\t\t\tvar v = (navigator.appVersion).match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n\t\t\t\tif(v && v.length > 0) {\n\t\t\t\t\tv = parseInt(v[1], 10);\n\t\t\t\t\tif(v >= 1 && v < 8 ) {\n\t\t\t\t\t\tfeatures.isOldIOSPhone = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Detect old Android (before KitKat)\n\t\t\t// due to bugs related to position:fixed\n\t\t\t// http://stackoverflow.com/questions/7184573/pick-up-the-android-version-in-the-browser-by-javascript\n\t\t\t\n\t\t\tvar match = ua.match(/Android\\s([0-9\\.]*)/);\n\t\t\tvar androidversion =  match ? match[1] : 0;\n\t\t\tandroidversion = parseFloat(androidversion);\n\t\t\tif(androidversion >= 1 ) {\n\t\t\t\tif(androidversion < 4.4) {\n\t\t\t\t\tfeatures.isOldAndroid = true; // for fixed position bug & performance\n\t\t\t\t}\n\t\t\t\tfeatures.androidVersion = androidversion; // for touchend bug\n\t\t\t}\t\n\t\t\tfeatures.isMobileOpera = /opera mini|opera mobi/i.test(ua);\n\n\t\t\t// p.s. yes, yes, UA sniffing is bad, propose your solution for above bugs.\n\t\t}\n\t\t\n\t\tvar styleChecks = ['transform', 'perspective', 'animationName'],\n\t\t\tvendors = ['', 'webkit','Moz','ms','O'],\n\t\t\tstyleCheckItem,\n\t\t\tstyleName;\n\n\t\tfor(var i = 0; i < 4; i++) {\n\t\t\tvendor = vendors[i];\n\n\t\t\tfor(var a = 0; a < 3; a++) {\n\t\t\t\tstyleCheckItem = styleChecks[a];\n\n\t\t\t\t// uppercase first letter of property name, if vendor is present\n\t\t\t\tstyleName = vendor + (vendor ? \n\t\t\t\t\t\t\t\t\t\tstyleCheckItem.charAt(0).toUpperCase() + styleCheckItem.slice(1) : \n\t\t\t\t\t\t\t\t\t\tstyleCheckItem);\n\t\t\t\n\t\t\t\tif(!features[styleCheckItem] && styleName in helperStyle ) {\n\t\t\t\t\tfeatures[styleCheckItem] = styleName;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(vendor && !features.raf) {\n\t\t\t\tvendor = vendor.toLowerCase();\n\t\t\t\tfeatures.raf = window[vendor+'RequestAnimationFrame'];\n\t\t\t\tif(features.raf) {\n\t\t\t\t\tfeatures.caf = window[vendor+'CancelAnimationFrame'] || \n\t\t\t\t\t\t\t\t\twindow[vendor+'CancelRequestAnimationFrame'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\t\n\t\tif(!features.raf) {\n\t\t\tvar lastTime = 0;\n\t\t\tfeatures.raf = function(fn) {\n\t\t\t\tvar currTime = new Date().getTime();\n\t\t\t\tvar timeToCall = Math.max(0, 16 - (currTime - lastTime));\n\t\t\t\tvar id = window.setTimeout(function() { fn(currTime + timeToCall); }, timeToCall);\n\t\t\t\tlastTime = currTime + timeToCall;\n\t\t\t\treturn id;\n\t\t\t};\n\t\t\tfeatures.caf = function(id) { clearTimeout(id); };\n\t\t}\n\n\t\t// Detect SVG support\n\t\tfeatures.svg = !!document.createElementNS && \n\t\t\t\t\t\t!!document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect;\n\n\t\tframework.features = features;\n\n\t\treturn features;\n\t}\n};\n\nframework.detectFeatures();\n\n// Override addEventListener for old versions of IE\nif(framework.features.oldIE) {\n\n\tframework.bind = function(target, type, listener, unbind) {\n\t\t\n\t\ttype = type.split(' ');\n\n\t\tvar methodName = (unbind ? 'detach' : 'attach') + 'Event',\n\t\t\tevName,\n\t\t\t_handleEv = function() {\n\t\t\t\tlistener.handleEvent.call(listener);\n\t\t\t};\n\n\t\tfor(var i = 0; i < type.length; i++) {\n\t\t\tevName = type[i];\n\t\t\tif(evName) {\n\n\t\t\t\tif(typeof listener === 'object' && listener.handleEvent) {\n\t\t\t\t\tif(!unbind) {\n\t\t\t\t\t\tlistener['oldIE' + evName] = _handleEv;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(!listener['oldIE' + evName]) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\ttarget[methodName]( 'on' + evName, listener['oldIE' + evName]);\n\t\t\t\t} else {\n\t\t\t\t\ttarget[methodName]( 'on' + evName, listener);\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t};\n\t\n}\n\n/*>>framework-bridge*/\n\n/*>>core*/\n//function(template, UiClass, items, options)\n\nvar self = this;\n\n/**\n * Static vars, don't change unless you know what you're doing.\n */\nvar DOUBLE_TAP_RADIUS = 25, \n\tNUM_HOLDERS = 3;\n\n/**\n * Options\n */\nvar _options = {\n\tallowPanToNext:true,\n\tspacing: 0.12,\n\tbgOpacity: 1,\n\tmouseUsed: false,\n\tloop: true,\n\tpinchToClose: true,\n\tcloseOnScroll: true,\n\tcloseOnVerticalDrag: true,\n\tverticalDragRange: 0.75,\n\thideAnimationDuration: 333,\n\tshowAnimationDuration: 333,\n\tshowHideOpacity: false,\n\tfocus: true,\n\tescKey: true,\n\tarrowKeys: true,\n\tmainScrollEndFriction: 0.35,\n\tpanEndFriction: 0.35,\n\tisClickableElement: function(el) {\n        return el.tagName === 'A';\n    },\n    getDoubleTapZoom: function(isMouseClick, item) {\n    \tif(isMouseClick) {\n    \t\treturn 1;\n    \t} else {\n    \t\treturn item.initialZoomLevel < 0.7 ? 1 : 1.33;\n    \t}\n    },\n    maxSpreadZoom: 1.33,\n\tmodal: true,\n\n\t// not fully implemented yet\n\tscaleMode: 'fit' // TODO\n};\nframework.extend(_options, options);\n\n\n/**\n * Private helper variables & functions\n */\n\nvar _getEmptyPoint = function() { \n\t\treturn {x:0,y:0}; \n\t};\n\nvar _isOpen,\n\t_isDestroying,\n\t_closedByScroll,\n\t_currentItemIndex,\n\t_containerStyle,\n\t_containerShiftIndex,\n\t_currPanDist = _getEmptyPoint(),\n\t_startPanOffset = _getEmptyPoint(),\n\t_panOffset = _getEmptyPoint(),\n\t_upMoveEvents, // drag move, drag end & drag cancel events array\n\t_downEvents, // drag start events array\n\t_globalEventHandlers,\n\t_viewportSize = {},\n\t_currZoomLevel,\n\t_startZoomLevel,\n\t_translatePrefix,\n\t_translateSufix,\n\t_updateSizeInterval,\n\t_itemsNeedUpdate,\n\t_currPositionIndex = 0,\n\t_offset = {},\n\t_slideSize = _getEmptyPoint(), // size of slide area, including spacing\n\t_itemHolders,\n\t_prevItemIndex,\n\t_indexDiff = 0, // difference of indexes since last content update\n\t_dragStartEvent,\n\t_dragMoveEvent,\n\t_dragEndEvent,\n\t_dragCancelEvent,\n\t_transformKey,\n\t_pointerEventEnabled,\n\t_isFixedPosition = true,\n\t_likelyTouchDevice,\n\t_modules = [],\n\t_requestAF,\n\t_cancelAF,\n\t_initalClassName,\n\t_initalWindowScrollY,\n\t_oldIE,\n\t_currentWindowScrollY,\n\t_features,\n\t_windowVisibleSize = {},\n\t_renderMaxResolution = false,\n\n\t// Registers PhotoSWipe module (History, Controller ...)\n\t_registerModule = function(name, module) {\n\t\tframework.extend(self, module.publicMethods);\n\t\t_modules.push(name);\n\t},\n\n\t_getLoopedId = function(index) {\n\t\tvar numSlides = _getNumItems();\n\t\tif(index > numSlides - 1) {\n\t\t\treturn index - numSlides;\n\t\t} else  if(index < 0) {\n\t\t\treturn numSlides + index;\n\t\t}\n\t\treturn index;\n\t},\n\t\n\t// Micro bind/trigger\n\t_listeners = {},\n\t_listen = function(name, fn) {\n\t\tif(!_listeners[name]) {\n\t\t\t_listeners[name] = [];\n\t\t}\n\t\treturn _listeners[name].push(fn);\n\t},\n\t_shout = function(name) {\n\t\tvar listeners = _listeners[name];\n\n\t\tif(listeners) {\n\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\targs.shift();\n\n\t\t\tfor(var i = 0; i < listeners.length; i++) {\n\t\t\t\tlisteners[i].apply(self, args);\n\t\t\t}\n\t\t}\n\t},\n\n\t_getCurrentTime = function() {\n\t\treturn new Date().getTime();\n\t},\n\t_applyBgOpacity = function(opacity) {\n\t\t_bgOpacity = opacity;\n\t\tself.bg.style.opacity = opacity * _options.bgOpacity;\n\t},\n\n\t_applyZoomTransform = function(styleObj,x,y,zoom,item) {\n\t\tif(!_renderMaxResolution || (item && item !== self.currItem) ) {\n\t\t\tzoom = zoom / (item ? item.fitRatio : self.currItem.fitRatio);\t\n\t\t}\n\t\t\t\n\t\tstyleObj[_transformKey] = _translatePrefix + x + 'px, ' + y + 'px' + _translateSufix + ' scale(' + zoom + ')';\n\t},\n\t_applyCurrentZoomPan = function( allowRenderResolution ) {\n\t\tif(_currZoomElementStyle) {\n\n\t\t\tif(allowRenderResolution) {\n\t\t\t\tif(_currZoomLevel > self.currItem.fitRatio) {\n\t\t\t\t\tif(!_renderMaxResolution) {\n\t\t\t\t\t\t_setImageSize(self.currItem, false, true);\n\t\t\t\t\t\t_renderMaxResolution = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif(_renderMaxResolution) {\n\t\t\t\t\t\t_setImageSize(self.currItem);\n\t\t\t\t\t\t_renderMaxResolution = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\n\t\t\t_applyZoomTransform(_currZoomElementStyle, _panOffset.x, _panOffset.y, _currZoomLevel);\n\t\t}\n\t},\n\t_applyZoomPanToItem = function(item) {\n\t\tif(item.container) {\n\n\t\t\t_applyZoomTransform(item.container.style, \n\t\t\t\t\t\t\t\titem.initialPosition.x, \n\t\t\t\t\t\t\t\titem.initialPosition.y, \n\t\t\t\t\t\t\t\titem.initialZoomLevel,\n\t\t\t\t\t\t\t\titem);\n\t\t}\n\t},\n\t_setTranslateX = function(x, elStyle) {\n\t\telStyle[_transformKey] = _translatePrefix + x + 'px, 0px' + _translateSufix;\n\t},\n\t_moveMainScroll = function(x, dragging) {\n\n\t\tif(!_options.loop && dragging) {\n\t\t\tvar newSlideIndexOffset = _currentItemIndex + (_slideSize.x * _currPositionIndex - x) / _slideSize.x,\n\t\t\t\tdelta = Math.round(x - _mainScrollPos.x);\n\n\t\t\tif( (newSlideIndexOffset < 0 && delta > 0) || \n\t\t\t\t(newSlideIndexOffset >= _getNumItems() - 1 && delta < 0) ) {\n\t\t\t\tx = _mainScrollPos.x + delta * _options.mainScrollEndFriction;\n\t\t\t} \n\t\t}\n\t\t\n\t\t_mainScrollPos.x = x;\n\t\t_setTranslateX(x, _containerStyle);\n\t},\n\t_calculatePanOffset = function(axis, zoomLevel) {\n\t\tvar m = _midZoomPoint[axis] - _offset[axis];\n\t\treturn _startPanOffset[axis] + _currPanDist[axis] + m - m * ( zoomLevel / _startZoomLevel );\n\t},\n\t\n\t_equalizePoints = function(p1, p2) {\n\t\tp1.x = p2.x;\n\t\tp1.y = p2.y;\n\t\tif(p2.id) {\n\t\t\tp1.id = p2.id;\n\t\t}\n\t},\n\t_roundPoint = function(p) {\n\t\tp.x = Math.round(p.x);\n\t\tp.y = Math.round(p.y);\n\t},\n\n\t_mouseMoveTimeout = null,\n\t_onFirstMouseMove = function() {\n\t\t// Wait until mouse move event is fired at least twice during 100ms\n\t\t// We do this, because some mobile browsers trigger it on touchstart\n\t\tif(_mouseMoveTimeout ) { \n\t\t\tframework.unbind(document, 'mousemove', _onFirstMouseMove);\n\t\t\tframework.addClass(template, 'pswp--has_mouse');\n\t\t\t_options.mouseUsed = true;\n\t\t\t_shout('mouseUsed');\n\t\t}\n\t\t_mouseMoveTimeout = setTimeout(function() {\n\t\t\t_mouseMoveTimeout = null;\n\t\t}, 100);\n\t},\n\n\t_bindEvents = function() {\n\t\tframework.bind(document, 'keydown', self);\n\n\t\tif(_features.transform) {\n\t\t\t// don't bind click event in browsers that don't support transform (mostly IE8)\n\t\t\tframework.bind(self.scrollWrap, 'click', self);\n\t\t}\n\t\t\n\n\t\tif(!_options.mouseUsed) {\n\t\t\tframework.bind(document, 'mousemove', _onFirstMouseMove);\n\t\t}\n\n\t\tframework.bind(window, 'resize scroll', self);\n\n\t\t_shout('bindEvents');\n\t},\n\n\t_unbindEvents = function() {\n\t\tframework.unbind(window, 'resize', self);\n\t\tframework.unbind(window, 'scroll', _globalEventHandlers.scroll);\n\t\tframework.unbind(document, 'keydown', self);\n\t\tframework.unbind(document, 'mousemove', _onFirstMouseMove);\n\n\t\tif(_features.transform) {\n\t\t\tframework.unbind(self.scrollWrap, 'click', self);\n\t\t}\n\n\t\tif(_isDragging) {\n\t\t\tframework.unbind(window, _upMoveEvents, self);\n\t\t}\n\n\t\t_shout('unbindEvents');\n\t},\n\t\n\t_calculatePanBounds = function(zoomLevel, update) {\n\t\tvar bounds = _calculateItemSize( self.currItem, _viewportSize, zoomLevel );\n\t\tif(update) {\n\t\t\t_currPanBounds = bounds;\n\t\t}\n\t\treturn bounds;\n\t},\n\t\n\t_getMinZoomLevel = function(item) {\n\t\tif(!item) {\n\t\t\titem = self.currItem;\n\t\t}\n\t\treturn item.initialZoomLevel;\n\t},\n\t_getMaxZoomLevel = function(item) {\n\t\tif(!item) {\n\t\t\titem = self.currItem;\n\t\t}\n\t\treturn item.w > 0 ? _options.maxSpreadZoom : 1;\n\t},\n\n\t// Return true if offset is out of the bounds\n\t_modifyDestPanOffset = function(axis, destPanBounds, destPanOffset, destZoomLevel) {\n\t\tif(destZoomLevel === self.currItem.initialZoomLevel) {\n\t\t\tdestPanOffset[axis] = self.currItem.initialPosition[axis];\n\t\t\treturn true;\n\t\t} else {\n\t\t\tdestPanOffset[axis] = _calculatePanOffset(axis, destZoomLevel); \n\n\t\t\tif(destPanOffset[axis] > destPanBounds.min[axis]) {\n\t\t\t\tdestPanOffset[axis] = destPanBounds.min[axis];\n\t\t\t\treturn true;\n\t\t\t} else if(destPanOffset[axis] < destPanBounds.max[axis] ) {\n\t\t\t\tdestPanOffset[axis] = destPanBounds.max[axis];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\n\t_setupTransforms = function() {\n\n\t\tif(_transformKey) {\n\t\t\t// setup 3d transforms\n\t\t\tvar allow3dTransform = _features.perspective && !_likelyTouchDevice;\n\t\t\t_translatePrefix = 'translate' + (allow3dTransform ? '3d(' : '(');\n\t\t\t_translateSufix = _features.perspective ? ', 0px)' : ')';\t\n\t\t\treturn;\n\t\t}\n\n\t\t// Override zoom/pan/move functions in case old browser is used (most likely IE)\n\t\t// (so they use left/top/width/height, instead of CSS transform)\n\t\n\t\t_transformKey = 'left';\n\t\tframework.addClass(template, 'pswp--ie');\n\n\t\t_setTranslateX = function(x, elStyle) {\n\t\t\telStyle.left = x + 'px';\n\t\t};\n\t\t_applyZoomPanToItem = function(item) {\n\n\t\t\tvar zoomRatio = item.fitRatio > 1 ? 1 : item.fitRatio,\n\t\t\t\ts = item.container.style,\n\t\t\t\tw = zoomRatio * item.w,\n\t\t\t\th = zoomRatio * item.h;\n\n\t\t\ts.width = w + 'px';\n\t\t\ts.height = h + 'px';\n\t\t\ts.left = item.initialPosition.x + 'px';\n\t\t\ts.top = item.initialPosition.y + 'px';\n\n\t\t};\n\t\t_applyCurrentZoomPan = function() {\n\t\t\tif(_currZoomElementStyle) {\n\n\t\t\t\tvar s = _currZoomElementStyle,\n\t\t\t\t\titem = self.currItem,\n\t\t\t\t\tzoomRatio = item.fitRatio > 1 ? 1 : item.fitRatio,\n\t\t\t\t\tw = zoomRatio * item.w,\n\t\t\t\t\th = zoomRatio * item.h;\n\n\t\t\t\ts.width = w + 'px';\n\t\t\t\ts.height = h + 'px';\n\n\n\t\t\t\ts.left = _panOffset.x + 'px';\n\t\t\t\ts.top = _panOffset.y + 'px';\n\t\t\t}\n\t\t\t\n\t\t};\n\t},\n\n\t_onKeyDown = function(e) {\n\t\tvar keydownAction = '';\n\t\tif(_options.escKey && e.keyCode === 27) { \n\t\t\tkeydownAction = 'close';\n\t\t} else if(_options.arrowKeys) {\n\t\t\tif(e.keyCode === 37) {\n\t\t\t\tkeydownAction = 'prev';\n\t\t\t} else if(e.keyCode === 39) { \n\t\t\t\tkeydownAction = 'next';\n\t\t\t}\n\t\t}\n\n\t\tif(keydownAction) {\n\t\t\t// don't do anything if special key pressed to prevent from overriding default browser actions\n\t\t\t// e.g. in Chrome on Mac cmd+arrow-left returns to previous page\n\t\t\tif( !e.ctrlKey && !e.altKey && !e.shiftKey && !e.metaKey ) {\n\t\t\t\tif(e.preventDefault) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t} else {\n\t\t\t\t\te.returnValue = false;\n\t\t\t\t} \n\t\t\t\tself[keydownAction]();\n\t\t\t}\n\t\t}\n\t},\n\n\t_onGlobalClick = function(e) {\n\t\tif(!e) {\n\t\t\treturn;\n\t\t}\n\n\t\t// don't allow click event to pass through when triggering after drag or some other gesture\n\t\tif(_moved || _zoomStarted || _mainScrollAnimating || _verticalDragInitiated) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\n\t_updatePageScrollOffset = function() {\n\t\tself.setScrollOffset(0, framework.getScrollY());\t\t\n\t};\n\t\n\n\n\t\n\n\n\n// Micro animation engine\nvar _animations = {},\n\t_numAnimations = 0,\n\t_stopAnimation = function(name) {\n\t\tif(_animations[name]) {\n\t\t\tif(_animations[name].raf) {\n\t\t\t\t_cancelAF( _animations[name].raf );\n\t\t\t}\n\t\t\t_numAnimations--;\n\t\t\tdelete _animations[name];\n\t\t}\n\t},\n\t_registerStartAnimation = function(name) {\n\t\tif(_animations[name]) {\n\t\t\t_stopAnimation(name);\n\t\t}\n\t\tif(!_animations[name]) {\n\t\t\t_numAnimations++;\n\t\t\t_animations[name] = {};\n\t\t}\n\t},\n\t_stopAllAnimations = function() {\n\t\tfor (var prop in _animations) {\n\n\t\t\tif( _animations.hasOwnProperty( prop ) ) {\n\t\t\t\t_stopAnimation(prop);\n\t\t\t} \n\t\t\t\n\t\t}\n\t},\n\t_animateProp = function(name, b, endProp, d, easingFn, onUpdate, onComplete) {\n\t\tvar startAnimTime = _getCurrentTime(), t;\n\t\t_registerStartAnimation(name);\n\n\t\tvar animloop = function(){\n\t\t\tif ( _animations[name] ) {\n\t\t\t\t\n\t\t\t\tt = _getCurrentTime() - startAnimTime; // time diff\n\t\t\t\t//b - beginning (start prop)\n\t\t\t\t//d - anim duration\n\n\t\t\t\tif ( t >= d ) {\n\t\t\t\t\t_stopAnimation(name);\n\t\t\t\t\tonUpdate(endProp);\n\t\t\t\t\tif(onComplete) {\n\t\t\t\t\t\tonComplete();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tonUpdate( (endProp - b) * easingFn(t/d) + b );\n\n\t\t\t\t_animations[name].raf = _requestAF(animloop);\n\t\t\t}\n\t\t};\n\t\tanimloop();\n\t};\n\t\n\n\nvar publicMethods = {\n\n\t// make a few local variables and functions public\n\tshout: _shout,\n\tlisten: _listen,\n\tviewportSize: _viewportSize,\n\toptions: _options,\n\n\tisMainScrollAnimating: function() {\n\t\treturn _mainScrollAnimating;\n\t},\n\tgetZoomLevel: function() {\n\t\treturn _currZoomLevel;\n\t},\n\tgetCurrentIndex: function() {\n\t\treturn _currentItemIndex;\n\t},\n\tisDragging: function() {\n\t\treturn _isDragging;\n\t},\t\n\tisZooming: function() {\n\t\treturn _isZooming;\n\t},\n\tsetScrollOffset: function(x,y) {\n\t\t_offset.x = x;\n\t\t_currentWindowScrollY = _offset.y = y;\n\t\t_shout('updateScrollOffset', _offset);\n\t},\n\tapplyZoomPan: function(zoomLevel,panX,panY,allowRenderResolution) {\n\t\t_panOffset.x = panX;\n\t\t_panOffset.y = panY;\n\t\t_currZoomLevel = zoomLevel;\n\t\t_applyCurrentZoomPan( allowRenderResolution );\n\t},\n\n\tinit: function() {\n\n\t\tif(_isOpen || _isDestroying) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar i;\n\n\t\tself.framework = framework; // basic functionality\n\t\tself.template = template; // root DOM element of PhotoSwipe\n\t\tself.bg = framework.getChildByClass(template, 'pswp__bg');\n\n\t\t_initalClassName = template.className;\n\t\t_isOpen = true;\n\t\t\t\t\n\t\t_features = framework.detectFeatures();\n\t\t_requestAF = _features.raf;\n\t\t_cancelAF = _features.caf;\n\t\t_transformKey = _features.transform;\n\t\t_oldIE = _features.oldIE;\n\t\t\n\t\tself.scrollWrap = framework.getChildByClass(template, 'pswp__scroll-wrap');\n\t\tself.container = framework.getChildByClass(self.scrollWrap, 'pswp__container');\n\n\t\t_containerStyle = self.container.style; // for fast access\n\n\t\t// Objects that hold slides (there are only 3 in DOM)\n\t\tself.itemHolders = _itemHolders = [\n\t\t\t{el:self.container.children[0] , wrap:0, index: -1},\n\t\t\t{el:self.container.children[1] , wrap:0, index: -1},\n\t\t\t{el:self.container.children[2] , wrap:0, index: -1}\n\t\t];\n\n\t\t// hide nearby item holders until initial zoom animation finishes (to avoid extra Paints)\n\t\t_itemHolders[0].el.style.display = _itemHolders[2].el.style.display = 'none';\n\n\t\t_setupTransforms();\n\n\t\t// Setup global events\n\t\t_globalEventHandlers = {\n\t\t\tresize: self.updateSize,\n\t\t\tscroll: _updatePageScrollOffset,\n\t\t\tkeydown: _onKeyDown,\n\t\t\tclick: _onGlobalClick\n\t\t};\n\n\t\t// disable show/hide effects on old browsers that don't support CSS animations or transforms, \n\t\t// old IOS, Android and Opera mobile. Blackberry seems to work fine, even older models.\n\t\tvar oldPhone = _features.isOldIOSPhone || _features.isOldAndroid || _features.isMobileOpera;\n\t\tif(!_features.animationName || !_features.transform || oldPhone) {\n\t\t\t_options.showAnimationDuration = _options.hideAnimationDuration = 0;\n\t\t}\n\n\t\t// init modules\n\t\tfor(i = 0; i < _modules.length; i++) {\n\t\t\tself['init' + _modules[i]]();\n\t\t}\n\t\t\n\t\t// init\n\t\tif(UiClass) {\n\t\t\tvar ui = self.ui = new UiClass(self, framework);\n\t\t\tui.init();\n\t\t}\n\n\t\t_shout('firstUpdate');\n\t\t_currentItemIndex = _currentItemIndex || _options.index || 0;\n\t\t// validate index\n\t\tif( isNaN(_currentItemIndex) || _currentItemIndex < 0 || _currentItemIndex >= _getNumItems() ) {\n\t\t\t_currentItemIndex = 0;\n\t\t}\n\t\tself.currItem = _getItemAt( _currentItemIndex );\n\n\t\t\n\t\tif(_features.isOldIOSPhone || _features.isOldAndroid) {\n\t\t\t_isFixedPosition = false;\n\t\t}\n\t\t\n\t\ttemplate.setAttribute('aria-hidden', 'false');\n\t\tif(_options.modal) {\n\t\t\tif(!_isFixedPosition) {\n\t\t\t\ttemplate.style.position = 'absolute';\n\t\t\t\ttemplate.style.top = framework.getScrollY() + 'px';\n\t\t\t} else {\n\t\t\t\ttemplate.style.position = 'fixed';\n\t\t\t}\n\t\t}\n\n\t\tif(_currentWindowScrollY === undefined) {\n\t\t\t_shout('initialLayout');\n\t\t\t_currentWindowScrollY = _initalWindowScrollY = framework.getScrollY();\n\t\t}\n\t\t\n\t\t// add classes to root element of PhotoSwipe\n\t\tvar rootClasses = 'pswp--open ';\n\t\tif(_options.mainClass) {\n\t\t\trootClasses += _options.mainClass + ' ';\n\t\t}\n\t\tif(_options.showHideOpacity) {\n\t\t\trootClasses += 'pswp--animate_opacity ';\n\t\t}\n\t\trootClasses += _likelyTouchDevice ? 'pswp--touch' : 'pswp--notouch';\n\t\trootClasses += _features.animationName ? ' pswp--css_animation' : '';\n\t\trootClasses += _features.svg ? ' pswp--svg' : '';\n\t\tframework.addClass(template, rootClasses);\n\n\t\tself.updateSize();\n\n\t\t// initial update\n\t\t_containerShiftIndex = -1;\n\t\t_indexDiff = null;\n\t\tfor(i = 0; i < NUM_HOLDERS; i++) {\n\t\t\t_setTranslateX( (i+_containerShiftIndex) * _slideSize.x, _itemHolders[i].el.style);\n\t\t}\n\n\t\tif(!_oldIE) {\n\t\t\tframework.bind(self.scrollWrap, _downEvents, self); // no dragging for old IE\n\t\t}\t\n\n\t\t_listen('initialZoomInEnd', function() {\n\t\t\tself.setContent(_itemHolders[0], _currentItemIndex-1);\n\t\t\tself.setContent(_itemHolders[2], _currentItemIndex+1);\n\n\t\t\t_itemHolders[0].el.style.display = _itemHolders[2].el.style.display = 'block';\n\n\t\t\tif(_options.focus) {\n\t\t\t\t// focus causes layout, \n\t\t\t\t// which causes lag during the animation, \n\t\t\t\t// that's why we delay it untill the initial zoom transition ends\n\t\t\t\ttemplate.focus();\n\t\t\t}\n\t\t\t \n\n\t\t\t_bindEvents();\n\t\t});\n\n\t\t// set content for center slide (first time)\n\t\tself.setContent(_itemHolders[1], _currentItemIndex);\n\t\t\n\t\tself.updateCurrItem();\n\n\t\t_shout('afterInit');\n\n\t\tif(!_isFixedPosition) {\n\n\t\t\t// On all versions of iOS lower than 8.0, we check size of viewport every second.\n\t\t\t// \n\t\t\t// This is done to detect when Safari top & bottom bars appear, \n\t\t\t// as this action doesn't trigger any events (like resize). \n\t\t\t// \n\t\t\t// On iOS8 they fixed this.\n\t\t\t// \n\t\t\t// 10 Nov 2014: iOS 7 usage ~40%. iOS 8 usage 56%.\n\t\t\t\n\t\t\t_updateSizeInterval = setInterval(function() {\n\t\t\t\tif(!_numAnimations && !_isDragging && !_isZooming && (_currZoomLevel === self.currItem.initialZoomLevel)  ) {\n\t\t\t\t\tself.updateSize();\n\t\t\t\t}\n\t\t\t}, 1000);\n\t\t}\n\n\t\tframework.addClass(template, 'pswp--visible');\n\t},\n\n\t// Close the gallery, then destroy it\n\tclose: function() {\n\t\tif(!_isOpen) {\n\t\t\treturn;\n\t\t}\n\n\t\t_isOpen = false;\n\t\t_isDestroying = true;\n\t\t_shout('close');\n\t\t_unbindEvents();\n\n\t\t_showOrHide(self.currItem, null, true, self.destroy);\n\t},\n\n\t// destroys the gallery (unbinds events, cleans up intervals and timeouts to avoid memory leaks)\n\tdestroy: function() {\n\t\t_shout('destroy');\n\n\t\tif(_showOrHideTimeout) {\n\t\t\tclearTimeout(_showOrHideTimeout);\n\t\t}\n\t\t\n\t\ttemplate.setAttribute('aria-hidden', 'true');\n\t\ttemplate.className = _initalClassName;\n\n\t\tif(_updateSizeInterval) {\n\t\t\tclearInterval(_updateSizeInterval);\n\t\t}\n\n\t\tframework.unbind(self.scrollWrap, _downEvents, self);\n\n\t\t// we unbind scroll event at the end, as closing animation may depend on it\n\t\tframework.unbind(window, 'scroll', self);\n\n\t\t_stopDragUpdateLoop();\n\n\t\t_stopAllAnimations();\n\n\t\t_listeners = null;\n\t},\n\n\t/**\n\t * Pan image to position\n\t * @param {Number} x     \n\t * @param {Number} y     \n\t * @param {Boolean} force Will ignore bounds if set to true.\n\t */\n\tpanTo: function(x,y,force) {\n\t\tif(!force) {\n\t\t\tif(x > _currPanBounds.min.x) {\n\t\t\t\tx = _currPanBounds.min.x;\n\t\t\t} else if(x < _currPanBounds.max.x) {\n\t\t\t\tx = _currPanBounds.max.x;\n\t\t\t}\n\n\t\t\tif(y > _currPanBounds.min.y) {\n\t\t\t\ty = _currPanBounds.min.y;\n\t\t\t} else if(y < _currPanBounds.max.y) {\n\t\t\t\ty = _currPanBounds.max.y;\n\t\t\t}\n\t\t}\n\t\t\n\t\t_panOffset.x = x;\n\t\t_panOffset.y = y;\n\t\t_applyCurrentZoomPan();\n\t},\n\t\n\thandleEvent: function (e) {\n\t\te = e || window.event;\n\t\tif(_globalEventHandlers[e.type]) {\n\t\t\t_globalEventHandlers[e.type](e);\n\t\t}\n\t},\n\n\n\tgoTo: function(index) {\n\n\t\tindex = _getLoopedId(index);\n\n\t\tvar diff = index - _currentItemIndex;\n\t\t_indexDiff = diff;\n\n\t\t_currentItemIndex = index;\n\t\tself.currItem = _getItemAt( _currentItemIndex );\n\t\t_currPositionIndex -= diff;\n\t\t\n\t\t_moveMainScroll(_slideSize.x * _currPositionIndex);\n\t\t\n\n\t\t_stopAllAnimations();\n\t\t_mainScrollAnimating = false;\n\n\t\tself.updateCurrItem();\n\t},\n\tnext: function() {\n\t\tself.goTo( _currentItemIndex + 1);\n\t},\n\tprev: function() {\n\t\tself.goTo( _currentItemIndex - 1);\n\t},\n\n\t// update current zoom/pan objects\n\tupdateCurrZoomItem: function(emulateSetContent) {\n\t\tif(emulateSetContent) {\n\t\t\t_shout('beforeChange', 0);\n\t\t}\n\n\t\t// itemHolder[1] is middle (current) item\n\t\tif(_itemHolders[1].el.children.length) {\n\t\t\tvar zoomElement = _itemHolders[1].el.children[0];\n\t\t\tif( framework.hasClass(zoomElement, 'pswp__zoom-wrap') ) {\n\t\t\t\t_currZoomElementStyle = zoomElement.style;\n\t\t\t} else {\n\t\t\t\t_currZoomElementStyle = null;\n\t\t\t}\n\t\t} else {\n\t\t\t_currZoomElementStyle = null;\n\t\t}\n\t\t\n\t\t_currPanBounds = self.currItem.bounds;\t\n\t\t_startZoomLevel = _currZoomLevel = self.currItem.initialZoomLevel;\n\n\t\t_panOffset.x = _currPanBounds.center.x;\n\t\t_panOffset.y = _currPanBounds.center.y;\n\n\t\tif(emulateSetContent) {\n\t\t\t_shout('afterChange');\n\t\t}\n\t},\n\n\n\tinvalidateCurrItems: function() {\n\t\t_itemsNeedUpdate = true;\n\t\tfor(var i = 0; i < NUM_HOLDERS; i++) {\n\t\t\tif( _itemHolders[i].item ) {\n\t\t\t\t_itemHolders[i].item.needsUpdate = true;\n\t\t\t}\n\t\t}\n\t},\n\n\tupdateCurrItem: function(beforeAnimation) {\n\n\t\tif(_indexDiff === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar diffAbs = Math.abs(_indexDiff),\n\t\t\ttempHolder;\n\n\t\tif(beforeAnimation && diffAbs < 2) {\n\t\t\treturn;\n\t\t}\n\n\n\t\tself.currItem = _getItemAt( _currentItemIndex );\n\t\t_renderMaxResolution = false;\n\t\t\n\t\t_shout('beforeChange', _indexDiff);\n\n\t\tif(diffAbs >= NUM_HOLDERS) {\n\t\t\t_containerShiftIndex += _indexDiff + (_indexDiff > 0 ? -NUM_HOLDERS : NUM_HOLDERS);\n\t\t\tdiffAbs = NUM_HOLDERS;\n\t\t}\n\t\tfor(var i = 0; i < diffAbs; i++) {\n\t\t\tif(_indexDiff > 0) {\n\t\t\t\ttempHolder = _itemHolders.shift();\n\t\t\t\t_itemHolders[NUM_HOLDERS-1] = tempHolder; // move first to last\n\n\t\t\t\t_containerShiftIndex++;\n\t\t\t\t_setTranslateX( (_containerShiftIndex+2) * _slideSize.x, tempHolder.el.style);\n\t\t\t\tself.setContent(tempHolder, _currentItemIndex - diffAbs + i + 1 + 1);\n\t\t\t} else {\n\t\t\t\ttempHolder = _itemHolders.pop();\n\t\t\t\t_itemHolders.unshift( tempHolder ); // move last to first\n\n\t\t\t\t_containerShiftIndex--;\n\t\t\t\t_setTranslateX( _containerShiftIndex * _slideSize.x, tempHolder.el.style);\n\t\t\t\tself.setContent(tempHolder, _currentItemIndex + diffAbs - i - 1 - 1);\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\t// reset zoom/pan on previous item\n\t\tif(_currZoomElementStyle && Math.abs(_indexDiff) === 1) {\n\n\t\t\tvar prevItem = _getItemAt(_prevItemIndex);\n\t\t\tif(prevItem.initialZoomLevel !== _currZoomLevel) {\n\t\t\t\t_calculateItemSize(prevItem , _viewportSize );\n\t\t\t\t_setImageSize(prevItem);\n\t\t\t\t_applyZoomPanToItem( prevItem ); \t\t\t\t\n\t\t\t}\n\n\t\t}\n\n\t\t// reset diff after update\n\t\t_indexDiff = 0;\n\n\t\tself.updateCurrZoomItem();\n\n\t\t_prevItemIndex = _currentItemIndex;\n\n\t\t_shout('afterChange');\n\t\t\n\t},\n\n\n\n\tupdateSize: function(force) {\n\t\t\n\t\tif(!_isFixedPosition && _options.modal) {\n\t\t\tvar windowScrollY = framework.getScrollY();\n\t\t\tif(_currentWindowScrollY !== windowScrollY) {\n\t\t\t\ttemplate.style.top = windowScrollY + 'px';\n\t\t\t\t_currentWindowScrollY = windowScrollY;\n\t\t\t}\n\t\t\tif(!force && _windowVisibleSize.x === window.innerWidth && _windowVisibleSize.y === window.innerHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t_windowVisibleSize.x = window.innerWidth;\n\t\t\t_windowVisibleSize.y = window.innerHeight;\n\n\t\t\t//template.style.width = _windowVisibleSize.x + 'px';\n\t\t\ttemplate.style.height = _windowVisibleSize.y + 'px';\n\t\t}\n\n\n\n\t\t_viewportSize.x = self.scrollWrap.clientWidth;\n\t\t_viewportSize.y = self.scrollWrap.clientHeight;\n\n\t\t_updatePageScrollOffset();\n\n\t\t_slideSize.x = _viewportSize.x + Math.round(_viewportSize.x * _options.spacing);\n\t\t_slideSize.y = _viewportSize.y;\n\n\t\t_moveMainScroll(_slideSize.x * _currPositionIndex);\n\n\t\t_shout('beforeResize'); // even may be used for example to switch image sources\n\n\n\t\t// don't re-calculate size on inital size update\n\t\tif(_containerShiftIndex !== undefined) {\n\n\t\t\tvar holder,\n\t\t\t\titem,\n\t\t\t\thIndex;\n\n\t\t\tfor(var i = 0; i < NUM_HOLDERS; i++) {\n\t\t\t\tholder = _itemHolders[i];\n\t\t\t\t_setTranslateX( (i+_containerShiftIndex) * _slideSize.x, holder.el.style);\n\n\t\t\t\thIndex = _currentItemIndex+i-1;\n\n\t\t\t\tif(_options.loop && _getNumItems() > 2) {\n\t\t\t\t\thIndex = _getLoopedId(hIndex);\n\t\t\t\t}\n\n\t\t\t\t// update zoom level on items and refresh source (if needsUpdate)\n\t\t\t\titem = _getItemAt( hIndex );\n\n\t\t\t\t// re-render gallery item if `needsUpdate`,\n\t\t\t\t// or doesn't have `bounds` (entirely new slide object)\n\t\t\t\tif( item && (_itemsNeedUpdate || item.needsUpdate || !item.bounds) ) {\n\n\t\t\t\t\tself.cleanSlide( item );\n\t\t\t\t\t\n\t\t\t\t\tself.setContent( holder, hIndex );\n\n\t\t\t\t\t// if \"center\" slide\n\t\t\t\t\tif(i === 1) {\n\t\t\t\t\t\tself.currItem = item;\n\t\t\t\t\t\tself.updateCurrZoomItem(true);\n\t\t\t\t\t}\n\n\t\t\t\t\titem.needsUpdate = false;\n\n\t\t\t\t} else if(holder.index === -1 && hIndex >= 0) {\n\t\t\t\t\t// add content first time\n\t\t\t\t\tself.setContent( holder, hIndex );\n\t\t\t\t}\n\t\t\t\tif(item && item.container) {\n\t\t\t\t\t_calculateItemSize(item, _viewportSize);\n\t\t\t\t\t_setImageSize(item);\n\t\t\t\t\t_applyZoomPanToItem( item );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t_itemsNeedUpdate = false;\n\t\t}\t\n\n\t\t_startZoomLevel = _currZoomLevel = self.currItem.initialZoomLevel;\n\t\t_currPanBounds = self.currItem.bounds;\n\n\t\tif(_currPanBounds) {\n\t\t\t_panOffset.x = _currPanBounds.center.x;\n\t\t\t_panOffset.y = _currPanBounds.center.y;\n\t\t\t_applyCurrentZoomPan( true );\n\t\t}\n\t\t\n\t\t_shout('resize');\n\t},\n\t\n\t// Zoom current item to\n\tzoomTo: function(destZoomLevel, centerPoint, speed, easingFn, updateFn) {\n\t\t/*\n\t\t\tif(destZoomLevel === 'fit') {\n\t\t\t\tdestZoomLevel = self.currItem.fitRatio;\n\t\t\t} else if(destZoomLevel === 'fill') {\n\t\t\t\tdestZoomLevel = self.currItem.fillRatio;\n\t\t\t}\n\t\t*/\n\n\t\tif(centerPoint) {\n\t\t\t_startZoomLevel = _currZoomLevel;\n\t\t\t_midZoomPoint.x = Math.abs(centerPoint.x) - _panOffset.x ;\n\t\t\t_midZoomPoint.y = Math.abs(centerPoint.y) - _panOffset.y ;\n\t\t\t_equalizePoints(_startPanOffset, _panOffset);\n\t\t}\n\n\t\tvar destPanBounds = _calculatePanBounds(destZoomLevel, false),\n\t\t\tdestPanOffset = {};\n\n\t\t_modifyDestPanOffset('x', destPanBounds, destPanOffset, destZoomLevel);\n\t\t_modifyDestPanOffset('y', destPanBounds, destPanOffset, destZoomLevel);\n\n\t\tvar initialZoomLevel = _currZoomLevel;\n\t\tvar initialPanOffset = {\n\t\t\tx: _panOffset.x,\n\t\t\ty: _panOffset.y\n\t\t};\n\n\t\t_roundPoint(destPanOffset);\n\n\t\tvar onUpdate = function(now) {\n\t\t\tif(now === 1) {\n\t\t\t\t_currZoomLevel = destZoomLevel;\n\t\t\t\t_panOffset.x = destPanOffset.x;\n\t\t\t\t_panOffset.y = destPanOffset.y;\n\t\t\t} else {\n\t\t\t\t_currZoomLevel = (destZoomLevel - initialZoomLevel) * now + initialZoomLevel;\n\t\t\t\t_panOffset.x = (destPanOffset.x - initialPanOffset.x) * now + initialPanOffset.x;\n\t\t\t\t_panOffset.y = (destPanOffset.y - initialPanOffset.y) * now + initialPanOffset.y;\n\t\t\t}\n\n\t\t\tif(updateFn) {\n\t\t\t\tupdateFn(now);\n\t\t\t}\n\n\t\t\t_applyCurrentZoomPan( now === 1 );\n\t\t};\n\n\t\tif(speed) {\n\t\t\t_animateProp('customZoomTo', 0, 1, speed, easingFn || framework.easing.sine.inOut, onUpdate);\n\t\t} else {\n\t\t\tonUpdate(1);\n\t\t}\n\t}\n\n\n};\n\n\n/*>>core*/\n\n/*>>gestures*/\n/**\n * Mouse/touch/pointer event handlers.\n * \n * separated from @core.js for readability\n */\n\nvar MIN_SWIPE_DISTANCE = 30,\n\tDIRECTION_CHECK_OFFSET = 10; // amount of pixels to drag to determine direction of swipe\n\nvar _gestureStartTime,\n\t_gestureCheckSpeedTime,\n\n\t// pool of objects that are used during dragging of zooming\n\tp = {}, // first point\n\tp2 = {}, // second point (for zoom gesture)\n\tdelta = {},\n\t_currPoint = {},\n\t_startPoint = {},\n\t_currPointers = [],\n\t_startMainScrollPos = {},\n\t_releaseAnimData,\n\t_posPoints = [], // array of points during dragging, used to determine type of gesture\n\t_tempPoint = {},\n\n\t_isZoomingIn,\n\t_verticalDragInitiated,\n\t_oldAndroidTouchEndTimeout,\n\t_currZoomedItemIndex = 0,\n\t_centerPoint = _getEmptyPoint(),\n\t_lastReleaseTime = 0,\n\t_isDragging, // at least one pointer is down\n\t_isMultitouch, // at least two _pointers are down\n\t_zoomStarted, // zoom level changed during zoom gesture\n\t_moved,\n\t_dragAnimFrame,\n\t_mainScrollShifted,\n\t_currentPoints, // array of current touch points\n\t_isZooming,\n\t_currPointsDistance,\n\t_startPointsDistance,\n\t_currPanBounds,\n\t_mainScrollPos = _getEmptyPoint(),\n\t_currZoomElementStyle,\n\t_mainScrollAnimating, // true, if animation after swipe gesture is running\n\t_midZoomPoint = _getEmptyPoint(),\n\t_currCenterPoint = _getEmptyPoint(),\n\t_direction,\n\t_isFirstMove,\n\t_opacityChanged,\n\t_bgOpacity,\n\t_wasOverInitialZoom,\n\n\t_isEqualPoints = function(p1, p2) {\n\t\treturn p1.x === p2.x && p1.y === p2.y;\n\t},\n\t_isNearbyPoints = function(touch0, touch1) {\n\t\treturn Math.abs(touch0.x - touch1.x) < DOUBLE_TAP_RADIUS && Math.abs(touch0.y - touch1.y) < DOUBLE_TAP_RADIUS;\n\t},\n\t_calculatePointsDistance = function(p1, p2) {\n\t\t_tempPoint.x = Math.abs( p1.x - p2.x );\n\t\t_tempPoint.y = Math.abs( p1.y - p2.y );\n\t\treturn Math.sqrt(_tempPoint.x * _tempPoint.x + _tempPoint.y * _tempPoint.y);\n\t},\n\t_stopDragUpdateLoop = function() {\n\t\tif(_dragAnimFrame) {\n\t\t\t_cancelAF(_dragAnimFrame);\n\t\t\t_dragAnimFrame = null;\n\t\t}\n\t},\n\t_dragUpdateLoop = function() {\n\t\tif(_isDragging) {\n\t\t\t_dragAnimFrame = _requestAF(_dragUpdateLoop);\n\t\t\t_renderMovement();\n\t\t}\n\t},\n\t_canPan = function() {\n\t\treturn !(_options.scaleMode === 'fit' && _currZoomLevel ===  self.currItem.initialZoomLevel);\n\t},\n\t\n\t// find the closest parent DOM element\n\t_closestElement = function(el, fn) {\n\t  \tif(!el || el === document) {\n\t  \t\treturn false;\n\t  \t}\n\n\t  \t// don't search elements above pswp__scroll-wrap\n\t  \tif(el.getAttribute('class') && el.getAttribute('class').indexOf('pswp__scroll-wrap') > -1 ) {\n\t  \t\treturn false;\n\t  \t}\n\n\t  \tif( fn(el) ) {\n\t  \t\treturn el;\n\t  \t}\n\n\t  \treturn _closestElement(el.parentNode, fn);\n\t},\n\n\t_preventObj = {},\n\t_preventDefaultEventBehaviour = function(e, isDown) {\n\t    _preventObj.prevent = !_closestElement(e.target, _options.isClickableElement);\n\n\t\t_shout('preventDragEvent', e, isDown, _preventObj);\n\t\treturn _preventObj.prevent;\n\n\t},\n\t_convertTouchToPoint = function(touch, p) {\n\t\tp.x = touch.pageX;\n\t\tp.y = touch.pageY;\n\t\tp.id = touch.identifier;\n\t\treturn p;\n\t},\n\t_findCenterOfPoints = function(p1, p2, pCenter) {\n\t\tpCenter.x = (p1.x + p2.x) * 0.5;\n\t\tpCenter.y = (p1.y + p2.y) * 0.5;\n\t},\n\t_pushPosPoint = function(time, x, y) {\n\t\tif(time - _gestureCheckSpeedTime > 50) {\n\t\t\tvar o = _posPoints.length > 2 ? _posPoints.shift() : {};\n\t\t\to.x = x;\n\t\t\to.y = y; \n\t\t\t_posPoints.push(o);\n\t\t\t_gestureCheckSpeedTime = time;\n\t\t}\n\t},\n\n\t_calculateVerticalDragOpacityRatio = function() {\n\t\tvar yOffset = _panOffset.y - self.currItem.initialPosition.y; // difference between initial and current position\n\t\treturn 1 -  Math.abs( yOffset / (_viewportSize.y / 2)  );\n\t},\n\n\t\n\t// points pool, reused during touch events\n\t_ePoint1 = {},\n\t_ePoint2 = {},\n\t_tempPointsArr = [],\n\t_tempCounter,\n\t_getTouchPoints = function(e) {\n\t\t// clean up previous points, without recreating array\n\t\twhile(_tempPointsArr.length > 0) {\n\t\t\t_tempPointsArr.pop();\n\t\t}\n\n\t\tif(!_pointerEventEnabled) {\n\t\t\tif(e.type.indexOf('touch') > -1) {\n\n\t\t\t\tif(e.touches && e.touches.length > 0) {\n\t\t\t\t\t_tempPointsArr[0] = _convertTouchToPoint(e.touches[0], _ePoint1);\n\t\t\t\t\tif(e.touches.length > 1) {\n\t\t\t\t\t\t_tempPointsArr[1] = _convertTouchToPoint(e.touches[1], _ePoint2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t_ePoint1.x = e.pageX;\n\t\t\t\t_ePoint1.y = e.pageY;\n\t\t\t\t_ePoint1.id = '';\n\t\t\t\t_tempPointsArr[0] = _ePoint1;//_ePoint1;\n\t\t\t}\n\t\t} else {\n\t\t\t_tempCounter = 0;\n\t\t\t// we can use forEach, as pointer events are supported only in modern browsers\n\t\t\t_currPointers.forEach(function(p) {\n\t\t\t\tif(_tempCounter === 0) {\n\t\t\t\t\t_tempPointsArr[0] = p;\n\t\t\t\t} else if(_tempCounter === 1) {\n\t\t\t\t\t_tempPointsArr[1] = p;\n\t\t\t\t}\n\t\t\t\t_tempCounter++;\n\n\t\t\t});\n\t\t}\n\t\treturn _tempPointsArr;\n\t},\n\n\t_panOrMoveMainScroll = function(axis, delta) {\n\n\t\tvar panFriction,\n\t\t\toverDiff = 0,\n\t\t\tnewOffset = _panOffset[axis] + delta[axis],\n\t\t\tstartOverDiff,\n\t\t\tdir = delta[axis] > 0,\n\t\t\tnewMainScrollPosition = _mainScrollPos.x + delta.x,\n\t\t\tmainScrollDiff = _mainScrollPos.x - _startMainScrollPos.x,\n\t\t\tnewPanPos,\n\t\t\tnewMainScrollPos;\n\n\t\t// calculate fdistance over the bounds and friction\n\t\tif(newOffset > _currPanBounds.min[axis] || newOffset < _currPanBounds.max[axis]) {\n\t\t\tpanFriction = _options.panEndFriction;\n\t\t\t// Linear increasing of friction, so at 1/4 of viewport it's at max value. \n\t\t\t// Looks not as nice as was expected. Left for history.\n\t\t\t// panFriction = (1 - (_panOffset[axis] + delta[axis] + panBounds.min[axis]) / (_viewportSize[axis] / 4) );\n\t\t} else {\n\t\t\tpanFriction = 1;\n\t\t}\n\t\t\n\t\tnewOffset = _panOffset[axis] + delta[axis] * panFriction;\n\n\t\t// move main scroll or start panning\n\t\tif(_options.allowPanToNext || _currZoomLevel === self.currItem.initialZoomLevel) {\n\n\n\t\t\tif(!_currZoomElementStyle) {\n\t\t\t\t\n\t\t\t\tnewMainScrollPos = newMainScrollPosition;\n\n\t\t\t} else if(_direction === 'h' && axis === 'x' && !_zoomStarted ) {\n\t\t\t\t\n\t\t\t\tif(dir) {\n\t\t\t\t\tif(newOffset > _currPanBounds.min[axis]) {\n\t\t\t\t\t\tpanFriction = _options.panEndFriction;\n\t\t\t\t\t\toverDiff = _currPanBounds.min[axis] - newOffset;\n\t\t\t\t\t\tstartOverDiff = _currPanBounds.min[axis] - _startPanOffset[axis];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// drag right\n\t\t\t\t\tif( (startOverDiff <= 0 || mainScrollDiff < 0) && _getNumItems() > 1 ) {\n\t\t\t\t\t\tnewMainScrollPos = newMainScrollPosition;\n\t\t\t\t\t\tif(mainScrollDiff < 0 && newMainScrollPosition > _startMainScrollPos.x) {\n\t\t\t\t\t\t\tnewMainScrollPos = _startMainScrollPos.x;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(_currPanBounds.min.x !== _currPanBounds.max.x) {\n\t\t\t\t\t\t\tnewPanPos = newOffset;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif(newOffset < _currPanBounds.max[axis] ) {\n\t\t\t\t\t\tpanFriction =_options.panEndFriction;\n\t\t\t\t\t\toverDiff = newOffset - _currPanBounds.max[axis];\n\t\t\t\t\t\tstartOverDiff = _startPanOffset[axis] - _currPanBounds.max[axis];\n\t\t\t\t\t}\n\n\t\t\t\t\tif( (startOverDiff <= 0 || mainScrollDiff > 0) && _getNumItems() > 1 ) {\n\t\t\t\t\t\tnewMainScrollPos = newMainScrollPosition;\n\n\t\t\t\t\t\tif(mainScrollDiff > 0 && newMainScrollPosition < _startMainScrollPos.x) {\n\t\t\t\t\t\t\tnewMainScrollPos = _startMainScrollPos.x;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(_currPanBounds.min.x !== _currPanBounds.max.x) {\n\t\t\t\t\t\t\tnewPanPos = newOffset;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t\t//\n\t\t\t}\n\n\t\t\tif(axis === 'x') {\n\n\t\t\t\tif(newMainScrollPos !== undefined) {\n\t\t\t\t\t_moveMainScroll(newMainScrollPos, true);\n\t\t\t\t\tif(newMainScrollPos === _startMainScrollPos.x) {\n\t\t\t\t\t\t_mainScrollShifted = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_mainScrollShifted = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(_currPanBounds.min.x !== _currPanBounds.max.x) {\n\t\t\t\t\tif(newPanPos !== undefined) {\n\t\t\t\t\t\t_panOffset.x = newPanPos;\n\t\t\t\t\t} else if(!_mainScrollShifted) {\n\t\t\t\t\t\t_panOffset.x += delta.x * panFriction;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn newMainScrollPos !== undefined;\n\t\t\t}\n\n\t\t}\n\n\t\tif(!_mainScrollAnimating) {\n\t\t\t\n\t\t\tif(!_mainScrollShifted) {\n\t\t\t\tif(_currZoomLevel > self.currItem.fitRatio) {\n\t\t\t\t\t_panOffset[axis] += delta[axis] * panFriction;\n\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\n\t\t}\n\t\t\n\t},\n\n\t// Pointerdown/touchstart/mousedown handler\n\t_onDragStart = function(e) {\n\n\t\t// Allow dragging only via left mouse button.\n\t\t// As this handler is not added in IE8 - we ignore e.which\n\t\t// \n\t\t// http://www.quirksmode.org/js/events_properties.html\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/event.button\n\t\tif(e.type === 'mousedown' && e.button > 0  ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif(_initialZoomRunning) {\n\t\t\te.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tif(_oldAndroidTouchEndTimeout && e.type === 'mousedown') {\n\t\t\treturn;\n\t\t}\n\n\t\tif(_preventDefaultEventBehaviour(e, true)) {\n\t\t\te.preventDefault();\n\t\t}\n\n\n\n\t\t_shout('pointerDown');\n\n\t\tif(_pointerEventEnabled) {\n\t\t\tvar pointerIndex = framework.arraySearch(_currPointers, e.pointerId, 'id');\n\t\t\tif(pointerIndex < 0) {\n\t\t\t\tpointerIndex = _currPointers.length;\n\t\t\t}\n\t\t\t_currPointers[pointerIndex] = {x:e.pageX, y:e.pageY, id: e.pointerId};\n\t\t}\n\t\t\n\n\n\t\tvar startPointsList = _getTouchPoints(e),\n\t\t\tnumPoints = startPointsList.length;\n\n\t\t_currentPoints = null;\n\n\t\t_stopAllAnimations();\n\n\t\t// init drag\n\t\tif(!_isDragging || numPoints === 1) {\n\n\t\t\t\n\n\t\t\t_isDragging = _isFirstMove = true;\n\t\t\tframework.bind(window, _upMoveEvents, self);\n\n\t\t\t_isZoomingIn = \n\t\t\t\t_wasOverInitialZoom = \n\t\t\t\t_opacityChanged = \n\t\t\t\t_verticalDragInitiated = \n\t\t\t\t_mainScrollShifted = \n\t\t\t\t_moved = \n\t\t\t\t_isMultitouch = \n\t\t\t\t_zoomStarted = false;\n\n\t\t\t_direction = null;\n\n\t\t\t_shout('firstTouchStart', startPointsList);\n\n\t\t\t_equalizePoints(_startPanOffset, _panOffset);\n\n\t\t\t_currPanDist.x = _currPanDist.y = 0;\n\t\t\t_equalizePoints(_currPoint, startPointsList[0]);\n\t\t\t_equalizePoints(_startPoint, _currPoint);\n\n\t\t\t//_equalizePoints(_startMainScrollPos, _mainScrollPos);\n\t\t\t_startMainScrollPos.x = _slideSize.x * _currPositionIndex;\n\n\t\t\t_posPoints = [{\n\t\t\t\tx: _currPoint.x,\n\t\t\t\ty: _currPoint.y\n\t\t\t}];\n\n\t\t\t_gestureCheckSpeedTime = _gestureStartTime = _getCurrentTime();\n\n\t\t\t//_mainScrollAnimationEnd(true);\n\t\t\t_calculatePanBounds( _currZoomLevel, true );\n\t\t\t\n\t\t\t// Start rendering\n\t\t\t_stopDragUpdateLoop();\n\t\t\t_dragUpdateLoop();\n\t\t\t\n\t\t}\n\n\t\t// init zoom\n\t\tif(!_isZooming && numPoints > 1 && !_mainScrollAnimating && !_mainScrollShifted) {\n\t\t\t_startZoomLevel = _currZoomLevel;\n\t\t\t_zoomStarted = false; // true if zoom changed at least once\n\n\t\t\t_isZooming = _isMultitouch = true;\n\t\t\t_currPanDist.y = _currPanDist.x = 0;\n\n\t\t\t_equalizePoints(_startPanOffset, _panOffset);\n\n\t\t\t_equalizePoints(p, startPointsList[0]);\n\t\t\t_equalizePoints(p2, startPointsList[1]);\n\n\t\t\t_findCenterOfPoints(p, p2, _currCenterPoint);\n\n\t\t\t_midZoomPoint.x = Math.abs(_currCenterPoint.x) - _panOffset.x;\n\t\t\t_midZoomPoint.y = Math.abs(_currCenterPoint.y) - _panOffset.y;\n\t\t\t_currPointsDistance = _startPointsDistance = _calculatePointsDistance(p, p2);\n\t\t}\n\n\n\t},\n\n\t// Pointermove/touchmove/mousemove handler\n\t_onDragMove = function(e) {\n\n\t\te.preventDefault();\n\n\t\tif(_pointerEventEnabled) {\n\t\t\tvar pointerIndex = framework.arraySearch(_currPointers, e.pointerId, 'id');\n\t\t\tif(pointerIndex > -1) {\n\t\t\t\tvar p = _currPointers[pointerIndex];\n\t\t\t\tp.x = e.pageX;\n\t\t\t\tp.y = e.pageY; \n\t\t\t}\n\t\t}\n\n\t\tif(_isDragging) {\n\t\t\tvar touchesList = _getTouchPoints(e);\n\t\t\tif(!_direction && !_moved && !_isZooming) {\n\n\t\t\t\tif(_mainScrollPos.x !== _slideSize.x * _currPositionIndex) {\n\t\t\t\t\t// if main scroll position is shifted – direction is always horizontal\n\t\t\t\t\t_direction = 'h';\n\t\t\t\t} else {\n\t\t\t\t\tvar diff = Math.abs(touchesList[0].x - _currPoint.x) - Math.abs(touchesList[0].y - _currPoint.y);\n\t\t\t\t\t// check the direction of movement\n\t\t\t\t\tif(Math.abs(diff) >= DIRECTION_CHECK_OFFSET) {\n\t\t\t\t\t\t_direction = diff > 0 ? 'h' : 'v';\n\t\t\t\t\t\t_currentPoints = touchesList;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t_currentPoints = touchesList;\n\t\t\t}\n\t\t}\t\n\t},\n\t// \n\t_renderMovement =  function() {\n\n\t\tif(!_currentPoints) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar numPoints = _currentPoints.length;\n\n\t\tif(numPoints === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t_equalizePoints(p, _currentPoints[0]);\n\n\t\tdelta.x = p.x - _currPoint.x;\n\t\tdelta.y = p.y - _currPoint.y;\n\n\t\tif(_isZooming && numPoints > 1) {\n\t\t\t// Handle behaviour for more than 1 point\n\n\t\t\t_currPoint.x = p.x;\n\t\t\t_currPoint.y = p.y;\n\t\t\n\t\t\t// check if one of two points changed\n\t\t\tif( !delta.x && !delta.y && _isEqualPoints(_currentPoints[1], p2) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_equalizePoints(p2, _currentPoints[1]);\n\n\n\t\t\tif(!_zoomStarted) {\n\t\t\t\t_zoomStarted = true;\n\t\t\t\t_shout('zoomGestureStarted');\n\t\t\t}\n\t\t\t\n\t\t\t// Distance between two points\n\t\t\tvar pointsDistance = _calculatePointsDistance(p,p2);\n\n\t\t\tvar zoomLevel = _calculateZoomLevel(pointsDistance);\n\n\t\t\t// slightly over the of initial zoom level\n\t\t\tif(zoomLevel > self.currItem.initialZoomLevel + self.currItem.initialZoomLevel / 15) {\n\t\t\t\t_wasOverInitialZoom = true;\n\t\t\t}\n\n\t\t\t// Apply the friction if zoom level is out of the bounds\n\t\t\tvar zoomFriction = 1,\n\t\t\t\tminZoomLevel = _getMinZoomLevel(),\n\t\t\t\tmaxZoomLevel = _getMaxZoomLevel();\n\n\t\t\tif ( zoomLevel < minZoomLevel ) {\n\t\t\t\t\n\t\t\t\tif(_options.pinchToClose && !_wasOverInitialZoom && _startZoomLevel <= self.currItem.initialZoomLevel) {\n\t\t\t\t\t// fade out background if zooming out\n\t\t\t\t\tvar minusDiff = minZoomLevel - zoomLevel;\n\t\t\t\t\tvar percent = 1 - minusDiff / (minZoomLevel / 1.2);\n\n\t\t\t\t\t_applyBgOpacity(percent);\n\t\t\t\t\t_shout('onPinchClose', percent);\n\t\t\t\t\t_opacityChanged = true;\n\t\t\t\t} else {\n\t\t\t\t\tzoomFriction = (minZoomLevel - zoomLevel) / minZoomLevel;\n\t\t\t\t\tif(zoomFriction > 1) {\n\t\t\t\t\t\tzoomFriction = 1;\n\t\t\t\t\t}\n\t\t\t\t\tzoomLevel = minZoomLevel - zoomFriction * (minZoomLevel / 3);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if ( zoomLevel > maxZoomLevel ) {\n\t\t\t\t// 1.5 - extra zoom level above the max. E.g. if max is x6, real max 6 + 1.5 = 7.5\n\t\t\t\tzoomFriction = (zoomLevel - maxZoomLevel) / ( minZoomLevel * 6 );\n\t\t\t\tif(zoomFriction > 1) {\n\t\t\t\t\tzoomFriction = 1;\n\t\t\t\t}\n\t\t\t\tzoomLevel = maxZoomLevel + zoomFriction * minZoomLevel;\n\t\t\t}\n\n\t\t\tif(zoomFriction < 0) {\n\t\t\t\tzoomFriction = 0;\n\t\t\t}\n\n\t\t\t// distance between touch points after friction is applied\n\t\t\t_currPointsDistance = pointsDistance;\n\n\t\t\t// _centerPoint - The point in the middle of two pointers\n\t\t\t_findCenterOfPoints(p, p2, _centerPoint);\n\t\t\n\t\t\t// paning with two pointers pressed\n\t\t\t_currPanDist.x += _centerPoint.x - _currCenterPoint.x;\n\t\t\t_currPanDist.y += _centerPoint.y - _currCenterPoint.y;\n\t\t\t_equalizePoints(_currCenterPoint, _centerPoint);\n\n\t\t\t_panOffset.x = _calculatePanOffset('x', zoomLevel);\n\t\t\t_panOffset.y = _calculatePanOffset('y', zoomLevel);\n\n\t\t\t_isZoomingIn = zoomLevel > _currZoomLevel;\n\t\t\t_currZoomLevel = zoomLevel;\n\t\t\t_applyCurrentZoomPan();\n\n\t\t} else {\n\n\t\t\t// handle behaviour for one point (dragging or panning)\n\n\t\t\tif(!_direction) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(_isFirstMove) {\n\t\t\t\t_isFirstMove = false;\n\n\t\t\t\t// subtract drag distance that was used during the detection direction  \n\n\t\t\t\tif( Math.abs(delta.x) >= DIRECTION_CHECK_OFFSET) {\n\t\t\t\t\tdelta.x -= _currentPoints[0].x - _startPoint.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( Math.abs(delta.y) >= DIRECTION_CHECK_OFFSET) {\n\t\t\t\t\tdelta.y -= _currentPoints[0].y - _startPoint.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_currPoint.x = p.x;\n\t\t\t_currPoint.y = p.y;\n\n\t\t\t// do nothing if pointers position hasn't changed\n\t\t\tif(delta.x === 0 && delta.y === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(_direction === 'v' && _options.closeOnVerticalDrag) {\n\t\t\t\tif(!_canPan()) {\n\t\t\t\t\t_currPanDist.y += delta.y;\n\t\t\t\t\t_panOffset.y += delta.y;\n\n\t\t\t\t\tvar opacityRatio = _calculateVerticalDragOpacityRatio();\n\n\t\t\t\t\t_verticalDragInitiated = true;\n\t\t\t\t\t_shout('onVerticalDrag', opacityRatio);\n\n\t\t\t\t\t_applyBgOpacity(opacityRatio);\n\t\t\t\t\t_applyCurrentZoomPan();\n\t\t\t\t\treturn ;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_pushPosPoint(_getCurrentTime(), p.x, p.y);\n\n\t\t\t_moved = true;\n\t\t\t_currPanBounds = self.currItem.bounds;\n\t\t\t\n\t\t\tvar mainScrollChanged = _panOrMoveMainScroll('x', delta);\n\t\t\tif(!mainScrollChanged) {\n\t\t\t\t_panOrMoveMainScroll('y', delta);\n\n\t\t\t\t_roundPoint(_panOffset);\n\t\t\t\t_applyCurrentZoomPan();\n\t\t\t}\n\n\t\t}\n\n\t},\n\t\n\t// Pointerup/pointercancel/touchend/touchcancel/mouseup event handler\n\t_onDragRelease = function(e) {\n\n\t\tif(_features.isOldAndroid ) {\n\n\t\t\tif(_oldAndroidTouchEndTimeout && e.type === 'mouseup') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// on Android (v4.1, 4.2, 4.3 & possibly older) \n\t\t\t// ghost mousedown/up event isn't preventable via e.preventDefault,\n\t\t\t// which causes fake mousedown event\n\t\t\t// so we block mousedown/up for 600ms\n\t\t\tif( e.type.indexOf('touch') > -1 ) {\n\t\t\t\tclearTimeout(_oldAndroidTouchEndTimeout);\n\t\t\t\t_oldAndroidTouchEndTimeout = setTimeout(function() {\n\t\t\t\t\t_oldAndroidTouchEndTimeout = 0;\n\t\t\t\t}, 600);\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\t_shout('pointerUp');\n\n\t\tif(_preventDefaultEventBehaviour(e, false)) {\n\t\t\te.preventDefault();\n\t\t}\n\n\t\tvar releasePoint;\n\n\t\tif(_pointerEventEnabled) {\n\t\t\tvar pointerIndex = framework.arraySearch(_currPointers, e.pointerId, 'id');\n\t\t\t\n\t\t\tif(pointerIndex > -1) {\n\t\t\t\treleasePoint = _currPointers.splice(pointerIndex, 1)[0];\n\n\t\t\t\tif(navigator.pointerEnabled) {\n\t\t\t\t\treleasePoint.type = e.pointerType || 'mouse';\n\t\t\t\t} else {\n\t\t\t\t\tvar MSPOINTER_TYPES = {\n\t\t\t\t\t\t4: 'mouse', // event.MSPOINTER_TYPE_MOUSE\n\t\t\t\t\t\t2: 'touch', // event.MSPOINTER_TYPE_TOUCH \n\t\t\t\t\t\t3: 'pen' // event.MSPOINTER_TYPE_PEN\n\t\t\t\t\t};\n\t\t\t\t\treleasePoint.type = MSPOINTER_TYPES[e.pointerType];\n\n\t\t\t\t\tif(!releasePoint.type) {\n\t\t\t\t\t\treleasePoint.type = e.pointerType || 'mouse';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t\tvar touchList = _getTouchPoints(e),\n\t\t\tgestureType,\n\t\t\tnumPoints = touchList.length;\n\n\t\tif(e.type === 'mouseup') {\n\t\t\tnumPoints = 0;\n\t\t}\n\n\t\t// Do nothing if there were 3 touch points or more\n\t\tif(numPoints === 2) {\n\t\t\t_currentPoints = null;\n\t\t\treturn true;\n\t\t}\n\n\t\t// if second pointer released\n\t\tif(numPoints === 1) {\n\t\t\t_equalizePoints(_startPoint, touchList[0]);\n\t\t}\t\t\t\t\n\n\n\t\t// pointer hasn't moved, send \"tap release\" point\n\t\tif(numPoints === 0 && !_direction && !_mainScrollAnimating) {\n\t\t\tif(!releasePoint) {\n\t\t\t\tif(e.type === 'mouseup') {\n\t\t\t\t\treleasePoint = {x: e.pageX, y: e.pageY, type:'mouse'};\n\t\t\t\t} else if(e.changedTouches && e.changedTouches[0]) {\n\t\t\t\t\treleasePoint = {x: e.changedTouches[0].pageX, y: e.changedTouches[0].pageY, type:'touch'};\n\t\t\t\t}\t\t\n\t\t\t}\n\n\t\t\t_shout('touchRelease', e, releasePoint);\n\t\t}\n\n\t\t// Difference in time between releasing of two last touch points (zoom gesture)\n\t\tvar releaseTimeDiff = -1;\n\n\t\t// Gesture completed, no pointers left\n\t\tif(numPoints === 0) {\n\t\t\t_isDragging = false;\n\t\t\tframework.unbind(window, _upMoveEvents, self);\n\n\t\t\t_stopDragUpdateLoop();\n\n\t\t\tif(_isZooming) {\n\t\t\t\t// Two points released at the same time\n\t\t\t\treleaseTimeDiff = 0;\n\t\t\t} else if(_lastReleaseTime !== -1) {\n\t\t\t\treleaseTimeDiff = _getCurrentTime() - _lastReleaseTime;\n\t\t\t}\n\t\t}\n\t\t_lastReleaseTime = numPoints === 1 ? _getCurrentTime() : -1;\n\t\t\n\t\tif(releaseTimeDiff !== -1 && releaseTimeDiff < 150) {\n\t\t\tgestureType = 'zoom';\n\t\t} else {\n\t\t\tgestureType = 'swipe';\n\t\t}\n\n\t\tif(_isZooming && numPoints < 2) {\n\t\t\t_isZooming = false;\n\n\t\t\t// Only second point released\n\t\t\tif(numPoints === 1) {\n\t\t\t\tgestureType = 'zoomPointerUp';\n\t\t\t}\n\t\t\t_shout('zoomGestureEnded');\n\t\t}\n\n\t\t_currentPoints = null;\n\t\tif(!_moved && !_zoomStarted && !_mainScrollAnimating && !_verticalDragInitiated) {\n\t\t\t// nothing to animate\n\t\t\treturn;\n\t\t}\n\t\n\t\t_stopAllAnimations();\n\n\t\t\n\t\tif(!_releaseAnimData) {\n\t\t\t_releaseAnimData = _initDragReleaseAnimationData();\n\t\t}\n\t\t\n\t\t_releaseAnimData.calculateSwipeSpeed('x');\n\n\n\t\tif(_verticalDragInitiated) {\n\n\t\t\tvar opacityRatio = _calculateVerticalDragOpacityRatio();\n\n\t\t\tif(opacityRatio < _options.verticalDragRange) {\n\t\t\t\tself.close();\n\t\t\t} else {\n\t\t\t\tvar initalPanY = _panOffset.y,\n\t\t\t\t\tinitialBgOpacity = _bgOpacity;\n\n\t\t\t\t_animateProp('verticalDrag', 0, 1, 300, framework.easing.cubic.out, function(now) {\n\t\t\t\t\t\n\t\t\t\t\t_panOffset.y = (self.currItem.initialPosition.y - initalPanY) * now + initalPanY;\n\n\t\t\t\t\t_applyBgOpacity(  (1 - initialBgOpacity) * now + initialBgOpacity );\n\t\t\t\t\t_applyCurrentZoomPan();\n\t\t\t\t});\n\n\t\t\t\t_shout('onVerticalDrag', 1);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\n\t\t// main scroll \n\t\tif(  (_mainScrollShifted || _mainScrollAnimating) && numPoints === 0) {\n\t\t\tvar itemChanged = _finishSwipeMainScrollGesture(gestureType, _releaseAnimData);\n\t\t\tif(itemChanged) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tgestureType = 'zoomPointerUp';\n\t\t}\n\n\t\t// prevent zoom/pan animation when main scroll animation runs\n\t\tif(_mainScrollAnimating) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// Complete simple zoom gesture (reset zoom level if it's out of the bounds)  \n\t\tif(gestureType !== 'swipe') {\n\t\t\t_completeZoomGesture();\n\t\t\treturn;\n\t\t}\n\t\n\t\t// Complete pan gesture if main scroll is not shifted, and it's possible to pan current image\n\t\tif(!_mainScrollShifted && _currZoomLevel > self.currItem.fitRatio) {\n\t\t\t_completePanGesture(_releaseAnimData);\n\t\t}\n\t},\n\n\n\t// Returns object with data about gesture\n\t// It's created only once and then reused\n\t_initDragReleaseAnimationData  = function() {\n\t\t// temp local vars\n\t\tvar lastFlickDuration,\n\t\t\ttempReleasePos;\n\n\t\t// s = this\n\t\tvar s = {\n\t\t\tlastFlickOffset: {},\n\t\t\tlastFlickDist: {},\n\t\t\tlastFlickSpeed: {},\n\t\t\tslowDownRatio:  {},\n\t\t\tslowDownRatioReverse:  {},\n\t\t\tspeedDecelerationRatio:  {},\n\t\t\tspeedDecelerationRatioAbs:  {},\n\t\t\tdistanceOffset:  {},\n\t\t\tbackAnimDestination: {},\n\t\t\tbackAnimStarted: {},\n\t\t\tcalculateSwipeSpeed: function(axis) {\n\t\t\t\t\n\n\t\t\t\tif( _posPoints.length > 1) {\n\t\t\t\t\tlastFlickDuration = _getCurrentTime() - _gestureCheckSpeedTime + 50;\n\t\t\t\t\ttempReleasePos = _posPoints[_posPoints.length-2][axis];\n\t\t\t\t} else {\n\t\t\t\t\tlastFlickDuration = _getCurrentTime() - _gestureStartTime; // total gesture duration\n\t\t\t\t\ttempReleasePos = _startPoint[axis];\n\t\t\t\t}\n\t\t\t\ts.lastFlickOffset[axis] = _currPoint[axis] - tempReleasePos;\n\t\t\t\ts.lastFlickDist[axis] = Math.abs(s.lastFlickOffset[axis]);\n\t\t\t\tif(s.lastFlickDist[axis] > 20) {\n\t\t\t\t\ts.lastFlickSpeed[axis] = s.lastFlickOffset[axis] / lastFlickDuration;\n\t\t\t\t} else {\n\t\t\t\t\ts.lastFlickSpeed[axis] = 0;\n\t\t\t\t}\n\t\t\t\tif( Math.abs(s.lastFlickSpeed[axis]) < 0.1 ) {\n\t\t\t\t\ts.lastFlickSpeed[axis] = 0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ts.slowDownRatio[axis] = 0.95;\n\t\t\t\ts.slowDownRatioReverse[axis] = 1 - s.slowDownRatio[axis];\n\t\t\t\ts.speedDecelerationRatio[axis] = 1;\n\t\t\t},\n\n\t\t\tcalculateOverBoundsAnimOffset: function(axis, speed) {\n\t\t\t\tif(!s.backAnimStarted[axis]) {\n\n\t\t\t\t\tif(_panOffset[axis] > _currPanBounds.min[axis]) {\n\t\t\t\t\t\ts.backAnimDestination[axis] = _currPanBounds.min[axis];\n\t\t\t\t\t\t\n\t\t\t\t\t} else if(_panOffset[axis] < _currPanBounds.max[axis]) {\n\t\t\t\t\t\ts.backAnimDestination[axis] = _currPanBounds.max[axis];\n\t\t\t\t\t}\n\n\t\t\t\t\tif(s.backAnimDestination[axis] !== undefined) {\n\t\t\t\t\t\ts.slowDownRatio[axis] = 0.7;\n\t\t\t\t\t\ts.slowDownRatioReverse[axis] = 1 - s.slowDownRatio[axis];\n\t\t\t\t\t\tif(s.speedDecelerationRatioAbs[axis] < 0.05) {\n\n\t\t\t\t\t\t\ts.lastFlickSpeed[axis] = 0;\n\t\t\t\t\t\t\ts.backAnimStarted[axis] = true;\n\n\t\t\t\t\t\t\t_animateProp('bounceZoomPan'+axis,_panOffset[axis], \n\t\t\t\t\t\t\t\ts.backAnimDestination[axis], \n\t\t\t\t\t\t\t\tspeed || 300, \n\t\t\t\t\t\t\t\tframework.easing.sine.out, \n\t\t\t\t\t\t\t\tfunction(pos) {\n\t\t\t\t\t\t\t\t\t_panOffset[axis] = pos;\n\t\t\t\t\t\t\t\t\t_applyCurrentZoomPan();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Reduces the speed by slowDownRatio (per 10ms)\n\t\t\tcalculateAnimOffset: function(axis) {\n\t\t\t\tif(!s.backAnimStarted[axis]) {\n\t\t\t\t\ts.speedDecelerationRatio[axis] = s.speedDecelerationRatio[axis] * (s.slowDownRatio[axis] + \n\t\t\t\t\t\t\t\t\t\t\t\ts.slowDownRatioReverse[axis] - \n\t\t\t\t\t\t\t\t\t\t\t\ts.slowDownRatioReverse[axis] * s.timeDiff / 10);\n\n\t\t\t\t\ts.speedDecelerationRatioAbs[axis] = Math.abs(s.lastFlickSpeed[axis] * s.speedDecelerationRatio[axis]);\n\t\t\t\t\ts.distanceOffset[axis] = s.lastFlickSpeed[axis] * s.speedDecelerationRatio[axis] * s.timeDiff;\n\t\t\t\t\t_panOffset[axis] += s.distanceOffset[axis];\n\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tpanAnimLoop: function() {\n\t\t\t\tif ( _animations.zoomPan ) {\n\t\t\t\t\t_animations.zoomPan.raf = _requestAF(s.panAnimLoop);\n\n\t\t\t\t\ts.now = _getCurrentTime();\n\t\t\t\t\ts.timeDiff = s.now - s.lastNow;\n\t\t\t\t\ts.lastNow = s.now;\n\t\t\t\t\t\n\t\t\t\t\ts.calculateAnimOffset('x');\n\t\t\t\t\ts.calculateAnimOffset('y');\n\n\t\t\t\t\t_applyCurrentZoomPan();\n\t\t\t\t\t\n\t\t\t\t\ts.calculateOverBoundsAnimOffset('x');\n\t\t\t\t\ts.calculateOverBoundsAnimOffset('y');\n\n\n\t\t\t\t\tif (s.speedDecelerationRatioAbs.x < 0.05 && s.speedDecelerationRatioAbs.y < 0.05) {\n\n\t\t\t\t\t\t// round pan position\n\t\t\t\t\t\t_panOffset.x = Math.round(_panOffset.x);\n\t\t\t\t\t\t_panOffset.y = Math.round(_panOffset.y);\n\t\t\t\t\t\t_applyCurrentZoomPan();\n\t\t\t\t\t\t\n\t\t\t\t\t\t_stopAnimation('zoomPan');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t};\n\t\treturn s;\n\t},\n\n\t_completePanGesture = function(animData) {\n\t\t// calculate swipe speed for Y axis (paanning)\n\t\tanimData.calculateSwipeSpeed('y');\n\n\t\t_currPanBounds = self.currItem.bounds;\n\t\t\n\t\tanimData.backAnimDestination = {};\n\t\tanimData.backAnimStarted = {};\n\n\t\t// Avoid acceleration animation if speed is too low\n\t\tif(Math.abs(animData.lastFlickSpeed.x) <= 0.05 && Math.abs(animData.lastFlickSpeed.y) <= 0.05 ) {\n\t\t\tanimData.speedDecelerationRatioAbs.x = animData.speedDecelerationRatioAbs.y = 0;\n\n\t\t\t// Run pan drag release animation. E.g. if you drag image and release finger without momentum.\n\t\t\tanimData.calculateOverBoundsAnimOffset('x');\n\t\t\tanimData.calculateOverBoundsAnimOffset('y');\n\t\t\treturn true;\n\t\t}\n\n\t\t// Animation loop that controls the acceleration after pan gesture ends\n\t\t_registerStartAnimation('zoomPan');\n\t\tanimData.lastNow = _getCurrentTime();\n\t\tanimData.panAnimLoop();\n\t},\n\n\n\t_finishSwipeMainScrollGesture = function(gestureType, _releaseAnimData) {\n\t\tvar itemChanged;\n\t\tif(!_mainScrollAnimating) {\n\t\t\t_currZoomedItemIndex = _currentItemIndex;\n\t\t}\n\n\n\t\t\n\t\tvar itemsDiff;\n\n\t\tif(gestureType === 'swipe') {\n\t\t\tvar totalShiftDist = _currPoint.x - _startPoint.x,\n\t\t\t\tisFastLastFlick = _releaseAnimData.lastFlickDist.x < 10;\n\n\t\t\t// if container is shifted for more than MIN_SWIPE_DISTANCE, \n\t\t\t// and last flick gesture was in right direction\n\t\t\tif(totalShiftDist > MIN_SWIPE_DISTANCE && \n\t\t\t\t(isFastLastFlick || _releaseAnimData.lastFlickOffset.x > 20) ) {\n\t\t\t\t// go to prev item\n\t\t\t\titemsDiff = -1;\n\t\t\t} else if(totalShiftDist < -MIN_SWIPE_DISTANCE && \n\t\t\t\t(isFastLastFlick || _releaseAnimData.lastFlickOffset.x < -20) ) {\n\t\t\t\t// go to next item\n\t\t\t\titemsDiff = 1;\n\t\t\t}\n\t\t}\n\n\t\tvar nextCircle;\n\n\t\tif(itemsDiff) {\n\t\t\t\n\t\t\t_currentItemIndex += itemsDiff;\n\n\t\t\tif(_currentItemIndex < 0) {\n\t\t\t\t_currentItemIndex = _options.loop ? _getNumItems()-1 : 0;\n\t\t\t\tnextCircle = true;\n\t\t\t} else if(_currentItemIndex >= _getNumItems()) {\n\t\t\t\t_currentItemIndex = _options.loop ? 0 : _getNumItems()-1;\n\t\t\t\tnextCircle = true;\n\t\t\t}\n\n\t\t\tif(!nextCircle || _options.loop) {\n\t\t\t\t_indexDiff += itemsDiff;\n\t\t\t\t_currPositionIndex -= itemsDiff;\n\t\t\t\titemChanged = true;\n\t\t\t}\n\t\t\t\n\n\t\t\t\n\t\t}\n\n\t\tvar animateToX = _slideSize.x * _currPositionIndex;\n\t\tvar animateToDist = Math.abs( animateToX - _mainScrollPos.x );\n\t\tvar finishAnimDuration;\n\n\n\t\tif(!itemChanged && animateToX > _mainScrollPos.x !== _releaseAnimData.lastFlickSpeed.x > 0) {\n\t\t\t// \"return to current\" duration, e.g. when dragging from slide 0 to -1\n\t\t\tfinishAnimDuration = 333; \n\t\t} else {\n\t\t\tfinishAnimDuration = Math.abs(_releaseAnimData.lastFlickSpeed.x) > 0 ? \n\t\t\t\t\t\t\t\t\tanimateToDist / Math.abs(_releaseAnimData.lastFlickSpeed.x) : \n\t\t\t\t\t\t\t\t\t333;\n\n\t\t\tfinishAnimDuration = Math.min(finishAnimDuration, 400);\n\t\t\tfinishAnimDuration = Math.max(finishAnimDuration, 250);\n\t\t}\n\n\t\tif(_currZoomedItemIndex === _currentItemIndex) {\n\t\t\titemChanged = false;\n\t\t}\n\t\t\n\t\t_mainScrollAnimating = true;\n\t\t\n\t\t_shout('mainScrollAnimStart');\n\n\t\t_animateProp('mainScroll', _mainScrollPos.x, animateToX, finishAnimDuration, framework.easing.cubic.out, \n\t\t\t_moveMainScroll,\n\t\t\tfunction() {\n\t\t\t\t_stopAllAnimations();\n\t\t\t\t_mainScrollAnimating = false;\n\t\t\t\t_currZoomedItemIndex = -1;\n\t\t\t\t\n\t\t\t\tif(itemChanged || _currZoomedItemIndex !== _currentItemIndex) {\n\t\t\t\t\tself.updateCurrItem();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t_shout('mainScrollAnimComplete');\n\t\t\t}\n\t\t);\n\n\t\tif(itemChanged) {\n\t\t\tself.updateCurrItem(true);\n\t\t}\n\n\t\treturn itemChanged;\n\t},\n\n\t_calculateZoomLevel = function(touchesDistance) {\n\t\treturn  1 / _startPointsDistance * touchesDistance * _startZoomLevel;\n\t},\n\n\t// Resets zoom if it's out of bounds\n\t_completeZoomGesture = function() {\n\t\tvar destZoomLevel = _currZoomLevel,\n\t\t\tminZoomLevel = _getMinZoomLevel(),\n\t\t\tmaxZoomLevel = _getMaxZoomLevel();\n\n\t\tif ( _currZoomLevel < minZoomLevel ) {\n\t\t\tdestZoomLevel = minZoomLevel;\n\t\t} else if ( _currZoomLevel > maxZoomLevel ) {\n\t\t\tdestZoomLevel = maxZoomLevel;\n\t\t}\n\n\t\tvar destOpacity = 1,\n\t\t\tonUpdate,\n\t\t\tinitialOpacity = _bgOpacity;\n\n\t\tif(_opacityChanged && !_isZoomingIn && !_wasOverInitialZoom && _currZoomLevel < minZoomLevel) {\n\t\t\t//_closedByScroll = true;\n\t\t\tself.close();\n\t\t\treturn true;\n\t\t}\n\n\t\tif(_opacityChanged) {\n\t\t\tonUpdate = function(now) {\n\t\t\t\t_applyBgOpacity(  (destOpacity - initialOpacity) * now + initialOpacity );\n\t\t\t};\n\t\t}\n\n\t\tself.zoomTo(destZoomLevel, 0, 200,  framework.easing.cubic.out, onUpdate);\n\t\treturn true;\n\t};\n\n\n_registerModule('Gestures', {\n\tpublicMethods: {\n\n\t\tinitGestures: function() {\n\n\t\t\t// helper function that builds touch/pointer/mouse events\n\t\t\tvar addEventNames = function(pref, down, move, up, cancel) {\n\t\t\t\t_dragStartEvent = pref + down;\n\t\t\t\t_dragMoveEvent = pref + move;\n\t\t\t\t_dragEndEvent = pref + up;\n\t\t\t\tif(cancel) {\n\t\t\t\t\t_dragCancelEvent = pref + cancel;\n\t\t\t\t} else {\n\t\t\t\t\t_dragCancelEvent = '';\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t_pointerEventEnabled = _features.pointerEvent;\n\t\t\tif(_pointerEventEnabled && _features.touch) {\n\t\t\t\t// we don't need touch events, if browser supports pointer events\n\t\t\t\t_features.touch = false;\n\t\t\t}\n\n\t\t\tif(_pointerEventEnabled) {\n\t\t\t\tif(navigator.pointerEnabled) {\n\t\t\t\t\taddEventNames('pointer', 'down', 'move', 'up', 'cancel');\n\t\t\t\t} else {\n\t\t\t\t\t// IE10 pointer events are case-sensitive\n\t\t\t\t\taddEventNames('MSPointer', 'Down', 'Move', 'Up', 'Cancel');\n\t\t\t\t}\n\t\t\t} else if(_features.touch) {\n\t\t\t\taddEventNames('touch', 'start', 'move', 'end', 'cancel');\n\t\t\t\t_likelyTouchDevice = true;\n\t\t\t} else {\n\t\t\t\taddEventNames('mouse', 'down', 'move', 'up');\t\n\t\t\t}\n\n\t\t\t_upMoveEvents = _dragMoveEvent + ' ' + _dragEndEvent  + ' ' +  _dragCancelEvent;\n\t\t\t_downEvents = _dragStartEvent;\n\n\t\t\tif(_pointerEventEnabled && !_likelyTouchDevice) {\n\t\t\t\t_likelyTouchDevice = (navigator.maxTouchPoints > 1) || (navigator.msMaxTouchPoints > 1);\n\t\t\t}\n\t\t\t// make variable public\n\t\t\tself.likelyTouchDevice = _likelyTouchDevice; \n\t\t\t\n\t\t\t_globalEventHandlers[_dragStartEvent] = _onDragStart;\n\t\t\t_globalEventHandlers[_dragMoveEvent] = _onDragMove;\n\t\t\t_globalEventHandlers[_dragEndEvent] = _onDragRelease; // the Kraken\n\n\t\t\tif(_dragCancelEvent) {\n\t\t\t\t_globalEventHandlers[_dragCancelEvent] = _globalEventHandlers[_dragEndEvent];\n\t\t\t}\n\n\t\t\t// Bind mouse events on device with detected hardware touch support, in case it supports multiple types of input.\n\t\t\tif(_features.touch) {\n\t\t\t\t_downEvents += ' mousedown';\n\t\t\t\t_upMoveEvents += ' mousemove mouseup';\n\t\t\t\t_globalEventHandlers.mousedown = _globalEventHandlers[_dragStartEvent];\n\t\t\t\t_globalEventHandlers.mousemove = _globalEventHandlers[_dragMoveEvent];\n\t\t\t\t_globalEventHandlers.mouseup = _globalEventHandlers[_dragEndEvent];\n\t\t\t}\n\n\t\t\tif(!_likelyTouchDevice) {\n\t\t\t\t// don't allow pan to next slide from zoomed state on Desktop\n\t\t\t\t_options.allowPanToNext = false;\n\t\t\t}\n\t\t}\n\n\t}\n});\n\n\n/*>>gestures*/\n\n/*>>show-hide-transition*/\n/**\n * show-hide-transition.js:\n *\n * Manages initial opening or closing transition.\n *\n * If you're not planning to use transition for gallery at all,\n * you may set options hideAnimationDuration and showAnimationDuration to 0,\n * and just delete startAnimation function.\n * \n */\n\n\nvar _showOrHideTimeout,\n\t_showOrHide = function(item, img, out, completeFn) {\n\n\t\tif(_showOrHideTimeout) {\n\t\t\tclearTimeout(_showOrHideTimeout);\n\t\t}\n\n\t\t_initialZoomRunning = true;\n\t\t_initialContentSet = true;\n\t\t\n\t\t// dimensions of small thumbnail {x:,y:,w:}.\n\t\t// Height is optional, as calculated based on large image.\n\t\tvar thumbBounds; \n\t\tif(item.initialLayout) {\n\t\t\tthumbBounds = item.initialLayout;\n\t\t\titem.initialLayout = null;\n\t\t} else {\n\t\t\tthumbBounds = _options.getThumbBoundsFn && _options.getThumbBoundsFn(_currentItemIndex);\n\t\t}\n\n\t\tvar duration = out ? _options.hideAnimationDuration : _options.showAnimationDuration;\n\n\t\tvar onComplete = function() {\n\t\t\t_stopAnimation('initialZoom');\n\t\t\tif(!out) {\n\t\t\t\t_applyBgOpacity(1);\n\t\t\t\tif(img) {\n\t\t\t\t\timg.style.display = 'block';\n\t\t\t\t}\n\t\t\t\tframework.addClass(template, 'pswp--animated-in');\n\t\t\t\t_shout('initialZoom' + (out ? 'OutEnd' : 'InEnd'));\n\t\t\t} else {\n\t\t\t\tself.template.removeAttribute('style');\n\t\t\t\tself.bg.removeAttribute('style');\n\t\t\t}\n\n\t\t\tif(completeFn) {\n\t\t\t\tcompleteFn();\n\t\t\t}\n\t\t\t_initialZoomRunning = false;\n\t\t};\n\n\t\t// if bounds aren't provided, just open gallery without animation\n\t\tif(!duration || !thumbBounds || thumbBounds.x === undefined) {\n\n\t\t\t_shout('initialZoom' + (out ? 'Out' : 'In') );\n\n\t\t\t_currZoomLevel = item.initialZoomLevel;\n\t\t\t_equalizePoints(_panOffset,  item.initialPosition );\n\t\t\t_applyCurrentZoomPan();\n\n\t\t\ttemplate.style.opacity = out ? 0 : 1;\n\t\t\t_applyBgOpacity(1);\n\n\t\t\tif(duration) {\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tonComplete();\n\t\t\t\t}, duration);\n\t\t\t} else {\n\t\t\t\tonComplete();\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar startAnimation = function() {\n\t\t\tvar closeWithRaf = _closedByScroll,\n\t\t\t\tfadeEverything = !self.currItem.src || self.currItem.loadError || _options.showHideOpacity;\n\t\t\t\n\t\t\t// apply hw-acceleration to image\n\t\t\tif(item.miniImg) {\n\t\t\t\titem.miniImg.style.webkitBackfaceVisibility = 'hidden';\n\t\t\t}\n\n\t\t\tif(!out) {\n\t\t\t\t_currZoomLevel = thumbBounds.w / item.w;\n\t\t\t\t_panOffset.x = thumbBounds.x;\n\t\t\t\t_panOffset.y = thumbBounds.y - _initalWindowScrollY;\n\n\t\t\t\tself[fadeEverything ? 'template' : 'bg'].style.opacity = 0.001;\n\t\t\t\t_applyCurrentZoomPan();\n\t\t\t}\n\n\t\t\t_registerStartAnimation('initialZoom');\n\t\t\t\n\t\t\tif(out && !closeWithRaf) {\n\t\t\t\tframework.removeClass(template, 'pswp--animated-in');\n\t\t\t}\n\n\t\t\tif(fadeEverything) {\n\t\t\t\tif(out) {\n\t\t\t\t\tframework[ (closeWithRaf ? 'remove' : 'add') + 'Class' ](template, 'pswp--animate_opacity');\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tframework.addClass(template, 'pswp--animate_opacity');\n\t\t\t\t\t}, 30);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_showOrHideTimeout = setTimeout(function() {\n\n\t\t\t\t_shout('initialZoom' + (out ? 'Out' : 'In') );\n\t\t\t\t\n\n\t\t\t\tif(!out) {\n\n\t\t\t\t\t// \"in\" animation always uses CSS transitions (instead of rAF).\n\t\t\t\t\t// CSS transition work faster here, \n\t\t\t\t\t// as developer may also want to animate other things, \n\t\t\t\t\t// like ui on top of sliding area, which can be animated just via CSS\n\t\t\t\t\t\n\t\t\t\t\t_currZoomLevel = item.initialZoomLevel;\n\t\t\t\t\t_equalizePoints(_panOffset,  item.initialPosition );\n\t\t\t\t\t_applyCurrentZoomPan();\n\t\t\t\t\t_applyBgOpacity(1);\n\n\t\t\t\t\tif(fadeEverything) {\n\t\t\t\t\t\ttemplate.style.opacity = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_applyBgOpacity(1);\n\t\t\t\t\t}\n\n\t\t\t\t\t_showOrHideTimeout = setTimeout(onComplete, duration + 20);\n\t\t\t\t} else {\n\n\t\t\t\t\t// \"out\" animation uses rAF only when PhotoSwipe is closed by browser scroll, to recalculate position\n\t\t\t\t\tvar destZoomLevel = thumbBounds.w / item.w,\n\t\t\t\t\t\tinitialPanOffset = {\n\t\t\t\t\t\t\tx: _panOffset.x,\n\t\t\t\t\t\t\ty: _panOffset.y\n\t\t\t\t\t\t},\n\t\t\t\t\t\tinitialZoomLevel = _currZoomLevel,\n\t\t\t\t\t\tinitalBgOpacity = _bgOpacity,\n\t\t\t\t\t\tonUpdate = function(now) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(now === 1) {\n\t\t\t\t\t\t\t\t_currZoomLevel = destZoomLevel;\n\t\t\t\t\t\t\t\t_panOffset.x = thumbBounds.x;\n\t\t\t\t\t\t\t\t_panOffset.y = thumbBounds.y  - _currentWindowScrollY;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t_currZoomLevel = (destZoomLevel - initialZoomLevel) * now + initialZoomLevel;\n\t\t\t\t\t\t\t\t_panOffset.x = (thumbBounds.x - initialPanOffset.x) * now + initialPanOffset.x;\n\t\t\t\t\t\t\t\t_panOffset.y = (thumbBounds.y - _currentWindowScrollY - initialPanOffset.y) * now + initialPanOffset.y;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t_applyCurrentZoomPan();\n\t\t\t\t\t\t\tif(fadeEverything) {\n\t\t\t\t\t\t\t\ttemplate.style.opacity = 1 - now;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t_applyBgOpacity( initalBgOpacity - now * initalBgOpacity );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\tif(closeWithRaf) {\n\t\t\t\t\t\t_animateProp('initialZoom', 0, 1, duration, framework.easing.cubic.out, onUpdate, onComplete);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tonUpdate(1);\n\t\t\t\t\t\t_showOrHideTimeout = setTimeout(onComplete, duration + 20);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t}, out ? 25 : 90); // Main purpose of this delay is to give browser time to paint and\n\t\t\t\t\t// create composite layers of PhotoSwipe UI parts (background, controls, caption, arrows).\n\t\t\t\t\t// Which avoids lag at the beginning of scale transition.\n\t\t};\n\t\tstartAnimation();\n\n\t\t\n\t};\n\n/*>>show-hide-transition*/\n\n/*>>items-controller*/\n/**\n*\n* Controller manages gallery items, their dimensions, and their content.\n* \n*/\n\nvar _items,\n\t_tempPanAreaSize = {},\n\t_imagesToAppendPool = [],\n\t_initialContentSet,\n\t_initialZoomRunning,\n\t_controllerDefaultOptions = {\n\t\tindex: 0,\n\t\terrorMsg: '<div class=\"pswp__error-msg\"><a href=\"%url%\" target=\"_blank\">The image</a> could not be loaded.</div>',\n\t\tforceProgressiveLoading: false, // TODO\n\t\tpreload: [1,1],\n\t\tgetNumItemsFn: function() {\n\t\t\treturn _items.length;\n\t\t}\n\t};\n\n\nvar _getItemAt,\n\t_getNumItems,\n\t_initialIsLoop,\n\t_getZeroBounds = function() {\n\t\treturn {\n\t\t\tcenter:{x:0,y:0}, \n\t\t\tmax:{x:0,y:0}, \n\t\t\tmin:{x:0,y:0}\n\t\t};\n\t},\n\t_calculateSingleItemPanBounds = function(item, realPanElementW, realPanElementH ) {\n\t\tvar bounds = item.bounds;\n\n\t\t// position of element when it's centered\n\t\tbounds.center.x = Math.round((_tempPanAreaSize.x - realPanElementW) / 2);\n\t\tbounds.center.y = Math.round((_tempPanAreaSize.y - realPanElementH) / 2) + item.vGap.top;\n\n\t\t// maximum pan position\n\t\tbounds.max.x = (realPanElementW > _tempPanAreaSize.x) ? \n\t\t\t\t\t\t\tMath.round(_tempPanAreaSize.x - realPanElementW) : \n\t\t\t\t\t\t\tbounds.center.x;\n\t\t\n\t\tbounds.max.y = (realPanElementH > _tempPanAreaSize.y) ? \n\t\t\t\t\t\t\tMath.round(_tempPanAreaSize.y - realPanElementH) + item.vGap.top : \n\t\t\t\t\t\t\tbounds.center.y;\n\t\t\n\t\t// minimum pan position\n\t\tbounds.min.x = (realPanElementW > _tempPanAreaSize.x) ? 0 : bounds.center.x;\n\t\tbounds.min.y = (realPanElementH > _tempPanAreaSize.y) ? item.vGap.top : bounds.center.y;\n\t},\n\t_calculateItemSize = function(item, viewportSize, zoomLevel) {\n\n\t\tif (item.src && !item.loadError) {\n\t\t\tvar isInitial = !zoomLevel;\n\t\t\t\n\t\t\tif(isInitial) {\n\t\t\t\tif(!item.vGap) {\n\t\t\t\t\titem.vGap = {top:0,bottom:0};\n\t\t\t\t}\n\t\t\t\t// allows overriding vertical margin for individual items\n\t\t\t\t_shout('parseVerticalMargin', item);\n\t\t\t}\n\n\n\t\t\t_tempPanAreaSize.x = viewportSize.x;\n\t\t\t_tempPanAreaSize.y = viewportSize.y - item.vGap.top - item.vGap.bottom;\n\n\t\t\tif (isInitial) {\n\t\t\t\tvar hRatio = _tempPanAreaSize.x / item.w;\n\t\t\t\tvar vRatio = _tempPanAreaSize.y / item.h;\n\n\t\t\t\titem.fitRatio = hRatio < vRatio ? hRatio : vRatio;\n\t\t\t\t//item.fillRatio = hRatio > vRatio ? hRatio : vRatio;\n\n\t\t\t\tvar scaleMode = _options.scaleMode;\n\n\t\t\t\tif (scaleMode === 'orig') {\n\t\t\t\t\tzoomLevel = 1;\n\t\t\t\t} else if (scaleMode === 'fit') {\n\t\t\t\t\tzoomLevel = item.fitRatio;\n\t\t\t\t}\n\n\t\t\t\tif (zoomLevel > 1) {\n\t\t\t\t\tzoomLevel = 1;\n\t\t\t\t}\n\n\t\t\t\titem.initialZoomLevel = zoomLevel;\n\t\t\t\t\n\t\t\t\tif(!item.bounds) {\n\t\t\t\t\t// reuse bounds object\n\t\t\t\t\titem.bounds = _getZeroBounds(); \n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(!zoomLevel) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_calculateSingleItemPanBounds(item, item.w * zoomLevel, item.h * zoomLevel);\n\n\t\t\tif (isInitial && zoomLevel === item.initialZoomLevel) {\n\t\t\t\titem.initialPosition = item.bounds.center;\n\t\t\t}\n\n\t\t\treturn item.bounds;\n\t\t} else {\n\t\t\titem.w = item.h = 0;\n\t\t\titem.initialZoomLevel = item.fitRatio = 1;\n\t\t\titem.bounds = _getZeroBounds();\n\t\t\titem.initialPosition = item.bounds.center;\n\n\t\t\t// if it's not image, we return zero bounds (content is not zoomable)\n\t\t\treturn item.bounds;\n\t\t}\n\t\t\n\t},\n\n\t\n\n\n\t_appendImage = function(index, item, baseDiv, img, preventAnimation, keepPlaceholder) {\n\t\t\n\n\t\tif(item.loadError) {\n\t\t\treturn;\n\t\t}\n\n\t\tif(img) {\n\n\t\t\titem.imageAppended = true;\n\t\t\t_setImageSize(item, img, (item === self.currItem && _renderMaxResolution) );\n\t\t\t\n\t\t\tbaseDiv.appendChild(img);\n\n\t\t\tif(keepPlaceholder) {\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tif(item && item.loaded && item.placeholder) {\n\t\t\t\t\t\titem.placeholder.style.display = 'none';\n\t\t\t\t\t\titem.placeholder = null;\n\t\t\t\t\t}\n\t\t\t\t}, 500);\n\t\t\t}\n\t\t}\n\t},\n\t\n\n\n\t_preloadImage = function(item) {\n\t\titem.loading = true;\n\t\titem.loaded = false;\n\t\tvar img = item.img = framework.createEl('pswp__img', 'img');\n\t\tvar onComplete = function() {\n\t\t\titem.loading = false;\n\t\t\titem.loaded = true;\n\n\t\t\tif(item.loadComplete) {\n\t\t\t\titem.loadComplete(item);\n\t\t\t} else {\n\t\t\t\titem.img = null; // no need to store image object\n\t\t\t}\n\t\t\timg.onload = img.onerror = null;\n\t\t\timg = null;\n\t\t};\n\t\timg.onload = onComplete;\n\t\timg.onerror = function() {\n\t\t\titem.loadError = true;\n\t\t\tonComplete();\n\t\t};\t\t\n\n\t\timg.src = item.src;// + '?a=' + Math.random();\n\n\t\treturn img;\n\t},\n\t_checkForError = function(item, cleanUp) {\n\t\tif(item.src && item.loadError && item.container) {\n\n\t\t\tif(cleanUp) {\n\t\t\t\titem.container.innerHTML = '';\n\t\t\t}\n\n\t\t\titem.container.innerHTML = _options.errorMsg.replace('%url%',  item.src );\n\t\t\treturn true;\n\t\t\t\n\t\t}\n\t},\n\t_setImageSize = function(item, img, maxRes) {\n\t\tif(!item.src) {\n\t\t\treturn;\n\t\t}\n\n\t\tif(!img) {\n\t\t\timg = item.container.lastChild;\n\t\t}\n\n\t\tvar w = maxRes ? item.w : Math.round(item.w * item.fitRatio),\n\t\t\th = maxRes ? item.h : Math.round(item.h * item.fitRatio);\n\t\t\n\t\tif(item.placeholder && !item.loaded) {\n\t\t\titem.placeholder.style.width = w + 'px';\n\t\t\titem.placeholder.style.height = h + 'px';\n\t\t}\n\n\t\timg.style.width = w + 'px';\n\t\timg.style.height = h + 'px';\n\t},\n\t_appendImagesPool = function() {\n\n\t\tif(_imagesToAppendPool.length) {\n\t\t\tvar poolItem;\n\n\t\t\tfor(var i = 0; i < _imagesToAppendPool.length; i++) {\n\t\t\t\tpoolItem = _imagesToAppendPool[i];\n\t\t\t\tif( poolItem.holder.index === poolItem.index ) {\n\t\t\t\t\t_appendImage(poolItem.index, poolItem.item, poolItem.baseDiv, poolItem.img, false, poolItem.clearPlaceholder);\n\t\t\t\t}\n\t\t\t}\n\t\t\t_imagesToAppendPool = [];\n\t\t}\n\t};\n\t\n\n\n_registerModule('Controller', {\n\n\tpublicMethods: {\n\n\t\tlazyLoadItem: function(index) {\n\t\t\tindex = _getLoopedId(index);\n\t\t\tvar item = _getItemAt(index);\n\n\t\t\tif(!item || ((item.loaded || item.loading) && !_itemsNeedUpdate)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_shout('gettingData', index, item);\n\n\t\t\tif (!item.src) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_preloadImage(item);\n\t\t},\n\t\tinitController: function() {\n\t\t\tframework.extend(_options, _controllerDefaultOptions, true);\n\t\t\tself.items = _items = items;\n\t\t\t_getItemAt = self.getItemAt;\n\t\t\t_getNumItems = _options.getNumItemsFn; //self.getNumItems;\n\n\n\n\t\t\t_initialIsLoop = _options.loop;\n\t\t\tif(_getNumItems() < 3) {\n\t\t\t\t_options.loop = false; // disable loop if less then 3 items\n\t\t\t}\n\n\t\t\t_listen('beforeChange', function(diff) {\n\n\t\t\t\tvar p = _options.preload,\n\t\t\t\t\tisNext = diff === null ? true : (diff >= 0),\n\t\t\t\t\tpreloadBefore = Math.min(p[0], _getNumItems() ),\n\t\t\t\t\tpreloadAfter = Math.min(p[1], _getNumItems() ),\n\t\t\t\t\ti;\n\n\n\t\t\t\tfor(i = 1; i <= (isNext ? preloadAfter : preloadBefore); i++) {\n\t\t\t\t\tself.lazyLoadItem(_currentItemIndex+i);\n\t\t\t\t}\n\t\t\t\tfor(i = 1; i <= (isNext ? preloadBefore : preloadAfter); i++) {\n\t\t\t\t\tself.lazyLoadItem(_currentItemIndex-i);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t_listen('initialLayout', function() {\n\t\t\t\tself.currItem.initialLayout = _options.getThumbBoundsFn && _options.getThumbBoundsFn(_currentItemIndex);\n\t\t\t});\n\n\t\t\t_listen('mainScrollAnimComplete', _appendImagesPool);\n\t\t\t_listen('initialZoomInEnd', _appendImagesPool);\n\n\n\n\t\t\t_listen('destroy', function() {\n\t\t\t\tvar item;\n\t\t\t\tfor(var i = 0; i < _items.length; i++) {\n\t\t\t\t\titem = _items[i];\n\t\t\t\t\t// remove reference to DOM elements, for GC\n\t\t\t\t\tif(item.container) {\n\t\t\t\t\t\titem.container = null; \n\t\t\t\t\t}\n\t\t\t\t\tif(item.placeholder) {\n\t\t\t\t\t\titem.placeholder = null;\n\t\t\t\t\t}\n\t\t\t\t\tif(item.img) {\n\t\t\t\t\t\titem.img = null;\n\t\t\t\t\t}\n\t\t\t\t\tif(item.preloader) {\n\t\t\t\t\t\titem.preloader = null;\n\t\t\t\t\t}\n\t\t\t\t\tif(item.loadError) {\n\t\t\t\t\t\titem.loaded = item.loadError = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t_imagesToAppendPool = null;\n\t\t\t});\n\t\t},\n\n\n\t\tgetItemAt: function(index) {\n\t\t\tif (index >= 0) {\n\t\t\t\treturn _items[index] !== undefined ? _items[index] : false;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tallowProgressiveImg: function() {\n\t\t\t// 1. Progressive image loading isn't working on webkit/blink \n\t\t\t//    when hw-acceleration (e.g. translateZ) is applied to IMG element.\n\t\t\t//    That's why in PhotoSwipe parent element gets zoom transform, not image itself.\n\t\t\t//    \n\t\t\t// 2. Progressive image loading sometimes blinks in webkit/blink when applying animation to parent element.\n\t\t\t//    That's why it's disabled on touch devices (mainly because of swipe transition)\n\t\t\t//    \n\t\t\t// 3. Progressive image loading sometimes doesn't work in IE (up to 11).\n\n\t\t\t// Don't allow progressive loading on non-large touch devices\n\t\t\treturn _options.forceProgressiveLoading || !_likelyTouchDevice || _options.mouseUsed || screen.width > 1200; \n\t\t\t// 1200 - to eliminate touch devices with large screen (like Chromebook Pixel)\n\t\t},\n\n\t\tsetContent: function(holder, index) {\n\n\t\t\tif(_options.loop) {\n\t\t\t\tindex = _getLoopedId(index);\n\t\t\t}\n\n\t\t\tvar prevItem = self.getItemAt(holder.index);\n\t\t\tif(prevItem) {\n\t\t\t\tprevItem.container = null;\n\t\t\t}\n\t\n\t\t\tvar item = self.getItemAt(index),\n\t\t\t\timg;\n\t\t\t\n\t\t\tif(!item) {\n\t\t\t\tholder.el.innerHTML = '';\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// allow to override data\n\t\t\t_shout('gettingData', index, item);\n\n\t\t\tholder.index = index;\n\t\t\tholder.item = item;\n\n\t\t\t// base container DIV is created only once for each of 3 holders\n\t\t\tvar baseDiv = item.container = framework.createEl('pswp__zoom-wrap'); \n\n\t\t\t\n\n\t\t\tif(!item.src && item.html) {\n\t\t\t\tif(item.html.tagName) {\n\t\t\t\t\tbaseDiv.appendChild(item.html);\n\t\t\t\t} else {\n\t\t\t\t\tbaseDiv.innerHTML = item.html;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_checkForError(item);\n\n\t\t\t_calculateItemSize(item, _viewportSize);\n\t\t\t\n\t\t\tif(item.src && !item.loadError && !item.loaded) {\n\n\t\t\t\titem.loadComplete = function(item) {\n\n\t\t\t\t\t// gallery closed before image finished loading\n\t\t\t\t\tif(!_isOpen) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// check if holder hasn't changed while image was loading\n\t\t\t\t\tif(holder && holder.index === index ) {\n\t\t\t\t\t\tif( _checkForError(item, true) ) {\n\t\t\t\t\t\t\titem.loadComplete = item.img = null;\n\t\t\t\t\t\t\t_calculateItemSize(item, _viewportSize);\n\t\t\t\t\t\t\t_applyZoomPanToItem(item);\n\n\t\t\t\t\t\t\tif(holder.index === _currentItemIndex) {\n\t\t\t\t\t\t\t\t// recalculate dimensions\n\t\t\t\t\t\t\t\tself.updateCurrZoomItem();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif( !item.imageAppended ) {\n\t\t\t\t\t\t\tif(_features.transform && (_mainScrollAnimating || _initialZoomRunning) ) {\n\t\t\t\t\t\t\t\t_imagesToAppendPool.push({\n\t\t\t\t\t\t\t\t\titem:item,\n\t\t\t\t\t\t\t\t\tbaseDiv:baseDiv,\n\t\t\t\t\t\t\t\t\timg:item.img,\n\t\t\t\t\t\t\t\t\tindex:index,\n\t\t\t\t\t\t\t\t\tholder:holder,\n\t\t\t\t\t\t\t\t\tclearPlaceholder:true\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t_appendImage(index, item, baseDiv, item.img, _mainScrollAnimating || _initialZoomRunning, true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// remove preloader & mini-img\n\t\t\t\t\t\t\tif(!_initialZoomRunning && item.placeholder) {\n\t\t\t\t\t\t\t\titem.placeholder.style.display = 'none';\n\t\t\t\t\t\t\t\titem.placeholder = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\titem.loadComplete = null;\n\t\t\t\t\titem.img = null; // no need to store image element after it's added\n\n\t\t\t\t\t_shout('imageLoadComplete', index, item);\n\t\t\t\t};\n\n\t\t\t\tif(framework.features.transform) {\n\t\t\t\t\t\n\t\t\t\t\tvar placeholderClassName = 'pswp__img pswp__img--placeholder'; \n\t\t\t\t\tplaceholderClassName += (item.msrc ? '' : ' pswp__img--placeholder--blank');\n\n\t\t\t\t\tvar placeholder = framework.createEl(placeholderClassName, item.msrc ? 'img' : '');\n\t\t\t\t\tif(item.msrc) {\n\t\t\t\t\t\tplaceholder.src = item.msrc;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t_setImageSize(item, placeholder);\n\n\t\t\t\t\tbaseDiv.appendChild(placeholder);\n\t\t\t\t\titem.placeholder = placeholder;\n\n\t\t\t\t}\n\t\t\t\t\n\n\t\t\t\t\n\n\t\t\t\tif(!item.loading) {\n\t\t\t\t\t_preloadImage(item);\n\t\t\t\t}\n\n\n\t\t\t\tif( self.allowProgressiveImg() ) {\n\t\t\t\t\t// just append image\n\t\t\t\t\tif(!_initialContentSet && _features.transform) {\n\t\t\t\t\t\t_imagesToAppendPool.push({\n\t\t\t\t\t\t\titem:item, \n\t\t\t\t\t\t\tbaseDiv:baseDiv, \n\t\t\t\t\t\t\timg:item.img, \n\t\t\t\t\t\t\tindex:index, \n\t\t\t\t\t\t\tholder:holder\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_appendImage(index, item, baseDiv, item.img, true, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if(item.src && !item.loadError) {\n\t\t\t\t// image object is created every time, due to bugs of image loading & delay when switching images\n\t\t\t\timg = framework.createEl('pswp__img', 'img');\n\t\t\t\timg.style.opacity = 1;\n\t\t\t\timg.src = item.src;\n\t\t\t\t_setImageSize(item, img);\n\t\t\t\t_appendImage(index, item, baseDiv, img, true);\n\t\t\t}\n\t\t\t\n\n\t\t\tif(!_initialContentSet && index === _currentItemIndex) {\n\t\t\t\t_currZoomElementStyle = baseDiv.style;\n\t\t\t\t_showOrHide(item, (img ||item.img) );\n\t\t\t} else {\n\t\t\t\t_applyZoomPanToItem(item);\n\t\t\t}\n\n\t\t\tholder.el.innerHTML = '';\n\t\t\tholder.el.appendChild(baseDiv);\n\t\t},\n\n\t\tcleanSlide: function( item ) {\n\t\t\tif(item.img ) {\n\t\t\t\titem.img.onload = item.img.onerror = null;\n\t\t\t}\n\t\t\titem.loaded = item.loading = item.img = item.imageAppended = false;\n\t\t}\n\n\t}\n});\n\n/*>>items-controller*/\n\n/*>>tap*/\n/**\n * tap.js:\n *\n * Displatches tap and double-tap events.\n * \n */\n\nvar tapTimer,\n\ttapReleasePoint = {},\n\t_dispatchTapEvent = function(origEvent, releasePoint, pointerType) {\t\t\n\t\tvar e = document.createEvent( 'CustomEvent' ),\n\t\t\teDetail = {\n\t\t\t\torigEvent:origEvent, \n\t\t\t\ttarget:origEvent.target, \n\t\t\t\treleasePoint: releasePoint, \n\t\t\t\tpointerType:pointerType || 'touch'\n\t\t\t};\n\n\t\te.initCustomEvent( 'pswpTap', true, true, eDetail );\n\t\torigEvent.target.dispatchEvent(e);\n\t};\n\n_registerModule('Tap', {\n\tpublicMethods: {\n\t\tinitTap: function() {\n\t\t\t_listen('firstTouchStart', self.onTapStart);\n\t\t\t_listen('touchRelease', self.onTapRelease);\n\t\t\t_listen('destroy', function() {\n\t\t\t\ttapReleasePoint = {};\n\t\t\t\ttapTimer = null;\n\t\t\t});\n\t\t},\n\t\tonTapStart: function(touchList) {\n\t\t\tif(touchList.length > 1) {\n\t\t\t\tclearTimeout(tapTimer);\n\t\t\t\ttapTimer = null;\n\t\t\t}\n\t\t},\n\t\tonTapRelease: function(e, releasePoint) {\n\t\t\tif(!releasePoint) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(!_moved && !_isMultitouch && !_numAnimations) {\n\t\t\t\tvar p0 = releasePoint;\n\t\t\t\tif(tapTimer) {\n\t\t\t\t\tclearTimeout(tapTimer);\n\t\t\t\t\ttapTimer = null;\n\n\t\t\t\t\t// Check if taped on the same place\n\t\t\t\t\tif ( _isNearbyPoints(p0, tapReleasePoint) ) {\n\t\t\t\t\t\t_shout('doubleTap', p0);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(releasePoint.type === 'mouse') {\n\t\t\t\t\t_dispatchTapEvent(e, releasePoint, 'mouse');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar clickedTagName = e.target.tagName.toUpperCase();\n\t\t\t\t// avoid double tap delay on buttons and elements that have class pswp__single-tap\n\t\t\t\tif(clickedTagName === 'BUTTON' || framework.hasClass(e.target, 'pswp__single-tap') ) {\n\t\t\t\t\t_dispatchTapEvent(e, releasePoint);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t_equalizePoints(tapReleasePoint, p0);\n\n\t\t\t\ttapTimer = setTimeout(function() {\n\t\t\t\t\t_dispatchTapEvent(e, releasePoint);\n\t\t\t\t\ttapTimer = null;\n\t\t\t\t}, 300);\n\t\t\t}\n\t\t}\n\t}\n});\n\n/*>>tap*/\n\n/*>>desktop-zoom*/\n/**\n *\n * desktop-zoom.js:\n *\n * - Binds mousewheel event for paning zoomed image.\n * - Manages \"dragging\", \"zoomed-in\", \"zoom-out\" classes.\n *   (which are used for cursors and zoom icon)\n * - Adds toggleDesktopZoom function.\n * \n */\n\nvar _wheelDelta;\n\t\n_registerModule('DesktopZoom', {\n\n\tpublicMethods: {\n\n\t\tinitDesktopZoom: function() {\n\n\t\t\tif(_oldIE) {\n\t\t\t\t// no zoom for old IE (<=8)\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(_likelyTouchDevice) {\n\t\t\t\t// if detected hardware touch support, we wait until mouse is used,\n\t\t\t\t// and only then apply desktop-zoom features\n\t\t\t\t_listen('mouseUsed', function() {\n\t\t\t\t\tself.setupDesktopZoom();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tself.setupDesktopZoom(true);\n\t\t\t}\n\n\t\t},\n\n\t\tsetupDesktopZoom: function(onInit) {\n\n\t\t\t_wheelDelta = {};\n\n\t\t\tvar events = 'wheel mousewheel DOMMouseScroll';\n\t\t\t\n\t\t\t_listen('bindEvents', function() {\n\t\t\t\tframework.bind(template, events,  self.handleMouseWheel);\n\t\t\t});\n\n\t\t\t_listen('unbindEvents', function() {\n\t\t\t\tif(_wheelDelta) {\n\t\t\t\t\tframework.unbind(template, events, self.handleMouseWheel);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tself.mouseZoomedIn = false;\n\n\t\t\tvar hasDraggingClass,\n\t\t\t\tupdateZoomable = function() {\n\t\t\t\t\tif(self.mouseZoomedIn) {\n\t\t\t\t\t\tframework.removeClass(template, 'pswp--zoomed-in');\n\t\t\t\t\t\tself.mouseZoomedIn = false;\n\t\t\t\t\t}\n\t\t\t\t\tif(_currZoomLevel < 1) {\n\t\t\t\t\t\tframework.addClass(template, 'pswp--zoom-allowed');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tframework.removeClass(template, 'pswp--zoom-allowed');\n\t\t\t\t\t}\n\t\t\t\t\tremoveDraggingClass();\n\t\t\t\t},\n\t\t\t\tremoveDraggingClass = function() {\n\t\t\t\t\tif(hasDraggingClass) {\n\t\t\t\t\t\tframework.removeClass(template, 'pswp--dragging');\n\t\t\t\t\t\thasDraggingClass = false;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t_listen('resize' , updateZoomable);\n\t\t\t_listen('afterChange' , updateZoomable);\n\t\t\t_listen('pointerDown', function() {\n\t\t\t\tif(self.mouseZoomedIn) {\n\t\t\t\t\thasDraggingClass = true;\n\t\t\t\t\tframework.addClass(template, 'pswp--dragging');\n\t\t\t\t}\n\t\t\t});\n\t\t\t_listen('pointerUp', removeDraggingClass);\n\n\t\t\tif(!onInit) {\n\t\t\t\tupdateZoomable();\n\t\t\t}\n\t\t\t\n\t\t},\n\n\t\thandleMouseWheel: function(e) {\n\n\t\t\tif(_currZoomLevel <= self.currItem.fitRatio) {\n\t\t\t\tif( _options.modal ) {\n\n\t\t\t\t\tif (!_options.closeOnScroll || _numAnimations || _isDragging) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t} else if(_transformKey && Math.abs(e.deltaY) > 2) {\n\t\t\t\t\t\t// close PhotoSwipe\n\t\t\t\t\t\t// if browser supports transforms & scroll changed enough\n\t\t\t\t\t\t_closedByScroll = true;\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// allow just one event to fire\n\t\t\te.stopPropagation();\n\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n\t\t\t_wheelDelta.x = 0;\n\n\t\t\tif('deltaX' in e) {\n\t\t\t\tif(e.deltaMode === 1 /* DOM_DELTA_LINE */) {\n\t\t\t\t\t// 18 - average line height\n\t\t\t\t\t_wheelDelta.x = e.deltaX * 18;\n\t\t\t\t\t_wheelDelta.y = e.deltaY * 18;\n\t\t\t\t} else {\n\t\t\t\t\t_wheelDelta.x = e.deltaX;\n\t\t\t\t\t_wheelDelta.y = e.deltaY;\n\t\t\t\t}\n\t\t\t} else if('wheelDelta' in e) {\n\t\t\t\tif(e.wheelDeltaX) {\n\t\t\t\t\t_wheelDelta.x = -0.16 * e.wheelDeltaX;\n\t\t\t\t}\n\t\t\t\tif(e.wheelDeltaY) {\n\t\t\t\t\t_wheelDelta.y = -0.16 * e.wheelDeltaY;\n\t\t\t\t} else {\n\t\t\t\t\t_wheelDelta.y = -0.16 * e.wheelDelta;\n\t\t\t\t}\n\t\t\t} else if('detail' in e) {\n\t\t\t\t_wheelDelta.y = e.detail;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_calculatePanBounds(_currZoomLevel, true);\n\n\t\t\tvar newPanX = _panOffset.x - _wheelDelta.x,\n\t\t\t\tnewPanY = _panOffset.y - _wheelDelta.y;\n\n\t\t\t// only prevent scrolling in nonmodal mode when not at edges\n\t\t\tif (_options.modal ||\n\t\t\t\t(\n\t\t\t\tnewPanX <= _currPanBounds.min.x && newPanX >= _currPanBounds.max.x &&\n\t\t\t\tnewPanY <= _currPanBounds.min.y && newPanY >= _currPanBounds.max.y\n\t\t\t\t) ) {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\n\t\t\t// TODO: use rAF instead of mousewheel?\n\t\t\tself.panTo(newPanX, newPanY);\n\t\t},\n\n\t\ttoggleDesktopZoom: function(centerPoint) {\n\t\t\tcenterPoint = centerPoint || {x:_viewportSize.x/2 + _offset.x, y:_viewportSize.y/2 + _offset.y };\n\n\t\t\tvar doubleTapZoomLevel = _options.getDoubleTapZoom(true, self.currItem);\n\t\t\tvar zoomOut = _currZoomLevel === doubleTapZoomLevel;\n\t\t\t\n\t\t\tself.mouseZoomedIn = !zoomOut;\n\n\t\t\tself.zoomTo(zoomOut ? self.currItem.initialZoomLevel : doubleTapZoomLevel, centerPoint, 333);\n\t\t\tframework[ (!zoomOut ? 'add' : 'remove') + 'Class'](template, 'pswp--zoomed-in');\n\t\t}\n\n\t}\n});\n\n\n/*>>desktop-zoom*/\n\n/*>>history*/\n/**\n *\n * history.js:\n *\n * - Back button to close gallery.\n * \n * - Unique URL for each slide: example.com/&pid=1&gid=3\n *   (where PID is picture index, and GID and gallery index)\n *   \n * - Switch URL when slides change.\n * \n */\n\n\nvar _historyDefaultOptions = {\n\thistory: true,\n\tgalleryUID: 1\n};\n\nvar _historyUpdateTimeout,\n\t_hashChangeTimeout,\n\t_hashAnimCheckTimeout,\n\t_hashChangedByScript,\n\t_hashChangedByHistory,\n\t_hashReseted,\n\t_initialHash,\n\t_historyChanged,\n\t_closedFromURL,\n\t_urlChangedOnce,\n\t_windowLoc,\n\n\t_supportsPushState,\n\n\t_getHash = function() {\n\t\treturn _windowLoc.hash.substring(1);\n\t},\n\t_cleanHistoryTimeouts = function() {\n\n\t\tif(_historyUpdateTimeout) {\n\t\t\tclearTimeout(_historyUpdateTimeout);\n\t\t}\n\n\t\tif(_hashAnimCheckTimeout) {\n\t\t\tclearTimeout(_hashAnimCheckTimeout);\n\t\t}\n\t},\n\n\t// pid - Picture index\n\t// gid - Gallery index\n\t_parseItemIndexFromURL = function() {\n\t\tvar hash = _getHash(),\n\t\t\tparams = {};\n\n\t\tif(hash.length < 5) { // pid=1\n\t\t\treturn params;\n\t\t}\n\n\t\tvar i, vars = hash.split('&');\n\t\tfor (i = 0; i < vars.length; i++) {\n\t\t\tif(!vars[i]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar pair = vars[i].split('=');\t\n\t\t\tif(pair.length < 2) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tparams[pair[0]] = pair[1];\n\t\t}\n\t\tif(_options.galleryPIDs) {\n\t\t\t// detect custom pid in hash and search for it among the items collection\n\t\t\tvar searchfor = params.pid;\n\t\t\tparams.pid = 0; // if custom pid cannot be found, fallback to the first item\n\t\t\tfor(i = 0; i < _items.length; i++) {\n\t\t\t\tif(_items[i].pid === searchfor) {\n\t\t\t\t\tparams.pid = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tparams.pid = parseInt(params.pid,10)-1;\n\t\t}\n\t\tif( params.pid < 0 ) {\n\t\t\tparams.pid = 0;\n\t\t}\n\t\treturn params;\n\t},\n\t_updateHash = function() {\n\n\t\tif(_hashAnimCheckTimeout) {\n\t\t\tclearTimeout(_hashAnimCheckTimeout);\n\t\t}\n\n\n\t\tif(_numAnimations || _isDragging) {\n\t\t\t// changing browser URL forces layout/paint in some browsers, which causes noticable lag during animation\n\t\t\t// that's why we update hash only when no animations running\n\t\t\t_hashAnimCheckTimeout = setTimeout(_updateHash, 500);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(_hashChangedByScript) {\n\t\t\tclearTimeout(_hashChangeTimeout);\n\t\t} else {\n\t\t\t_hashChangedByScript = true;\n\t\t}\n\n\n\t\tvar pid = (_currentItemIndex + 1);\n\t\tvar item = _getItemAt( _currentItemIndex );\n\t\tif(item.hasOwnProperty('pid')) {\n\t\t\t// carry forward any custom pid assigned to the item\n\t\t\tpid = item.pid;\n\t\t}\n\t\tvar newHash = _initialHash + '&'  +  'gid=' + _options.galleryUID + '&' + 'pid=' + pid;\n\n\t\tif(!_historyChanged) {\n\t\t\tif(_windowLoc.hash.indexOf(newHash) === -1) {\n\t\t\t\t_urlChangedOnce = true;\n\t\t\t}\n\t\t\t// first time - add new hisory record, then just replace\n\t\t}\n\n\t\tvar newURL = _windowLoc.href.split('#')[0] + '#' +  newHash;\n\n\t\tif( _supportsPushState ) {\n\n\t\t\tif('#' + newHash !== window.location.hash) {\n\t\t\t\thistory[_historyChanged ? 'replaceState' : 'pushState']('', document.title, newURL);\n\t\t\t}\n\n\t\t} else {\n\t\t\tif(_historyChanged) {\n\t\t\t\t_windowLoc.replace( newURL );\n\t\t\t} else {\n\t\t\t\t_windowLoc.hash = newHash;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\n\t\t_historyChanged = true;\n\t\t_hashChangeTimeout = setTimeout(function() {\n\t\t\t_hashChangedByScript = false;\n\t\t}, 60);\n\t};\n\n\n\n\t\n\n_registerModule('History', {\n\n\t\n\n\tpublicMethods: {\n\t\tinitHistory: function() {\n\n\t\t\tframework.extend(_options, _historyDefaultOptions, true);\n\n\t\t\tif( !_options.history ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\t_windowLoc = window.location;\n\t\t\t_urlChangedOnce = false;\n\t\t\t_closedFromURL = false;\n\t\t\t_historyChanged = false;\n\t\t\t_initialHash = _getHash();\n\t\t\t_supportsPushState = ('pushState' in history);\n\n\n\t\t\tif(_initialHash.indexOf('gid=') > -1) {\n\t\t\t\t_initialHash = _initialHash.split('&gid=')[0];\n\t\t\t\t_initialHash = _initialHash.split('?gid=')[0];\n\t\t\t}\n\t\t\t\n\n\t\t\t_listen('afterChange', self.updateURL);\n\t\t\t_listen('unbindEvents', function() {\n\t\t\t\tframework.unbind(window, 'hashchange', self.onHashChange);\n\t\t\t});\n\n\n\t\t\tvar returnToOriginal = function() {\n\t\t\t\t_hashReseted = true;\n\t\t\t\tif(!_closedFromURL) {\n\n\t\t\t\t\tif(_urlChangedOnce) {\n\t\t\t\t\t\thistory.back();\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif(_initialHash) {\n\t\t\t\t\t\t\t_windowLoc.hash = _initialHash;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_supportsPushState) {\n\n\t\t\t\t\t\t\t\t// remove hash from url without refreshing it or scrolling to top\n\t\t\t\t\t\t\t\thistory.pushState('', document.title,  _windowLoc.pathname + _windowLoc.search );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t_windowLoc.hash = '';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\n\t\t\t\t_cleanHistoryTimeouts();\n\t\t\t};\n\n\n\t\t\t_listen('unbindEvents', function() {\n\t\t\t\tif(_closedByScroll) {\n\t\t\t\t\t// if PhotoSwipe is closed by scroll, we go \"back\" before the closing animation starts\n\t\t\t\t\t// this is done to keep the scroll position\n\t\t\t\t\treturnToOriginal();\n\t\t\t\t}\n\t\t\t});\n\t\t\t_listen('destroy', function() {\n\t\t\t\tif(!_hashReseted) {\n\t\t\t\t\treturnToOriginal();\n\t\t\t\t}\n\t\t\t});\n\t\t\t_listen('firstUpdate', function() {\n\t\t\t\t_currentItemIndex = _parseItemIndexFromURL().pid;\n\t\t\t});\n\n\t\t\t\n\n\t\t\t\n\t\t\tvar index = _initialHash.indexOf('pid=');\n\t\t\tif(index > -1) {\n\t\t\t\t_initialHash = _initialHash.substring(0, index);\n\t\t\t\tif(_initialHash.slice(-1) === '&') {\n\t\t\t\t\t_initialHash = _initialHash.slice(0, -1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\n\t\t\tsetTimeout(function() {\n\t\t\t\tif(_isOpen) { // hasn't destroyed yet\n\t\t\t\t\tframework.bind(window, 'hashchange', self.onHashChange);\n\t\t\t\t}\n\t\t\t}, 40);\n\t\t\t\n\t\t},\n\t\tonHashChange: function() {\n\n\t\t\tif(_getHash() === _initialHash) {\n\n\t\t\t\t_closedFromURL = true;\n\t\t\t\tself.close();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(!_hashChangedByScript) {\n\n\t\t\t\t_hashChangedByHistory = true;\n\t\t\t\tself.goTo( _parseItemIndexFromURL().pid );\n\t\t\t\t_hashChangedByHistory = false;\n\t\t\t}\n\t\t\t\n\t\t},\n\t\tupdateURL: function() {\n\n\t\t\t// Delay the update of URL, to avoid lag during transition, \n\t\t\t// and to not to trigger actions like \"refresh page sound\" or \"blinking favicon\" to often\n\t\t\t\n\t\t\t_cleanHistoryTimeouts();\n\t\t\t\n\n\t\t\tif(_hashChangedByHistory) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(!_historyChanged) {\n\t\t\t\t_updateHash(); // first time\n\t\t\t} else {\n\t\t\t\t_historyUpdateTimeout = setTimeout(_updateHash, 800);\n\t\t\t}\n\t\t}\n\t\n\t}\n});\n\n\n/*>>history*/\n\tframework.extend(self, publicMethods); };\n\treturn PhotoSwipe;\n});","/*!\nWaypoints - 4.0.0\nCopyright © 2011-2015 Caleb Troughton\nLicensed under the MIT license.\nhttps://github.com/imakewebthings/waypoints/blog/master/licenses.txt\n*/\n(function() {\n  'use strict'\n\n  var keyCounter = 0\n  var allWaypoints = {}\n\n  /* http://imakewebthings.com/waypoints/api/waypoint */\n  function Waypoint(options) {\n    if (!options) {\n      throw new Error('No options passed to Waypoint constructor')\n    }\n    if (!options.element) {\n      throw new Error('No element option passed to Waypoint constructor')\n    }\n    if (!options.handler) {\n      throw new Error('No handler option passed to Waypoint constructor')\n    }\n\n    this.key = 'waypoint-' + keyCounter\n    this.options = Waypoint.Adapter.extend({}, Waypoint.defaults, options)\n    this.element = this.options.element\n    this.adapter = new Waypoint.Adapter(this.element)\n    this.callback = options.handler\n    this.axis = this.options.horizontal ? 'horizontal' : 'vertical'\n    this.enabled = this.options.enabled\n    this.triggerPoint = null\n    this.group = Waypoint.Group.findOrCreate({\n      name: this.options.group,\n      axis: this.axis\n    })\n    this.context = Waypoint.Context.findOrCreateByElement(this.options.context)\n\n    if (Waypoint.offsetAliases[this.options.offset]) {\n      this.options.offset = Waypoint.offsetAliases[this.options.offset]\n    }\n    this.group.add(this)\n    this.context.add(this)\n    allWaypoints[this.key] = this\n    keyCounter += 1\n  }\n\n  /* Private */\n  Waypoint.prototype.queueTrigger = function(direction) {\n    this.group.queueTrigger(this, direction)\n  }\n\n  /* Private */\n  Waypoint.prototype.trigger = function(args) {\n    if (!this.enabled) {\n      return\n    }\n    if (this.callback) {\n      this.callback.apply(this, args)\n    }\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/destroy */\n  Waypoint.prototype.destroy = function() {\n    this.context.remove(this)\n    this.group.remove(this)\n    delete allWaypoints[this.key]\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/disable */\n  Waypoint.prototype.disable = function() {\n    this.enabled = false\n    return this\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/enable */\n  Waypoint.prototype.enable = function() {\n    this.context.refresh()\n    this.enabled = true\n    return this\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/next */\n  Waypoint.prototype.next = function() {\n    return this.group.next(this)\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/previous */\n  Waypoint.prototype.previous = function() {\n    return this.group.previous(this)\n  }\n\n  /* Private */\n  Waypoint.invokeAll = function(method) {\n    var allWaypointsArray = []\n    for (var waypointKey in allWaypoints) {\n      allWaypointsArray.push(allWaypoints[waypointKey])\n    }\n    for (var i = 0, end = allWaypointsArray.length; i < end; i++) {\n      allWaypointsArray[i][method]()\n    }\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/destroy-all */\n  Waypoint.destroyAll = function() {\n    Waypoint.invokeAll('destroy')\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/disable-all */\n  Waypoint.disableAll = function() {\n    Waypoint.invokeAll('disable')\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/enable-all */\n  Waypoint.enableAll = function() {\n    Waypoint.invokeAll('enable')\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/refresh-all */\n  Waypoint.refreshAll = function() {\n    Waypoint.Context.refreshAll()\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/viewport-height */\n  Waypoint.viewportHeight = function() {\n    return window.innerHeight || document.documentElement.clientHeight\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/viewport-width */\n  Waypoint.viewportWidth = function() {\n    return document.documentElement.clientWidth\n  }\n\n  Waypoint.adapters = []\n\n  Waypoint.defaults = {\n    context: window,\n    continuous: true,\n    enabled: true,\n    group: 'default',\n    horizontal: false,\n    offset: 0\n  }\n\n  Waypoint.offsetAliases = {\n    'bottom-in-view': function() {\n      return this.context.innerHeight() - this.adapter.outerHeight()\n    },\n    'right-in-view': function() {\n      return this.context.innerWidth() - this.adapter.outerWidth()\n    }\n  }\n\n  window.Waypoint = Waypoint\n}())\n;(function() {\n  'use strict'\n\n  function requestAnimationFrameShim(callback) {\n    window.setTimeout(callback, 1000 / 60)\n  }\n\n  var keyCounter = 0\n  var contexts = {}\n  var Waypoint = window.Waypoint\n  var oldWindowLoad = window.onload\n\n  /* http://imakewebthings.com/waypoints/api/context */\n  function Context(element) {\n    this.element = element\n    this.Adapter = Waypoint.Adapter\n    this.adapter = new this.Adapter(element)\n    this.key = 'waypoint-context-' + keyCounter\n    this.didScroll = false\n    this.didResize = false\n    this.oldScroll = {\n      x: this.adapter.scrollLeft(),\n      y: this.adapter.scrollTop()\n    }\n    this.waypoints = {\n      vertical: {},\n      horizontal: {}\n    }\n\n    element.waypointContextKey = this.key\n    contexts[element.waypointContextKey] = this\n    keyCounter += 1\n\n    this.createThrottledScrollHandler()\n    this.createThrottledResizeHandler()\n  }\n\n  /* Private */\n  Context.prototype.add = function(waypoint) {\n    var axis = waypoint.options.horizontal ? 'horizontal' : 'vertical'\n    this.waypoints[axis][waypoint.key] = waypoint\n    this.refresh()\n  }\n\n  /* Private */\n  Context.prototype.checkEmpty = function() {\n    var horizontalEmpty = this.Adapter.isEmptyObject(this.waypoints.horizontal)\n    var verticalEmpty = this.Adapter.isEmptyObject(this.waypoints.vertical)\n    if (horizontalEmpty && verticalEmpty) {\n      this.adapter.off('.waypoints')\n      delete contexts[this.key]\n    }\n  }\n\n  /* Private */\n  Context.prototype.createThrottledResizeHandler = function() {\n    var self = this\n\n    function resizeHandler() {\n      self.handleResize()\n      self.didResize = false\n    }\n\n    this.adapter.on('resize.waypoints', function() {\n      if (!self.didResize) {\n        self.didResize = true\n        Waypoint.requestAnimationFrame(resizeHandler)\n      }\n    })\n  }\n\n  /* Private */\n  Context.prototype.createThrottledScrollHandler = function() {\n    var self = this\n    function scrollHandler() {\n      self.handleScroll()\n      self.didScroll = false\n    }\n\n    this.adapter.on('scroll.waypoints', function() {\n      if (!self.didScroll || Waypoint.isTouch) {\n        self.didScroll = true\n        Waypoint.requestAnimationFrame(scrollHandler)\n      }\n    })\n  }\n\n  /* Private */\n  Context.prototype.handleResize = function() {\n    Waypoint.Context.refreshAll()\n  }\n\n  /* Private */\n  Context.prototype.handleScroll = function() {\n    var triggeredGroups = {}\n    var axes = {\n      horizontal: {\n        newScroll: this.adapter.scrollLeft(),\n        oldScroll: this.oldScroll.x,\n        forward: 'right',\n        backward: 'left'\n      },\n      vertical: {\n        newScroll: this.adapter.scrollTop(),\n        oldScroll: this.oldScroll.y,\n        forward: 'down',\n        backward: 'up'\n      }\n    }\n\n    for (var axisKey in axes) {\n      var axis = axes[axisKey]\n      var isForward = axis.newScroll > axis.oldScroll\n      var direction = isForward ? axis.forward : axis.backward\n\n      for (var waypointKey in this.waypoints[axisKey]) {\n        var waypoint = this.waypoints[axisKey][waypointKey]\n        var wasBeforeTriggerPoint = axis.oldScroll < waypoint.triggerPoint\n        var nowAfterTriggerPoint = axis.newScroll >= waypoint.triggerPoint\n        var crossedForward = wasBeforeTriggerPoint && nowAfterTriggerPoint\n        var crossedBackward = !wasBeforeTriggerPoint && !nowAfterTriggerPoint\n        if (crossedForward || crossedBackward) {\n          waypoint.queueTrigger(direction)\n          triggeredGroups[waypoint.group.id] = waypoint.group\n        }\n      }\n    }\n\n    for (var groupKey in triggeredGroups) {\n      triggeredGroups[groupKey].flushTriggers()\n    }\n\n    this.oldScroll = {\n      x: axes.horizontal.newScroll,\n      y: axes.vertical.newScroll\n    }\n  }\n\n  /* Private */\n  Context.prototype.innerHeight = function() {\n    /*eslint-disable eqeqeq */\n    if (this.element == this.element.window) {\n      return Waypoint.viewportHeight()\n    }\n    /*eslint-enable eqeqeq */\n    return this.adapter.innerHeight()\n  }\n\n  /* Private */\n  Context.prototype.remove = function(waypoint) {\n    delete this.waypoints[waypoint.axis][waypoint.key]\n    this.checkEmpty()\n  }\n\n  /* Private */\n  Context.prototype.innerWidth = function() {\n    /*eslint-disable eqeqeq */\n    if (this.element == this.element.window) {\n      return Waypoint.viewportWidth()\n    }\n    /*eslint-enable eqeqeq */\n    return this.adapter.innerWidth()\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/context-destroy */\n  Context.prototype.destroy = function() {\n    var allWaypoints = []\n    for (var axis in this.waypoints) {\n      for (var waypointKey in this.waypoints[axis]) {\n        allWaypoints.push(this.waypoints[axis][waypointKey])\n      }\n    }\n    for (var i = 0, end = allWaypoints.length; i < end; i++) {\n      allWaypoints[i].destroy()\n    }\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/context-refresh */\n  Context.prototype.refresh = function() {\n    /*eslint-disable eqeqeq */\n    var isWindow = this.element == this.element.window\n    /*eslint-enable eqeqeq */\n    var contextOffset = isWindow ? undefined : this.adapter.offset()\n    var triggeredGroups = {}\n    var axes\n\n    this.handleScroll()\n    axes = {\n      horizontal: {\n        contextOffset: isWindow ? 0 : contextOffset.left,\n        contextScroll: isWindow ? 0 : this.oldScroll.x,\n        contextDimension: this.innerWidth(),\n        oldScroll: this.oldScroll.x,\n        forward: 'right',\n        backward: 'left',\n        offsetProp: 'left'\n      },\n      vertical: {\n        contextOffset: isWindow ? 0 : contextOffset.top,\n        contextScroll: isWindow ? 0 : this.oldScroll.y,\n        contextDimension: this.innerHeight(),\n        oldScroll: this.oldScroll.y,\n        forward: 'down',\n        backward: 'up',\n        offsetProp: 'top'\n      }\n    }\n\n    for (var axisKey in axes) {\n      var axis = axes[axisKey]\n      for (var waypointKey in this.waypoints[axisKey]) {\n        var waypoint = this.waypoints[axisKey][waypointKey]\n        var adjustment = waypoint.options.offset\n        var oldTriggerPoint = waypoint.triggerPoint\n        var elementOffset = 0\n        var freshWaypoint = oldTriggerPoint == null\n        var contextModifier, wasBeforeScroll, nowAfterScroll\n        var triggeredBackward, triggeredForward\n\n        if (waypoint.element !== waypoint.element.window) {\n          elementOffset = waypoint.adapter.offset()[axis.offsetProp]\n        }\n\n        if (typeof adjustment === 'function') {\n          adjustment = adjustment.apply(waypoint)\n        }\n        else if (typeof adjustment === 'string') {\n          adjustment = parseFloat(adjustment)\n          if (waypoint.options.offset.indexOf('%') > - 1) {\n            adjustment = Math.ceil(axis.contextDimension * adjustment / 100)\n          }\n        }\n\n        contextModifier = axis.contextScroll - axis.contextOffset\n        waypoint.triggerPoint = elementOffset + contextModifier - adjustment\n        wasBeforeScroll = oldTriggerPoint < axis.oldScroll\n        nowAfterScroll = waypoint.triggerPoint >= axis.oldScroll\n        triggeredBackward = wasBeforeScroll && nowAfterScroll\n        triggeredForward = !wasBeforeScroll && !nowAfterScroll\n\n        if (!freshWaypoint && triggeredBackward) {\n          waypoint.queueTrigger(axis.backward)\n          triggeredGroups[waypoint.group.id] = waypoint.group\n        }\n        else if (!freshWaypoint && triggeredForward) {\n          waypoint.queueTrigger(axis.forward)\n          triggeredGroups[waypoint.group.id] = waypoint.group\n        }\n        else if (freshWaypoint && axis.oldScroll >= waypoint.triggerPoint) {\n          waypoint.queueTrigger(axis.forward)\n          triggeredGroups[waypoint.group.id] = waypoint.group\n        }\n      }\n    }\n\n    Waypoint.requestAnimationFrame(function() {\n      for (var groupKey in triggeredGroups) {\n        triggeredGroups[groupKey].flushTriggers()\n      }\n    })\n\n    return this\n  }\n\n  /* Private */\n  Context.findOrCreateByElement = function(element) {\n    return Context.findByElement(element) || new Context(element)\n  }\n\n  /* Private */\n  Context.refreshAll = function() {\n    for (var contextId in contexts) {\n      contexts[contextId].refresh()\n    }\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/context-find-by-element */\n  Context.findByElement = function(element) {\n    return contexts[element.waypointContextKey]\n  }\n\n  window.onload = function() {\n    if (oldWindowLoad) {\n      oldWindowLoad()\n    }\n    Context.refreshAll()\n  }\n\n  Waypoint.requestAnimationFrame = function(callback) {\n    var requestFn = window.requestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      requestAnimationFrameShim\n    requestFn.call(window, callback)\n  }\n  Waypoint.Context = Context\n}())\n;(function() {\n  'use strict'\n\n  function byTriggerPoint(a, b) {\n    return a.triggerPoint - b.triggerPoint\n  }\n\n  function byReverseTriggerPoint(a, b) {\n    return b.triggerPoint - a.triggerPoint\n  }\n\n  var groups = {\n    vertical: {},\n    horizontal: {}\n  }\n  var Waypoint = window.Waypoint\n\n  /* http://imakewebthings.com/waypoints/api/group */\n  function Group(options) {\n    this.name = options.name\n    this.axis = options.axis\n    this.id = this.name + '-' + this.axis\n    this.waypoints = []\n    this.clearTriggerQueues()\n    groups[this.axis][this.name] = this\n  }\n\n  /* Private */\n  Group.prototype.add = function(waypoint) {\n    this.waypoints.push(waypoint)\n  }\n\n  /* Private */\n  Group.prototype.clearTriggerQueues = function() {\n    this.triggerQueues = {\n      up: [],\n      down: [],\n      left: [],\n      right: []\n    }\n  }\n\n  /* Private */\n  Group.prototype.flushTriggers = function() {\n    for (var direction in this.triggerQueues) {\n      var waypoints = this.triggerQueues[direction]\n      var reverse = direction === 'up' || direction === 'left'\n      waypoints.sort(reverse ? byReverseTriggerPoint : byTriggerPoint)\n      for (var i = 0, end = waypoints.length; i < end; i += 1) {\n        var waypoint = waypoints[i]\n        if (waypoint.options.continuous || i === waypoints.length - 1) {\n          waypoint.trigger([direction])\n        }\n      }\n    }\n    this.clearTriggerQueues()\n  }\n\n  /* Private */\n  Group.prototype.next = function(waypoint) {\n    this.waypoints.sort(byTriggerPoint)\n    var index = Waypoint.Adapter.inArray(waypoint, this.waypoints)\n    var isLast = index === this.waypoints.length - 1\n    return isLast ? null : this.waypoints[index + 1]\n  }\n\n  /* Private */\n  Group.prototype.previous = function(waypoint) {\n    this.waypoints.sort(byTriggerPoint)\n    var index = Waypoint.Adapter.inArray(waypoint, this.waypoints)\n    return index ? this.waypoints[index - 1] : null\n  }\n\n  /* Private */\n  Group.prototype.queueTrigger = function(waypoint, direction) {\n    this.triggerQueues[direction].push(waypoint)\n  }\n\n  /* Private */\n  Group.prototype.remove = function(waypoint) {\n    var index = Waypoint.Adapter.inArray(waypoint, this.waypoints)\n    if (index > -1) {\n      this.waypoints.splice(index, 1)\n    }\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/first */\n  Group.prototype.first = function() {\n    return this.waypoints[0]\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/last */\n  Group.prototype.last = function() {\n    return this.waypoints[this.waypoints.length - 1]\n  }\n\n  /* Private */\n  Group.findOrCreate = function(options) {\n    return groups[options.axis][options.name] || new Group(options)\n  }\n\n  Waypoint.Group = Group\n}())\n;(function() {\n  'use strict'\n\n  var Waypoint = window.Waypoint\n\n  function isWindow(element) {\n    return element === element.window\n  }\n\n  function getWindow(element) {\n    if (isWindow(element)) {\n      return element\n    }\n    return element.defaultView\n  }\n\n  function NoFrameworkAdapter(element) {\n    this.element = element\n    this.handlers = {}\n  }\n\n  NoFrameworkAdapter.prototype.innerHeight = function() {\n    var isWin = isWindow(this.element)\n    return isWin ? this.element.innerHeight : this.element.clientHeight\n  }\n\n  NoFrameworkAdapter.prototype.innerWidth = function() {\n    var isWin = isWindow(this.element)\n    return isWin ? this.element.innerWidth : this.element.clientWidth\n  }\n\n  NoFrameworkAdapter.prototype.off = function(event, handler) {\n    function removeListeners(element, listeners, handler) {\n      for (var i = 0, end = listeners.length - 1; i < end; i++) {\n        var listener = listeners[i]\n        if (!handler || handler === listener) {\n          element.removeEventListener(listener)\n        }\n      }\n    }\n\n    var eventParts = event.split('.')\n    var eventType = eventParts[0]\n    var namespace = eventParts[1]\n    var element = this.element\n\n    if (namespace && this.handlers[namespace] && eventType) {\n      removeListeners(element, this.handlers[namespace][eventType], handler)\n      this.handlers[namespace][eventType] = []\n    }\n    else if (eventType) {\n      for (var ns in this.handlers) {\n        removeListeners(element, this.handlers[ns][eventType] || [], handler)\n        this.handlers[ns][eventType] = []\n      }\n    }\n    else if (namespace && this.handlers[namespace]) {\n      for (var type in this.handlers[namespace]) {\n        removeListeners(element, this.handlers[namespace][type], handler)\n      }\n      this.handlers[namespace] = {}\n    }\n  }\n\n  /* Adapted from jQuery 1.x offset() */\n  NoFrameworkAdapter.prototype.offset = function() {\n    if (!this.element.ownerDocument) {\n      return null\n    }\n\n    var documentElement = this.element.ownerDocument.documentElement\n    var win = getWindow(this.element.ownerDocument)\n    var rect = {\n      top: 0,\n      left: 0\n    }\n\n    if (this.element.getBoundingClientRect) {\n      rect = this.element.getBoundingClientRect()\n    }\n\n    return {\n      top: rect.top + win.pageYOffset - documentElement.clientTop,\n      left: rect.left + win.pageXOffset - documentElement.clientLeft\n    }\n  }\n\n  NoFrameworkAdapter.prototype.on = function(event, handler) {\n    var eventParts = event.split('.')\n    var eventType = eventParts[0]\n    var namespace = eventParts[1] || '__default'\n    var nsHandlers = this.handlers[namespace] = this.handlers[namespace] || {}\n    var nsTypeList = nsHandlers[eventType] = nsHandlers[eventType] || []\n\n    nsTypeList.push(handler)\n    this.element.addEventListener(eventType, handler)\n  }\n\n  NoFrameworkAdapter.prototype.outerHeight = function(includeMargin) {\n    var height = this.innerHeight()\n    var computedStyle\n\n    if (includeMargin && !isWindow(this.element)) {\n      computedStyle = window.getComputedStyle(this.element)\n      height += parseInt(computedStyle.marginTop, 10)\n      height += parseInt(computedStyle.marginBottom, 10)\n    }\n\n    return height\n  }\n\n  NoFrameworkAdapter.prototype.outerWidth = function(includeMargin) {\n    var width = this.innerWidth()\n    var computedStyle\n\n    if (includeMargin && !isWindow(this.element)) {\n      computedStyle = window.getComputedStyle(this.element)\n      width += parseInt(computedStyle.marginLeft, 10)\n      width += parseInt(computedStyle.marginRight, 10)\n    }\n\n    return width\n  }\n\n  NoFrameworkAdapter.prototype.scrollLeft = function() {\n    var win = getWindow(this.element)\n    return win ? win.pageXOffset : this.element.scrollLeft\n  }\n\n  NoFrameworkAdapter.prototype.scrollTop = function() {\n    var win = getWindow(this.element)\n    return win ? win.pageYOffset : this.element.scrollTop\n  }\n\n  NoFrameworkAdapter.extend = function() {\n    var args = Array.prototype.slice.call(arguments)\n\n    function merge(target, obj) {\n      if (typeof target === 'object' && typeof obj === 'object') {\n        for (var key in obj) {\n          if (obj.hasOwnProperty(key)) {\n            target[key] = obj[key]\n          }\n        }\n      }\n\n      return target\n    }\n\n    for (var i = 1, end = args.length; i < end; i++) {\n      merge(args[0], args[i])\n    }\n    return args[0]\n  }\n\n  NoFrameworkAdapter.inArray = function(element, array, i) {\n    return array == null ? -1 : array.indexOf(element, i)\n  }\n\n  NoFrameworkAdapter.isEmptyObject = function(obj) {\n    /* eslint no-unused-vars: 0 */\n    for (var name in obj) {\n      return false\n    }\n    return true\n  }\n\n  Waypoint.adapters.push({\n    name: 'noframework',\n    Adapter: NoFrameworkAdapter\n  })\n  Waypoint.Adapter = NoFrameworkAdapter\n}())\n;\n/*!\nWaypoints Inview Shortcut - 4.0.0\nCopyright © 2011-2015 Caleb Troughton\nLicensed under the MIT license.\nhttps://github.com/imakewebthings/waypoints/blob/master/licenses.txt\n*/\n(function() {\n  'use strict'\n\n  function noop() {}\n\n  var Waypoint = window.Waypoint\n\n  /* http://imakewebthings.com/waypoints/shortcuts/inview */\n  function Inview(options) {\n    this.options = Waypoint.Adapter.extend({}, Inview.defaults, options)\n    this.axis = this.options.horizontal ? 'horizontal' : 'vertical'\n    this.waypoints = []\n    this.element = this.options.element\n    this.createWaypoints()\n  }\n\n  /* Private */\n  Inview.prototype.createWaypoints = function() {\n    var configs = {\n      vertical: [{\n        down: 'enter',\n        up: 'exited',\n        offset: '100%'\n      }, {\n        down: 'entered',\n        up: 'exit',\n        offset: 'bottom-in-view'\n      }, {\n        down: 'exit',\n        up: 'entered',\n        offset: 0\n      }, {\n        down: 'exited',\n        up: 'enter',\n        offset: function() {\n          return -this.adapter.outerHeight()\n        }\n      }],\n      horizontal: [{\n        right: 'enter',\n        left: 'exited',\n        offset: '100%'\n      }, {\n        right: 'entered',\n        left: 'exit',\n        offset: 'right-in-view'\n      }, {\n        right: 'exit',\n        left: 'entered',\n        offset: 0\n      }, {\n        right: 'exited',\n        left: 'enter',\n        offset: function() {\n          return -this.adapter.outerWidth()\n        }\n      }]\n    }\n\n    for (var i = 0, end = configs[this.axis].length; i < end; i++) {\n      var config = configs[this.axis][i]\n      this.createWaypoint(config)\n    }\n  }\n\n  /* Private */\n  Inview.prototype.createWaypoint = function(config) {\n    var self = this\n    this.waypoints.push(new Waypoint({\n      context: this.options.context,\n      element: this.options.element,\n      enabled: this.options.enabled,\n      handler: (function(config) {\n        return function(direction) {\n          self.options[config[direction]].call(self, direction)\n        }\n      }(config)),\n      offset: config.offset,\n      horizontal: this.options.horizontal\n    }))\n  }\n\n  /* Public */\n  Inview.prototype.destroy = function() {\n    for (var i = 0, end = this.waypoints.length; i < end; i++) {\n      this.waypoints[i].destroy()\n    }\n    this.waypoints = []\n  }\n\n  Inview.prototype.disable = function() {\n    for (var i = 0, end = this.waypoints.length; i < end; i++) {\n      this.waypoints[i].disable()\n    }\n  }\n\n  Inview.prototype.enable = function() {\n    for (var i = 0, end = this.waypoints.length; i < end; i++) {\n      this.waypoints[i].enable()\n    }\n  }\n\n  Inview.defaults = {\n    context: window,\n    enabled: true,\n    enter: noop,\n    entered: noop,\n    exit: noop,\n    exited: noop\n  }\n\n  Waypoint.Inview = Inview\n}())\n;\n","/**\n * Zenscroll 3.0.1\n * https://github.com/zengabor/zenscroll/\n *\n * Copyright 2015–2016 Gabor Lenard\n *\n * This is free and unencumbered software released into the public domain.\n *\n * Anyone is free to copy, modify, publish, use, compile, sell, or\n * distribute this software, either in source code form or as a compiled\n * binary, for any purpose, commercial or non-commercial, and by any\n * means.\n *\n * In jurisdictions that recognize copyright laws, the author or authors\n * of this software dedicate any and all copyright interest in the\n * software to the public domain. We make this dedication for the benefit\n * of the public at large and to the detriment of our heirs and\n * successors. We intend this dedication to be an overt act of\n * relinquishment in perpetuity of all present and future rights to this\n * software under copyright law.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n *\n * For more information, please refer to <http://unlicense.org>\n *\n */\n\n/*jshint devel:true, asi:true */\n\n/*global define, module */\n\n\n(function (root, zenscroll) {\n    if (typeof define === \"function\" && define.amd) {\n        define([], zenscroll())\n    } else if (typeof module === \"object\" && module.exports) {\n        module.exports = zenscroll()\n    } else {\n        root.zenscroll = zenscroll()\n    }\n}(this, function () {\n    \"use strict\"\n\n    var createScroller = function (scrollContainer, defaultDuration, edgeOffset) {\n\n        defaultDuration = defaultDuration || 999 //ms\n        if (!edgeOffset || edgeOffset !== 0) {\n            // When scrolling, this amount of distance is kept from the edges of the scrollContainer:\n            edgeOffset = 9 //px\n        }\n\n        var scrollTimeoutId\n        var docElem = document.documentElement\n\n        // Detect if the browser already supports native smooth scrolling (e.g., Firefox 36+ and Chrome 49+) and it is enabled:\n        var nativeSmoothScrollEnabled = function () {\n            return (\"getComputedStyle\" in window) &&\n                window.getComputedStyle(scrollContainer ? scrollContainer : document.body)[\"scroll-behavior\"] === \"smooth\"\n        }\n\n        var getScrollTop = function () {\n            return scrollContainer ? scrollContainer.scrollTop : (window.scrollY || docElem.scrollTop)\n        }\n\n        var getViewHeight = function () {\n            return scrollContainer ?\n                Math.min(scrollContainer.offsetHeight, window.innerHeight) :\n                window.innerHeight || docElem.clientHeight\n        }\n\n        var getRelativeTopOf = function (elem) {\n            if (scrollContainer) {\n                return elem.offsetTop - scrollContainer.offsetTop\n            } else {\n                return elem.getBoundingClientRect().top + getScrollTop() - docElem.offsetTop\n            }\n        }\n\n        /**\n         * Immediately stops the current smooth scroll operation\n         */\n        var stopScroll = function () {\n            clearTimeout(scrollTimeoutId)\n            scrollTimeoutId = 0\n        }\n\n        /**\n         * Scrolls to a specific vertical position in the document.\n         *\n         * @param {endY} The vertical position within the document.\n         * @param {duration} Optionally the duration of the scroll operation.\n         *        If 0 or not provided it is automatically calculated based on the\n         *        distance and the default duration.\n         */\n        var scrollToY = function (endY, duration) {\n            stopScroll()\n            if (nativeSmoothScrollEnabled()) {\n                (scrollContainer || window).scrollTo(0, endY)\n            } else {\n                var startY = getScrollTop()\n                var distance = Math.max(endY,0) - startY\n                duration = duration || Math.min(Math.abs(distance), defaultDuration)\n                var startTime = new Date().getTime();\n                (function loopScroll() {\n                    scrollTimeoutId = setTimeout(function () {\n                        var p = Math.min((new Date().getTime() - startTime) / duration, 1) // percentage\n                        var y = Math.max(Math.floor(startY + distance*(p < 0.5 ? 2*p*p : p*(4 - p*2)-1)), 0)\n                        if (scrollContainer) {\n                            scrollContainer.scrollTop = y\n                        } else {\n                            window.scrollTo(0, y)\n                        }\n                        if (p < 1 && (getViewHeight() + y) < (scrollContainer || docElem).scrollHeight) {\n                            loopScroll()\n                        } else {\n                            setTimeout(stopScroll, 99) // with cooldown time\n                        }\n                    }, 9)\n                })()\n            }\n        }\n\n        /**\n         * Scrolls to the top of a specific element.\n         *\n         * @param {elem} The element.\n         * @param {duration} Optionally the duration of the scroll operation.\n         *        A value of 0 is ignored.\n         */\n        var scrollToElem = function (elem, duration) {\n            scrollToY(getRelativeTopOf(elem) - edgeOffset, duration)\n        }\n\n        /**\n         * Scrolls an element into view if necessary.\n         *\n         * @param {elem} The element.\n         * @param {duration} Optionally the duration of the scroll operation.\n         *        A value of 0 is ignored.\n         */\n        var scrollIntoView = function (elem, duration) {\n            var elemScrollHeight = elem.getBoundingClientRect().height + 2*edgeOffset\n            var vHeight = getViewHeight()\n            var elemTop = getRelativeTopOf(elem)\n            var elemBottom = elemTop + elemScrollHeight\n            var scrollTop = getScrollTop()\n            if ((elemTop - scrollTop) < edgeOffset || elemScrollHeight > vHeight) {\n                // Element is clipped at top or is higher than screen.\n                scrollToElem(elem, duration)\n            } else if ((scrollTop + vHeight - elemBottom) < edgeOffset) {\n                // Element is clipped at the bottom.\n                scrollToY(elemBottom - vHeight, duration)\n            }\n        }\n\n        /**\n         * Scrolls to the center of an element.\n         *\n         * @param {elem} The element.\n         * @param {duration} Optionally the duration of the scroll operation.\n         * @param {offset} Optionally the offset of the top of the element from the center of the screen.\n         *        A value of 0 is ignored.\n         */\n        var scrollToCenterOf = function (elem, duration, offset) {\n            scrollToY(\n                Math.max(\n                    getRelativeTopOf(elem) - getViewHeight()/2 + (offset || elem.getBoundingClientRect().height/2),\n                    0\n                ),\n                duration\n            )\n        }\n\n        /**\n         * Changes default settings for this scroller.\n         *\n         * @param {newDefaultDuration} New value for default duration, used for each scroll method by default.\n         *        Ignored if 0 or falsy.\n         * @param {newEdgeOffset} New value for the edge offset, used by each scroll method by default.\n         */\n        var setup = function (newDefaultDuration, newEdgeOffset) {\n            if (newDefaultDuration) {\n                defaultDuration = newDefaultDuration\n            }\n            if (newEdgeOffset === 0 || newEdgeOffset) {\n                edgeOffset = newEdgeOffset\n            }\n        }\n\n        return {\n            setup: setup,\n            to: scrollToElem,\n            toY: scrollToY,\n            intoView: scrollIntoView,\n            center: scrollToCenterOf,\n            stop: stopScroll,\n            moving: function () { return !!scrollTimeoutId }\n        }\n\n    }\n\n    // Create a scroller for the browser window, omitting parameters:\n    var defaultScroller = createScroller()\n\n    // Create listeners for the documentElement only & exclude IE8-\n    if (\"addEventListener\" in window && document.body.style.scrollBehavior !== \"smooth\" && !window.noZensmooth) {\n        var replaceUrl = function (hash) {\n            try {\n                history.replaceState({}, \"\", window.location.href.split(\"#\")[0] + hash)\n            } catch (e) {\n                // To avoid the Security exception in Chrome when the page was opened via the file protocol, e.g., file://index.html\n            }\n        }\n        window.addEventListener(\"click\", function (event) {\n            var anchor = event.target\n            while (anchor && anchor.tagName !== \"A\") {\n                anchor = anchor.parentNode\n            }\n            if (!anchor || event.which !== 1 || event.shiftKey || event.metaKey || event.ctrlKey || event.altKey) {\n                return\n            }\n            var href = anchor.getAttribute(\"href\") || \"\"\n            if (href.indexOf(\"#\") === 0) {\n                if (href === \"#\") {\n                    event.preventDefault() // Prevent the browser from handling the activation of the link\n                    defaultScroller.toY(0)\n                    replaceUrl(\"\")\n                } else {\n                    var targetId = anchor.hash.substring(1)\n                    var targetElem = document.getElementById(targetId)\n                    if (targetElem) {\n                        event.preventDefault() // Prevent the browser from handling the activation of the link\n                        defaultScroller.to(targetElem)\n                        replaceUrl(\"#\" + targetId)\n                    }\n                }\n            }\n        }, false)\n    }\n\n    return {\n        // Expose the \"constructor\" that can create a new scroller:\n        createScroller: createScroller,\n        // Surface the methods of the default scroller:\n        setup: defaultScroller.setup,\n        to: defaultScroller.to,\n        toY: defaultScroller.toY,\n        intoView: defaultScroller.intoView,\n        center: defaultScroller.center,\n        stop: defaultScroller.stop,\n        moving: defaultScroller.moving\n    }\n\n}));\n","export default function PrimaryNav() {\n\n    // cache dom elements\n    var body = document.body,\n        navTrigger = document.querySelector(\".js-nav-trigger\"),\n        container = document.querySelector(\".container\"),\n        primaryNav = document.querySelector(\".js-primary-nav\"),\n        primaryNavLinks = document.querySelectorAll(\".js-primary-nav a\");\n\n    // Flag that JS has loaded\n    body.classList.remove(\"no-js\");\n    body.classList.add(\"js\");\n\n    // Hamburger menu\n    navTrigger.addEventListener(\"click\", function(){\n        // toggle active class on the nav trigger\n        this.classList.toggle(\"open\");\n        // toggle the active class on site container\n        container.classList.toggle(\"js-nav-active\");\n    });\n\n    // In-menu link click\n    for(var i=0; i < primaryNavLinks.length; i++){\n        var primaryNavLink = primaryNavLinks[i];\n        primaryNavLink.onclick = function(){\n            // toggle active class on the nav trigger\n            navTrigger.classList.toggle(\"open\");\n            // immediately hide the nav\n            primaryNav.style.opacity= \"0\";\n            // once drawer has had time to pull up, restore opacity\n            setTimeout(function() { primaryNav.style.opacity= \"1\"; }, 1000);\n            // toggle the active class on site container\n            container.classList.toggle(\"js-nav-active\");\n        };\n    }\n\n};\n","export default function TimelineLoading() {\n\nvar timelineBlocks = document.querySelectorAll(\".cd-timeline-block\");\n\n  Array.prototype.forEach.call(timelineBlocks, function(el, i){\n\n    var waypoint = new Waypoint({\n      element: el,\n      handler: function() {\n        el.classList.add('fadeInUp');\n      },\n      offset: '75%'\n    })\n\n  });\n};\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJfanMtZXM2L2FwcC5qcyIsIl9qcy1lczYvbGlicy9waG90b3N3aXBlLXVpLWRlZmF1bHQuanMiLCJfanMtZXM2L2xpYnMvcGhvdG9zd2lwZS5qcyIsIl9qcy1lczYvbGlicy93YXlwb2ludHMuanMiLCJfanMtZXM2L2xpYnMvemVuc2Nyb2xsLmpzIiwiX2pzLWVzNi9tb2R1bGVzL3ByaW1hcnktbmF2LmpzIiwiX2pzLWVzNi9tb2R1bGVzL3RpbWVsaW5lLWxvYWRpbmcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQ0NBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBR0E7Ozs7QUFHQTs7Ozs7O0FBRkE7O0FBRkE7QUFOQTs7QUFXQTs7QUFFQTtBQUNFLElBQUksd0JBQXdCLFNBQXhCLHFCQUF3QixDQUFTLGVBQVQsRUFBMEI7O0FBRWxELFFBQUkseUJBQXlCLFNBQXpCLHNCQUF5QixDQUFTLEVBQVQsRUFBYTtBQUN0QyxZQUFJLGdCQUFnQixHQUFHLFVBQXZCO0FBQUEsWUFDSSxXQUFXLGNBQWMsTUFEN0I7QUFBQSxZQUVJLFFBQVEsRUFGWjtBQUFBLFlBR0ksRUFISjtBQUFBLFlBSUksYUFKSjtBQUFBLFlBS0ksV0FMSjtBQUFBLFlBTUksSUFOSjtBQUFBLFlBT0ksSUFQSjs7QUFTQSxhQUFJLElBQUksSUFBSSxDQUFaLEVBQWUsSUFBSSxRQUFuQixFQUE2QixHQUE3QixFQUFrQztBQUM5QixpQkFBSyxjQUFjLENBQWQsQ0FBTDs7QUFFQTtBQUNBLGdCQUFHLEdBQUcsUUFBSCxLQUFnQixDQUFuQixFQUFzQjtBQUNwQjtBQUNEOztBQUVELDRCQUFnQixHQUFHLFFBQW5COztBQUVBLG1CQUFPLEdBQUcsWUFBSCxDQUFnQixXQUFoQixFQUE2QixLQUE3QixDQUFtQyxHQUFuQyxDQUFQOztBQUVBO0FBQ0EsbUJBQU87QUFDSCxxQkFBSyxHQUFHLFlBQUgsQ0FB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LEtBQVgsQ0FBaUIsT0FBakIsR0FBMEIsR0FBMUI7QUFBZ0MsYUFBeEQsRUFBMEQsSUFBMUQ7QUFDQTtBQUNBLHNCQUFVLFNBQVYsQ0FBb0IsTUFBcEIsQ0FBMkIsZUFBM0I7QUFDSCxTQVREO0FBVUg7QUFFSjs7Ozs7Ozs7a0JDcEN1QixlO0FBQVQsU0FBUyxlQUFULEdBQTJCOztBQUUxQyxNQUFJLGlCQUFpQixTQUFTLGdCQUFULENBQTBCLG9CQUExQixDQUFyQjs7QUFFRSxRQUFNLFNBQU4sQ0FBZ0IsT0FBaEIsQ0FBd0IsSUFBeEIsQ0FBNkIsY0FBN0IsRUFBNkMsVUFBUyxFQUFULEVBQWEsQ0FBYixFQUFlOztBQUUxRCxRQUFJLFdBQVcsSUFBSSxRQUFKLENBQWE7QUFDMUIsZUFBUyxFQURpQjtBQUUxQixlQUFTLG1CQUFXO0FBQ2xCLFdBQUcsU0FBSCxDQUFhLEdBQWIsQ0FBaUIsVUFBakI7QUFDRCxPQUp5QjtBQUsxQixjQUFRO0FBTGtCLEtBQWIsQ0FBZjtBQVFELEdBVkQ7QUFXRCIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCIvLyBsaWJyYXJpZXNcbmltcG9ydCBaZW5TY3JvbGwgZnJvbSAnLi9saWJzL3plbnNjcm9sbCc7XG5pbXBvcnQgV2F5UG9pbnRzIGZyb20gJy4vbGlicy93YXlwb2ludHMnO1xuaW1wb3J0IFBob3RvU3dpcGUgZnJvbSAnLi9saWJzL3Bob3Rvc3dpcGUnO1xuaW1wb3J0IFBob3RvU3dpcGVVSV9EZWZhdWx0IGZyb20gJy4vbGlicy9waG90b3N3aXBlLXVpLWRlZmF1bHQnO1xuXG4vLyBtb2R1bGVzXG5pbXBvcnQgUHJpbWFyeU5hdiBmcm9tICcuL21vZHVsZXMvcHJpbWFyeS1uYXYnO1xuUHJpbWFyeU5hdigpO1xuXG5pbXBvcnQgVGltZWxpbmVMb2FkaW5nIGZyb20gJy4vbW9kdWxlcy90aW1lbGluZS1sb2FkaW5nJztcblRpbWVsaW5lTG9hZGluZygpO1xuXG4vLyBQaG90b3N3aXBlXG4gIHZhciBpbml0UGhvdG9Td2lwZUZyb21ET00gPSBmdW5jdGlvbihnYWxsZXJ5U2VsZWN0b3IpIHtcblxuICAgICAgdmFyIHBhcnNlVGh1bWJuYWlsRWxlbWVudHMgPSBmdW5jdGlvbihlbCkge1xuICAgICAgICAgIHZhciB0aHVtYkVsZW1lbnRzID0gZWwuY2hpbGROb2RlcyxcbiAgICAgICAgICAgICAgbnVtTm9kZXMgPSB0aHVtYkVsZW1lbnRzLmxlbmd0aCxcbiAgICAgICAgICAgICAgaXRlbXMgPSBbXSxcbiAgICAgICAgICAgICAgZWwsXG4gICAgICAgICAgICAgIGNoaWxkRWxlbWVudHMsXG4gICAgICAgICAgICAgIHRodW1ibmFpbEVsLFxuICAgICAgICAgICAgICBzaXplLFxuICAgICAgICAgICAgICBpdGVtO1xuXG4gICAgICAgICAgZm9yKHZhciBpID0gMDsgaSA8IG51bU5vZGVzOyBpKyspIHtcbiAgICAgICAgICAgICAgZWwgPSB0aHVtYkVsZW1lbnRzW2ldO1xuXG4gICAgICAgICAgICAgIC8vIGluY2x1ZGUgb25seSBlbGVtZW50IG5vZGVzXG4gICAgICAgICAgICAgIGlmKGVsLm5vZGVUeXBlICE9PSAxKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBjaGlsZEVsZW1lbnRzID0gZWwuY2hpbGRyZW47XG5cbiAgICAgICAgICAgICAgc2l6ZSA9IGVsLmdldEF0dHJpYnV0ZSgnZGF0YS1zaXplJykuc3BsaXQoJ3gnKTtcblxuICAgICAgICAgICAgICAvLyBjcmVhdGUgc2xpZGUgb2JqZWN0XG4gICAgICAgICAgICAgIGl0ZW0gPSB7XG4gICAgICAgICAgICAgICAgICBzcmM6IGVsLmdldEF0dHJpYnV0ZSgnaHJlZicpLFxuICAgICAgICAgICAgICAgICAgdzogcGFyc2VJbnQoc2l6ZVswXSwgMTApLFxuICAgICAgICAgICAgICAgICAgaDogcGFyc2VJbnQoc2l6ZVsxXSwgMTApLFxuICAgICAgICAgICAgICAgICAgYXV0aG9yOiBlbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtYXV0aG9yJylcbiAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICBpdGVtLmVsID0gZWw7IC8vIHNhdmUgbGluayB0byBlbGVtZW50IGZvciBnZXRUaHVtYkJvdW5kc0ZuXG5cbiAgICAgICAgICAgICAgaWYoY2hpbGRFbGVtZW50cy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgaXRlbS5tc3JjID0gY2hpbGRFbGVtZW50c1swXS5nZXRBdHRyaWJ1dGUoJ3NyYycpOyAvLyB0aHVtYm5haWwgdXJsXG4gICAgICAgICAgICAgICAgaWYoY2hpbGRFbGVtZW50cy5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICAgICAgICAgIGl0ZW0udGl0bGUgPSBjaGlsZEVsZW1lbnRzWzFdLmlubmVySFRNTDsgLy8gY2FwdGlvbiAoY29udGVudHMgb2YgZmlndXJlKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuXG5cbiAgICAgICAgICAgICAgdmFyIG1lZGl1bVNyYyA9IGVsLmdldEF0dHJpYnV0ZSgnZGF0YS1tZWQnKTtcbiAgICAgICAgICAgICAgICBpZihtZWRpdW1TcmMpIHtcbiAgICAgICAgICAgICAgICAgIHNpemUgPSBlbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtbWVkLXNpemUnKS5zcGxpdCgneCcpO1xuICAgICAgICAgICAgICAgICAgLy8gXCJtZWRpdW0tc2l6ZWRcIiBpbWFnZVxuICAgICAgICAgICAgICAgICAgaXRlbS5tID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3JjOiBtZWRpdW1TcmMsXG4gICAgICAgICAgICAgICAgICAgICAgICB3OiBwYXJzZUludChzaXplWzBdLCAxMCksXG4gICAgICAgICAgICAgICAgICAgICAgICBoOiBwYXJzZUludChzaXplWzFdLCAxMClcbiAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIG9yaWdpbmFsIGltYWdlXG4gICAgICAgICAgICAgICAgaXRlbS5vID0ge1xuICAgICAgICAgICAgICAgICAgICBzcmM6IGl0ZW0uc3JjLFxuICAgICAgICAgICAgICAgICAgICB3OiBpdGVtLncsXG4gICAgICAgICAgICAgICAgICAgIGg6IGl0ZW0uaFxuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgaXRlbXMucHVzaChpdGVtKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gaXRlbXM7XG4gICAgICB9O1xuXG4gICAgICAvLyBmaW5kIG5lYXJlc3QgcGFyZW50IGVsZW1lbnRcbiAgICAgIHZhciBjbG9zZXN0ID0gZnVuY3Rpb24gY2xvc2VzdChlbCwgZm4pIHtcbiAgICAgICAgICByZXR1cm4gZWwgJiYgKCBmbihlbCkgPyBlbCA6IGNsb3Nlc3QoZWwucGFyZW50Tm9kZSwgZm4pICk7XG4gICAgICB9O1xuXG4gICAgICB2YXIgb25UaHVtYm5haWxzQ2xpY2sgPSBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgZGVidWdnZXI7XG4gICAgICAgICAgZSA9IGUgfHwgd2luZG93LmV2ZW50O1xuICAgICAgICAgIGUucHJldmVudERlZmF1bHQgPyBlLnByZXZlbnREZWZhdWx0KCkgOiBlLnJldHVyblZhbHVlID0gZmFsc2U7XG5cbiAgICAgICAgICB2YXIgZVRhcmdldCA9IGUudGFyZ2V0IHx8IGUuc3JjRWxlbWVudDtcblxuICAgICAgICAgIHZhciBjbGlja2VkTGlzdEl0ZW0gPSBjbG9zZXN0KGVUYXJnZXQsIGZ1bmN0aW9uKGVsKSB7XG4gICAgICAgICAgICAgIHJldHVybiBlbC50YWdOYW1lID09PSAnQSc7XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICBpZighY2xpY2tlZExpc3RJdGVtKSB7XG4gICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB2YXIgY2xpY2tlZEdhbGxlcnkgPSBjbGlja2VkTGlzdEl0ZW0ucGFyZW50Tm9kZTtcblxuICAgICAgICAgIHZhciBjaGlsZE5vZGVzID0gY2xpY2tlZExpc3RJdGVtLnBhcmVudE5vZGUuY2hpbGROb2RlcyxcbiAgICAgICAgICAgICAgbnVtQ2hpbGROb2RlcyA9IGNoaWxkTm9kZXMubGVuZ3RoLFxuICAgICAgICAgICAgICBub2RlSW5kZXggPSAwLFxuICAgICAgICAgICAgICBpbmRleDtcblxuICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbnVtQ2hpbGROb2RlczsgaSsrKSB7XG4gICAgICAgICAgICAgIGlmKGNoaWxkTm9kZXNbaV0ubm9kZVR5cGUgIT09IDEpIHtcbiAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYoY2hpbGROb2Rlc1tpXSA9PT0gY2xpY2tlZExpc3RJdGVtKSB7XG4gICAgICAgICAgICAgICAgICBpbmRleCA9IG5vZGVJbmRleDtcbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIG5vZGVJbmRleCsrO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmKGluZGV4ID49IDApIHtcbiAgICAgICAgICAgICAgb3BlblBob3RvU3dpcGUoIGluZGV4LCBjbGlja2VkR2FsbGVyeSApO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9O1xuXG4gICAgICB2YXIgcGhvdG9zd2lwZVBhcnNlSGFzaCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHZhciBoYXNoID0gd2luZG93LmxvY2F0aW9uLmhhc2guc3Vic3RyaW5nKDEpLFxuICAgICAgICAgIHBhcmFtcyA9IHt9O1xuXG4gICAgICAgICAgaWYoaGFzaC5sZW5ndGggPCA1KSB7IC8vIHBpZD0xXG4gICAgICAgICAgICAgIHJldHVybiBwYXJhbXM7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgdmFyIHZhcnMgPSBoYXNoLnNwbGl0KCcmJyk7XG4gICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB2YXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgIGlmKCF2YXJzW2ldKSB7XG4gICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB2YXIgcGFpciA9IHZhcnNbaV0uc3BsaXQoJz0nKTtcbiAgICAgICAgICAgICAgaWYocGFpci5sZW5ndGggPCAyKSB7XG4gICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBwYXJhbXNbcGFpclswXV0gPSBwYWlyWzFdO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmKHBhcmFtcy5naWQpIHtcbiAgICAgICAgICAgICAgcGFyYW1zLmdpZCA9IHBhcnNlSW50KHBhcmFtcy5naWQsIDEwKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gcGFyYW1zO1xuICAgICAgfTtcblxuICAgICAgdmFyIG9wZW5QaG90b1N3aXBlID0gZnVuY3Rpb24oaW5kZXgsIGdhbGxlcnlFbGVtZW50LCBkaXNhYmxlQW5pbWF0aW9uLCBmcm9tVVJMKSB7XG4gICAgICAgICAgdmFyIHBzd3BFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnBzd3AnKVswXSxcbiAgICAgICAgICAgICAgZ2FsbGVyeSxcbiAgICAgICAgICAgICAgb3B0aW9ucyxcbiAgICAgICAgICAgICAgaXRlbXM7XG5cbiAgICAgICAgICBpdGVtcyA9IHBhcnNlVGh1bWJuYWlsRWxlbWVudHMoZ2FsbGVyeUVsZW1lbnQpO1xuXG4gICAgICAgICAgLy8gZGVmaW5lIG9wdGlvbnMgKGlmIG5lZWRlZClcbiAgICAgICAgICBvcHRpb25zID0ge1xuXG4gICAgICAgICAgICAgIGdhbGxlcnlVSUQ6IGdhbGxlcnlFbGVtZW50LmdldEF0dHJpYnV0ZSgnZGF0YS1wc3dwLXVpZCcpLFxuXG4gICAgICAgICAgICAgIGdldFRodW1iQm91bmRzRm46IGZ1bmN0aW9uKGluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAvLyBTZWUgT3B0aW9ucy0+Z2V0VGh1bWJCb3VuZHNGbiBzZWN0aW9uIG9mIGRvY3MgZm9yIG1vcmUgaW5mb1xuICAgICAgICAgICAgICAgICAgdmFyIHRodW1ibmFpbCA9IGl0ZW1zW2luZGV4XS5lbC5jaGlsZHJlblswXSxcbiAgICAgICAgICAgICAgICAgICAgICBwYWdlWVNjcm9sbCA9IHdpbmRvdy5wYWdlWU9mZnNldCB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wLFxuICAgICAgICAgICAgICAgICAgICAgIHJlY3QgPSB0aHVtYm5haWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cbiAgICAgICAgICAgICAgICAgIHJldHVybiB7eDpyZWN0LmxlZnQsIHk6cmVjdC50b3AgKyBwYWdlWVNjcm9sbCwgdzpyZWN0LndpZHRofTtcbiAgICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgICBhZGRDYXB0aW9uSFRNTEZuOiBmdW5jdGlvbihpdGVtLCBjYXB0aW9uRWwsIGlzRmFrZSkge1xuICAgICAgICAgICAgICAgICAgaWYoIWl0ZW0udGl0bGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICBjYXB0aW9uRWwuY2hpbGRyZW5bMF0uaW5uZXJUZXh0ID0gJyc7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgY2FwdGlvbkVsLmNoaWxkcmVuWzBdLmlubmVySFRNTCA9IGl0ZW0udGl0bGUgKyAgJzxici8+PHNtYWxsPlBob3RvOiAnICsgaXRlbS5hdXRob3IgKyAnPC9zbWFsbD4nO1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgIH07XG5cblxuICAgICAgICAgIGlmKGZyb21VUkwpIHtcbiAgICAgICAgICAgICAgaWYob3B0aW9ucy5nYWxsZXJ5UElEcykge1xuICAgICAgICAgICAgICAgICAgLy8gcGFyc2UgcmVhbCBpbmRleCB3aGVuIGN1c3RvbSBQSURzIGFyZSB1c2VkXG4gICAgICAgICAgICAgICAgICAvLyBodHRwOi8vcGhvdG9zd2lwZS5jb20vZG9jdW1lbnRhdGlvbi9mYXEuaHRtbCNjdXN0b20tcGlkLWluLXVybFxuICAgICAgICAgICAgICAgICAgZm9yKHZhciBqID0gMDsgaiA8IGl0ZW1zLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgaWYoaXRlbXNbal0ucGlkID09IGluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbnMuaW5kZXggPSBqO1xuICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICBvcHRpb25zLmluZGV4ID0gcGFyc2VJbnQoaW5kZXgsIDEwKSAtIDE7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBvcHRpb25zLmluZGV4ID0gcGFyc2VJbnQoaW5kZXgsIDEwKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyBleGl0IGlmIGluZGV4IG5vdCBmb3VuZFxuICAgICAgICAgIGlmKCBpc05hTihvcHRpb25zLmluZGV4KSApIHtcbiAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmKGRpc2FibGVBbmltYXRpb24pIHtcbiAgICAgICAgICAgICAgb3B0aW9ucy5zaG93QW5pbWF0aW9uRHVyYXRpb24gPSAwO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIFBhc3MgZGF0YSB0byBQaG90b1N3aXBlIGFuZCBpbml0aWFsaXplIGl0XG4gICAgICAgICAgZ2FsbGVyeSA9IG5ldyBQaG90b1N3aXBlKCBwc3dwRWxlbWVudCwgUGhvdG9Td2lwZVVJX0RlZmF1bHQsIGl0ZW1zLCBvcHRpb25zKTtcblxuICAgICAgICAgIC8vIHNlZTogaHR0cDovL3Bob3Rvc3dpcGUuY29tL2RvY3VtZW50YXRpb24vcmVzcG9uc2l2ZS1pbWFnZXMuaHRtbFxuICAgICAgICAgIHZhciByZWFsVmlld3BvcnRXaWR0aCxcbiAgICAgICAgICAgICAgdXNlTGFyZ2VJbWFnZXMgPSBmYWxzZSxcbiAgICAgICAgICAgICAgZmlyc3RSZXNpemUgPSB0cnVlLFxuICAgICAgICAgICAgICBpbWFnZVNyY1dpbGxDaGFuZ2U7XG5cbiAgICAgICAgICBnYWxsZXJ5Lmxpc3RlbignYmVmb3JlUmVzaXplJywgZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgICAgICAgdmFyIGRwaVJhdGlvID0gd2luZG93LmRldmljZVBpeGVsUmF0aW8gPyB3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpbyA6IDE7XG4gICAgICAgICAgICAgIGRwaVJhdGlvID0gTWF0aC5taW4oZHBpUmF0aW8sIDIuNSk7XG4gICAgICAgICAgICAgIHJlYWxWaWV3cG9ydFdpZHRoID0gZ2FsbGVyeS52aWV3cG9ydFNpemUueCAqIGRwaVJhdGlvO1xuXG5cbiAgICAgICAgICAgICAgaWYocmVhbFZpZXdwb3J0V2lkdGggPj0gMTIwMCB8fCAoIWdhbGxlcnkubGlrZWx5VG91Y2hEZXZpY2UgJiYgcmVhbFZpZXdwb3J0V2lkdGggPiA4MDApIHx8IHNjcmVlbi53aWR0aCA+IDEyMDAgKSB7XG4gICAgICAgICAgICAgICAgICBpZighdXNlTGFyZ2VJbWFnZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgICB1c2VMYXJnZUltYWdlcyA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgaW1hZ2VTcmNXaWxsQ2hhbmdlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgaWYodXNlTGFyZ2VJbWFnZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgICB1c2VMYXJnZUltYWdlcyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgIGltYWdlU3JjV2lsbENoYW5nZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZihpbWFnZVNyY1dpbGxDaGFuZ2UgJiYgIWZpcnN0UmVzaXplKSB7XG4gICAgICAgICAgICAgICAgICBnYWxsZXJ5LmludmFsaWRhdGVDdXJySXRlbXMoKTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmKGZpcnN0UmVzaXplKSB7XG4gICAgICAgICAgICAgICAgICBmaXJzdFJlc2l6ZSA9IGZhbHNlO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaW1hZ2VTcmNXaWxsQ2hhbmdlID0gZmFsc2U7XG5cbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIGdhbGxlcnkubGlzdGVuKCdnZXR0aW5nRGF0YScsIGZ1bmN0aW9uKGluZGV4LCBpdGVtKSB7XG4gICAgICAgICAgICAgIGlmKCB1c2VMYXJnZUltYWdlcyApIHtcbiAgICAgICAgICAgICAgICAgIGl0ZW0uc3JjID0gaXRlbS5vLnNyYztcbiAgICAgICAgICAgICAgICAgIGl0ZW0udyA9IGl0ZW0uby53O1xuICAgICAgICAgICAgICAgICAgaXRlbS5oID0gaXRlbS5vLmg7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICBpdGVtLnNyYyA9IGl0ZW0ubS5zcmM7XG4gICAgICAgICAgICAgICAgICBpdGVtLncgPSBpdGVtLm0udztcbiAgICAgICAgICAgICAgICAgIGl0ZW0uaCA9IGl0ZW0ubS5oO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICBnYWxsZXJ5LmluaXQoKTtcbiAgICAgIH07XG5cbiAgICAgIC8vIHNlbGVjdCBhbGwgZ2FsbGVyeSBlbGVtZW50c1xuICAgICAgdmFyIGdhbGxlcnlFbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoIGdhbGxlcnlTZWxlY3RvciApO1xuICAgICAgZm9yKHZhciBpID0gMCwgbCA9IGdhbGxlcnlFbGVtZW50cy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgICBnYWxsZXJ5RWxlbWVudHNbaV0uc2V0QXR0cmlidXRlKCdkYXRhLXBzd3AtdWlkJywgaSsxKTtcbiAgICAgICAgICBnYWxsZXJ5RWxlbWVudHNbaV0ub25jbGljayA9IG9uVGh1bWJuYWlsc0NsaWNrO1xuICAgICAgfVxuXG4gICAgICAvLyBQYXJzZSBVUkwgYW5kIG9wZW4gZ2FsbGVyeSBpZiBpdCBjb250YWlucyAjJnBpZD0zJmdpZD0xXG4gICAgICB2YXIgaGFzaERhdGEgPSBwaG90b3N3aXBlUGFyc2VIYXNoKCk7XG4gICAgICBpZihoYXNoRGF0YS5waWQgJiYgaGFzaERhdGEuZ2lkKSB7XG4gICAgICAgICAgb3BlblBob3RvU3dpcGUoIGhhc2hEYXRhLnBpZCwgIGdhbGxlcnlFbGVtZW50c1sgaGFzaERhdGEuZ2lkIC0gMSBdLCB0cnVlLCB0cnVlICk7XG4gICAgICB9XG4gIH07XG5cbiAgaW5pdFBob3RvU3dpcGVGcm9tRE9NKCcuZ2FsbGVyeScpO1xuIiwiLyohIFBob3RvU3dpcGUgRGVmYXVsdCBVSSAtIDQuMS4xIC0gMjAxNS0xMi0yNFxuKiBodHRwOi8vcGhvdG9zd2lwZS5jb21cbiogQ29weXJpZ2h0IChjKSAyMDE1IERtaXRyeSBTZW1lbm92OyAqL1xuLyoqXG4qXG4qIFVJIG9uIHRvcCBvZiBtYWluIHNsaWRpbmcgYXJlYSAoY2FwdGlvbiwgYXJyb3dzLCBjbG9zZSBidXR0b24sIGV0Yy4pLlxuKiBCdWlsdCBqdXN0IHVzaW5nIHB1YmxpYyBtZXRob2RzL3Byb3BlcnRpZXMgb2YgUGhvdG9Td2lwZS5cbipcbiovXG4oZnVuY3Rpb24gKHJvb3QsIGZhY3RvcnkpIHtcbiAgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkge1xuICAgIGRlZmluZShmYWN0b3J5KTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKTtcbiAgfSBlbHNlIHtcbiAgICByb290LlBob3RvU3dpcGVVSV9EZWZhdWx0ID0gZmFjdG9yeSgpO1xuICB9XG59KSh0aGlzLCBmdW5jdGlvbiAoKSB7XG5cbiAgJ3VzZSBzdHJpY3QnO1xuXG5cblxudmFyIFBob3RvU3dpcGVVSV9EZWZhdWx0ID1cbiBmdW5jdGlvbihwc3dwLCBmcmFtZXdvcmspIHtcblxuICB2YXIgdWkgPSB0aGlzO1xuICB2YXIgX292ZXJsYXlVSVVwZGF0ZWQgPSBmYWxzZSxcbiAgICBfY29udHJvbHNWaXNpYmxlID0gdHJ1ZSxcbiAgICBfZnVsbHNjcmVuQVBJLFxuICAgIF9jb250cm9scyxcbiAgICBfY2FwdGlvbkNvbnRhaW5lcixcbiAgICBfZmFrZUNhcHRpb25Db250YWluZXIsXG4gICAgX2luZGV4SW5kaWNhdG9yLFxuICAgIF9zaGFyZUJ1dHRvbixcbiAgICBfc2hhcmVNb2RhbCxcbiAgICBfc2hhcmVNb2RhbEhpZGRlbiA9IHRydWUsXG4gICAgX2luaXRhbENsb3NlT25TY3JvbGxWYWx1ZSxcbiAgICBfaXNJZGxlLFxuICAgIF9saXN0ZW4sXG5cbiAgICBfbG9hZGluZ0luZGljYXRvcixcbiAgICBfbG9hZGluZ0luZGljYXRvckhpZGRlbixcbiAgICBfbG9hZGluZ0luZGljYXRvclRpbWVvdXQsXG5cbiAgICBfZ2FsbGVyeUhhc09uZVNsaWRlLFxuXG4gICAgX29wdGlvbnMsXG4gICAgX2RlZmF1bHRVSU9wdGlvbnMgPSB7XG4gICAgICBiYXJzU2l6ZToge3RvcDo0NCwgYm90dG9tOidhdXRvJ30sXG4gICAgICBjbG9zZUVsQ2xhc3NlczogWydpdGVtJywgJ2NhcHRpb24nLCAnem9vbS13cmFwJywgJ3VpJywgJ3RvcC1iYXInXSxcbiAgICAgIHRpbWVUb0lkbGU6IDQwMDAsXG4gICAgICB0aW1lVG9JZGxlT3V0c2lkZTogMTAwMCxcbiAgICAgIGxvYWRpbmdJbmRpY2F0b3JEZWxheTogMTAwMCwgLy8gMnNcblxuICAgICAgYWRkQ2FwdGlvbkhUTUxGbjogZnVuY3Rpb24oaXRlbSwgY2FwdGlvbkVsIC8qLCBpc0Zha2UgKi8pIHtcbiAgICAgICAgaWYoIWl0ZW0udGl0bGUpIHtcbiAgICAgICAgICBjYXB0aW9uRWwuY2hpbGRyZW5bMF0uaW5uZXJIVE1MID0gJyc7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGNhcHRpb25FbC5jaGlsZHJlblswXS5pbm5lckhUTUwgPSBpdGVtLnRpdGxlO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH0sXG5cbiAgICAgIGNsb3NlRWw6dHJ1ZSxcbiAgICAgIGNhcHRpb25FbDogdHJ1ZSxcbiAgICAgIGZ1bGxzY3JlZW5FbDogdHJ1ZSxcbiAgICAgIHpvb21FbDogdHJ1ZSxcbiAgICAgIHNoYXJlRWw6IHRydWUsXG4gICAgICBjb3VudGVyRWw6IHRydWUsXG4gICAgICBhcnJvd0VsOiB0cnVlLFxuICAgICAgcHJlbG9hZGVyRWw6IHRydWUsXG5cbiAgICAgIHRhcFRvQ2xvc2U6IGZhbHNlLFxuICAgICAgdGFwVG9Ub2dnbGVDb250cm9sczogdHJ1ZSxcblxuICAgICAgY2xpY2tUb0Nsb3NlTm9uWm9vbWFibGU6IHRydWUsXG5cbiAgICAgIHNoYXJlQnV0dG9uczogW1xuICAgICAgICB7aWQ6J2ZhY2Vib29rJywgbGFiZWw6J1NoYXJlIG9uIEZhY2Vib29rJywgdXJsOidodHRwczovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyL3NoYXJlci5waHA/dT17e3VybH19J30sXG4gICAgICAgIHtpZDondHdpdHRlcicsIGxhYmVsOidUd2VldCcsIHVybDonaHR0cHM6Ly90d2l0dGVyLmNvbS9pbnRlbnQvdHdlZXQ/dGV4dD17e3RleHR9fSZ1cmw9e3t1cmx9fSd9LFxuICAgICAgICB7aWQ6J2Rvd25sb2FkJywgbGFiZWw6J0Rvd25sb2FkIGltYWdlJywgdXJsOid7e3Jhd19pbWFnZV91cmx9fScsIGRvd25sb2FkOnRydWV9XG4gICAgICBdLFxuICAgICAgZ2V0SW1hZ2VVUkxGb3JTaGFyZTogZnVuY3Rpb24oIC8qIHNoYXJlQnV0dG9uRGF0YSAqLyApIHtcbiAgICAgICAgcmV0dXJuIHBzd3AuY3Vyckl0ZW0uc3JjIHx8ICcnO1xuICAgICAgfSxcbiAgICAgIGdldFBhZ2VVUkxGb3JTaGFyZTogZnVuY3Rpb24oIC8qIHNoYXJlQnV0dG9uRGF0YSAqLyApIHtcbiAgICAgICAgcmV0dXJuIHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuICAgICAgfSxcbiAgICAgIGdldFRleHRGb3JTaGFyZTogZnVuY3Rpb24oIC8qIHNoYXJlQnV0dG9uRGF0YSAqLyApIHtcbiAgICAgICAgcmV0dXJuIHBzd3AuY3Vyckl0ZW0udGl0bGUgfHwgJyc7XG4gICAgICB9LFxuXG4gICAgICBpbmRleEluZGljYXRvclNlcDogJyAvICcsXG4gICAgICBmaXRDb250cm9sc1dpZHRoOiAxMjAwXG5cbiAgICB9LFxuICAgIF9ibG9ja0NvbnRyb2xzVGFwLFxuICAgIF9ibG9ja0NvbnRyb2xzVGFwVGltZW91dDtcblxuXG5cbiAgdmFyIF9vbkNvbnRyb2xzVGFwID0gZnVuY3Rpb24oZSkge1xuICAgICAgaWYoX2Jsb2NrQ29udHJvbHNUYXApIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cblxuICAgICAgZSA9IGUgfHwgd2luZG93LmV2ZW50O1xuXG4gICAgICBpZihfb3B0aW9ucy50aW1lVG9JZGxlICYmIF9vcHRpb25zLm1vdXNlVXNlZCAmJiAhX2lzSWRsZSkge1xuICAgICAgICAvLyByZXNldCBpZGxlIHRpbWVyXG4gICAgICAgIF9vbklkbGVNb3VzZU1vdmUoKTtcbiAgICAgIH1cblxuXG4gICAgICB2YXIgdGFyZ2V0ID0gZS50YXJnZXQgfHwgZS5zcmNFbGVtZW50LFxuICAgICAgICB1aUVsZW1lbnQsXG4gICAgICAgIGNsaWNrZWRDbGFzcyA9IHRhcmdldC5nZXRBdHRyaWJ1dGUoJ2NsYXNzJykgfHwgJycsXG4gICAgICAgIGZvdW5kO1xuXG4gICAgICBmb3IodmFyIGkgPSAwOyBpIDwgX3VpRWxlbWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdWlFbGVtZW50ID0gX3VpRWxlbWVudHNbaV07XG4gICAgICAgIGlmKHVpRWxlbWVudC5vblRhcCAmJiBjbGlja2VkQ2xhc3MuaW5kZXhPZigncHN3cF9fJyArIHVpRWxlbWVudC5uYW1lICkgPiAtMSApIHtcbiAgICAgICAgICB1aUVsZW1lbnQub25UYXAoKTtcbiAgICAgICAgICBmb3VuZCA9IHRydWU7XG5cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZihmb3VuZCkge1xuICAgICAgICBpZihlLnN0b3BQcm9wYWdhdGlvbikge1xuICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgIH1cbiAgICAgICAgX2Jsb2NrQ29udHJvbHNUYXAgPSB0cnVlO1xuXG4gICAgICAgIC8vIFNvbWUgdmVyc2lvbnMgb2YgQW5kcm9pZCBkb24ndCBwcmV2ZW50IGdob3N0IGNsaWNrIGV2ZW50XG4gICAgICAgIC8vIHdoZW4gcHJldmVudERlZmF1bHQoKSB3YXMgY2FsbGVkIG9uIHRvdWNoc3RhcnQgYW5kL29yIHRvdWNoZW5kLlxuICAgICAgICAvL1xuICAgICAgICAvLyBUaGlzIGhhcHBlbnMgb24gdjQuMywgNC4yLCA0LjEsXG4gICAgICAgIC8vIG9sZGVyIHZlcnNpb25zIHN0cmFuZ2VseSB3b3JrIGNvcnJlY3RseSxcbiAgICAgICAgLy8gYnV0IGp1c3QgaW4gY2FzZSB3ZSBhZGQgZGVsYXkgb24gYWxsIG9mIHRoZW0pXG4gICAgICAgIHZhciB0YXBEZWxheSA9IGZyYW1ld29yay5mZWF0dXJlcy5pc09sZEFuZHJvaWQgPyA2MDAgOiAzMDtcbiAgICAgICAgX2Jsb2NrQ29udHJvbHNUYXBUaW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICBfYmxvY2tDb250cm9sc1RhcCA9IGZhbHNlO1xuICAgICAgICB9LCB0YXBEZWxheSk7XG4gICAgICB9XG5cbiAgICB9LFxuICAgIF9maXRDb250cm9sc0luVmlld3BvcnQgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiAhcHN3cC5saWtlbHlUb3VjaERldmljZSB8fCBfb3B0aW9ucy5tb3VzZVVzZWQgfHwgc2NyZWVuLndpZHRoID4gX29wdGlvbnMuZml0Q29udHJvbHNXaWR0aDtcbiAgICB9LFxuICAgIF90b2dnbGVQc3dwQ2xhc3MgPSBmdW5jdGlvbihlbCwgY05hbWUsIGFkZCkge1xuICAgICAgZnJhbWV3b3JrWyAoYWRkID8gJ2FkZCcgOiAncmVtb3ZlJykgKyAnQ2xhc3MnIF0oZWwsICdwc3dwX18nICsgY05hbWUpO1xuICAgIH0sXG5cbiAgICAvLyBhZGQgY2xhc3Mgd2hlbiB0aGVyZSBpcyBqdXN0IG9uZSBpdGVtIGluIHRoZSBnYWxsZXJ5XG4gICAgLy8gKGJ5IGRlZmF1bHQgaXQgaGlkZXMgbGVmdC9yaWdodCBhcnJvd3MgYW5kIDFvZlggY291bnRlcilcbiAgICBfY291bnROdW1JdGVtcyA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGhhc09uZVNsaWRlID0gKF9vcHRpb25zLmdldE51bUl0ZW1zRm4oKSA9PT0gMSk7XG5cbiAgICAgIGlmKGhhc09uZVNsaWRlICE9PSBfZ2FsbGVyeUhhc09uZVNsaWRlKSB7XG4gICAgICAgIF90b2dnbGVQc3dwQ2xhc3MoX2NvbnRyb2xzLCAndWktLW9uZS1zbGlkZScsIGhhc09uZVNsaWRlKTtcbiAgICAgICAgX2dhbGxlcnlIYXNPbmVTbGlkZSA9IGhhc09uZVNsaWRlO1xuICAgICAgfVxuICAgIH0sXG4gICAgX3RvZ2dsZVNoYXJlTW9kYWxDbGFzcyA9IGZ1bmN0aW9uKCkge1xuICAgICAgX3RvZ2dsZVBzd3BDbGFzcyhfc2hhcmVNb2RhbCwgJ3NoYXJlLW1vZGFsLS1oaWRkZW4nLCBfc2hhcmVNb2RhbEhpZGRlbik7XG4gICAgfSxcbiAgICBfdG9nZ2xlU2hhcmVNb2RhbCA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICBfc2hhcmVNb2RhbEhpZGRlbiA9ICFfc2hhcmVNb2RhbEhpZGRlbjtcblxuXG4gICAgICBpZighX3NoYXJlTW9kYWxIaWRkZW4pIHtcbiAgICAgICAgX3RvZ2dsZVNoYXJlTW9kYWxDbGFzcygpO1xuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGlmKCFfc2hhcmVNb2RhbEhpZGRlbikge1xuICAgICAgICAgICAgZnJhbWV3b3JrLmFkZENsYXNzKF9zaGFyZU1vZGFsLCAncHN3cF9fc2hhcmUtbW9kYWwtLWZhZGUtaW4nKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sIDMwKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZyYW1ld29yay5yZW1vdmVDbGFzcyhfc2hhcmVNb2RhbCwgJ3Bzd3BfX3NoYXJlLW1vZGFsLS1mYWRlLWluJyk7XG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgaWYoX3NoYXJlTW9kYWxIaWRkZW4pIHtcbiAgICAgICAgICAgIF90b2dnbGVTaGFyZU1vZGFsQ2xhc3MoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sIDMwMCk7XG4gICAgICB9XG5cbiAgICAgIGlmKCFfc2hhcmVNb2RhbEhpZGRlbikge1xuICAgICAgICBfdXBkYXRlU2hhcmVVUkxzKCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSxcblxuICAgIF9vcGVuV2luZG93UG9wdXAgPSBmdW5jdGlvbihlKSB7XG4gICAgICBlID0gZSB8fCB3aW5kb3cuZXZlbnQ7XG4gICAgICB2YXIgdGFyZ2V0ID0gZS50YXJnZXQgfHwgZS5zcmNFbGVtZW50O1xuXG4gICAgICBwc3dwLnNob3V0KCdzaGFyZUxpbmtDbGljaycsIGUsIHRhcmdldCk7XG5cbiAgICAgIGlmKCF0YXJnZXQuaHJlZikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIGlmKCB0YXJnZXQuaGFzQXR0cmlidXRlKCdkb3dubG9hZCcpICkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgd2luZG93Lm9wZW4odGFyZ2V0LmhyZWYsICdwc3dwX3NoYXJlJywgJ3Njcm9sbGJhcnM9eWVzLHJlc2l6YWJsZT15ZXMsdG9vbGJhcj1ubywnK1xuICAgICAgICAgICAgICAgICAgICAnbG9jYXRpb249eWVzLHdpZHRoPTU1MCxoZWlnaHQ9NDIwLHRvcD0xMDAsbGVmdD0nICtcbiAgICAgICAgICAgICAgICAgICAgKHdpbmRvdy5zY3JlZW4gPyBNYXRoLnJvdW5kKHNjcmVlbi53aWR0aCAvIDIgLSAyNzUpIDogMTAwKSAgKTtcblxuICAgICAgaWYoIV9zaGFyZU1vZGFsSGlkZGVuKSB7XG4gICAgICAgIF90b2dnbGVTaGFyZU1vZGFsKCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9LFxuICAgIF91cGRhdGVTaGFyZVVSTHMgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBzaGFyZUJ1dHRvbk91dCA9ICcnLFxuICAgICAgICBzaGFyZUJ1dHRvbkRhdGEsXG4gICAgICAgIHNoYXJlVVJMLFxuICAgICAgICBpbWFnZV91cmwsXG4gICAgICAgIHBhZ2VfdXJsLFxuICAgICAgICBzaGFyZV90ZXh0O1xuXG4gICAgICBmb3IodmFyIGkgPSAwOyBpIDwgX29wdGlvbnMuc2hhcmVCdXR0b25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHNoYXJlQnV0dG9uRGF0YSA9IF9vcHRpb25zLnNoYXJlQnV0dG9uc1tpXTtcblxuICAgICAgICBpbWFnZV91cmwgPSBfb3B0aW9ucy5nZXRJbWFnZVVSTEZvclNoYXJlKHNoYXJlQnV0dG9uRGF0YSk7XG4gICAgICAgIHBhZ2VfdXJsID0gX29wdGlvbnMuZ2V0UGFnZVVSTEZvclNoYXJlKHNoYXJlQnV0dG9uRGF0YSk7XG4gICAgICAgIHNoYXJlX3RleHQgPSBfb3B0aW9ucy5nZXRUZXh0Rm9yU2hhcmUoc2hhcmVCdXR0b25EYXRhKTtcblxuICAgICAgICBzaGFyZVVSTCA9IHNoYXJlQnV0dG9uRGF0YS51cmwucmVwbGFjZSgne3t1cmx9fScsIGVuY29kZVVSSUNvbXBvbmVudChwYWdlX3VybCkgKVxuICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoJ3t7aW1hZ2VfdXJsfX0nLCBlbmNvZGVVUklDb21wb25lbnQoaW1hZ2VfdXJsKSApXG4gICAgICAgICAgICAgICAgICAucmVwbGFjZSgne3tyYXdfaW1hZ2VfdXJsfX0nLCBpbWFnZV91cmwgKVxuICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoJ3t7dGV4dH19JywgZW5jb2RlVVJJQ29tcG9uZW50KHNoYXJlX3RleHQpICk7XG5cbiAgICAgICAgc2hhcmVCdXR0b25PdXQgKz0gJzxhIGhyZWY9XCInICsgc2hhcmVVUkwgKyAnXCIgdGFyZ2V0PVwiX2JsYW5rXCIgJytcbiAgICAgICAgICAgICAgICAgICdjbGFzcz1cInBzd3BfX3NoYXJlLS0nICsgc2hhcmVCdXR0b25EYXRhLmlkICsgJ1wiJyArXG4gICAgICAgICAgICAgICAgICAoc2hhcmVCdXR0b25EYXRhLmRvd25sb2FkID8gJ2Rvd25sb2FkJyA6ICcnKSArICc+JyArXG4gICAgICAgICAgICAgICAgICBzaGFyZUJ1dHRvbkRhdGEubGFiZWwgKyAnPC9hPic7XG5cbiAgICAgICAgaWYoX29wdGlvbnMucGFyc2VTaGFyZUJ1dHRvbk91dCkge1xuICAgICAgICAgIHNoYXJlQnV0dG9uT3V0ID0gX29wdGlvbnMucGFyc2VTaGFyZUJ1dHRvbk91dChzaGFyZUJ1dHRvbkRhdGEsIHNoYXJlQnV0dG9uT3V0KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgX3NoYXJlTW9kYWwuY2hpbGRyZW5bMF0uaW5uZXJIVE1MID0gc2hhcmVCdXR0b25PdXQ7XG4gICAgICBfc2hhcmVNb2RhbC5jaGlsZHJlblswXS5vbmNsaWNrID0gX29wZW5XaW5kb3dQb3B1cDtcblxuICAgIH0sXG4gICAgX2hhc0Nsb3NlQ2xhc3MgPSBmdW5jdGlvbih0YXJnZXQpIHtcbiAgICAgIGZvcih2YXIgIGkgPSAwOyBpIDwgX29wdGlvbnMuY2xvc2VFbENsYXNzZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYoIGZyYW1ld29yay5oYXNDbGFzcyh0YXJnZXQsICdwc3dwX18nICsgX29wdGlvbnMuY2xvc2VFbENsYXNzZXNbaV0pICkge1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBfaWRsZUludGVydmFsLFxuICAgIF9pZGxlVGltZXIsXG4gICAgX2lkbGVJbmNyZW1lbnQgPSAwLFxuICAgIF9vbklkbGVNb3VzZU1vdmUgPSBmdW5jdGlvbigpIHtcbiAgICAgIGNsZWFyVGltZW91dChfaWRsZVRpbWVyKTtcbiAgICAgIF9pZGxlSW5jcmVtZW50ID0gMDtcbiAgICAgIGlmKF9pc0lkbGUpIHtcbiAgICAgICAgdWkuc2V0SWRsZShmYWxzZSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBfb25Nb3VzZUxlYXZlV2luZG93ID0gZnVuY3Rpb24oZSkge1xuICAgICAgZSA9IGUgPyBlIDogd2luZG93LmV2ZW50O1xuICAgICAgdmFyIGZyb20gPSBlLnJlbGF0ZWRUYXJnZXQgfHwgZS50b0VsZW1lbnQ7XG4gICAgICBpZiAoIWZyb20gfHwgZnJvbS5ub2RlTmFtZSA9PT0gJ0hUTUwnKSB7XG4gICAgICAgIGNsZWFyVGltZW91dChfaWRsZVRpbWVyKTtcbiAgICAgICAgX2lkbGVUaW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgdWkuc2V0SWRsZSh0cnVlKTtcbiAgICAgICAgfSwgX29wdGlvbnMudGltZVRvSWRsZU91dHNpZGUpO1xuICAgICAgfVxuICAgIH0sXG4gICAgX3NldHVwRnVsbHNjcmVlbkFQSSA9IGZ1bmN0aW9uKCkge1xuICAgICAgaWYoX29wdGlvbnMuZnVsbHNjcmVlbkVsICYmICFmcmFtZXdvcmsuZmVhdHVyZXMuaXNPbGRBbmRyb2lkKSB7XG4gICAgICAgIGlmKCFfZnVsbHNjcmVuQVBJKSB7XG4gICAgICAgICAgX2Z1bGxzY3JlbkFQSSA9IHVpLmdldEZ1bGxzY3JlZW5BUEkoKTtcbiAgICAgICAgfVxuICAgICAgICBpZihfZnVsbHNjcmVuQVBJKSB7XG4gICAgICAgICAgZnJhbWV3b3JrLmJpbmQoZG9jdW1lbnQsIF9mdWxsc2NyZW5BUEkuZXZlbnRLLCB1aS51cGRhdGVGdWxsc2NyZWVuKTtcbiAgICAgICAgICB1aS51cGRhdGVGdWxsc2NyZWVuKCk7XG4gICAgICAgICAgZnJhbWV3b3JrLmFkZENsYXNzKHBzd3AudGVtcGxhdGUsICdwc3dwLS1zdXBwb3J0cy1mcycpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGZyYW1ld29yay5yZW1vdmVDbGFzcyhwc3dwLnRlbXBsYXRlLCAncHN3cC0tc3VwcG9ydHMtZnMnKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgX3NldHVwTG9hZGluZ0luZGljYXRvciA9IGZ1bmN0aW9uKCkge1xuICAgICAgLy8gU2V0dXAgbG9hZGluZyBpbmRpY2F0b3JcbiAgICAgIGlmKF9vcHRpb25zLnByZWxvYWRlckVsKSB7XG5cbiAgICAgICAgX3RvZ2dsZUxvYWRpbmdJbmRpY2F0b3IodHJ1ZSk7XG5cbiAgICAgICAgX2xpc3RlbignYmVmb3JlQ2hhbmdlJywgZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgICBjbGVhclRpbWVvdXQoX2xvYWRpbmdJbmRpY2F0b3JUaW1lb3V0KTtcblxuICAgICAgICAgIC8vIGRpc3BsYXkgbG9hZGluZyBpbmRpY2F0b3Igd2l0aCBkZWxheVxuICAgICAgICAgIF9sb2FkaW5nSW5kaWNhdG9yVGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgICAgIGlmKHBzd3AuY3Vyckl0ZW0gJiYgcHN3cC5jdXJySXRlbS5sb2FkaW5nKSB7XG5cbiAgICAgICAgICAgICAgaWYoICFwc3dwLmFsbG93UHJvZ3Jlc3NpdmVJbWcoKSB8fCAocHN3cC5jdXJySXRlbS5pbWcgJiYgIXBzd3AuY3Vyckl0ZW0uaW1nLm5hdHVyYWxXaWR0aCkgICkge1xuICAgICAgICAgICAgICAgIC8vIHNob3cgcHJlbG9hZGVyIGlmIHByb2dyZXNzaXZlIGxvYWRpbmcgaXMgbm90IGVuYWJsZWQsXG4gICAgICAgICAgICAgICAgLy8gb3IgaW1hZ2Ugd2lkdGggaXMgbm90IGRlZmluZWQgeWV0IChiZWNhdXNlIG9mIHNsb3cgY29ubmVjdGlvbilcbiAgICAgICAgICAgICAgICBfdG9nZ2xlTG9hZGluZ0luZGljYXRvcihmYWxzZSk7XG4gICAgICAgICAgICAgICAgLy8gaXRlbXMtY29udHJvbGxlci5qcyBmdW5jdGlvbiBhbGxvd1Byb2dyZXNzaXZlSW1nXG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgX3RvZ2dsZUxvYWRpbmdJbmRpY2F0b3IodHJ1ZSk7IC8vIGhpZGUgcHJlbG9hZGVyXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICB9LCBfb3B0aW9ucy5sb2FkaW5nSW5kaWNhdG9yRGVsYXkpO1xuXG4gICAgICAgIH0pO1xuICAgICAgICBfbGlzdGVuKCdpbWFnZUxvYWRDb21wbGV0ZScsIGZ1bmN0aW9uKGluZGV4LCBpdGVtKSB7XG4gICAgICAgICAgaWYocHN3cC5jdXJySXRlbSA9PT0gaXRlbSkge1xuICAgICAgICAgICAgX3RvZ2dsZUxvYWRpbmdJbmRpY2F0b3IodHJ1ZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgfVxuICAgIH0sXG4gICAgX3RvZ2dsZUxvYWRpbmdJbmRpY2F0b3IgPSBmdW5jdGlvbihoaWRlKSB7XG4gICAgICBpZiggX2xvYWRpbmdJbmRpY2F0b3JIaWRkZW4gIT09IGhpZGUgKSB7XG4gICAgICAgIF90b2dnbGVQc3dwQ2xhc3MoX2xvYWRpbmdJbmRpY2F0b3IsICdwcmVsb2FkZXItLWFjdGl2ZScsICFoaWRlKTtcbiAgICAgICAgX2xvYWRpbmdJbmRpY2F0b3JIaWRkZW4gPSBoaWRlO1xuICAgICAgfVxuICAgIH0sXG4gICAgX2FwcGx5TmF2QmFyR2FwcyA9IGZ1bmN0aW9uKGl0ZW0pIHtcbiAgICAgIHZhciBnYXAgPSBpdGVtLnZHYXA7XG5cbiAgICAgIGlmKCBfZml0Q29udHJvbHNJblZpZXdwb3J0KCkgKSB7XG5cbiAgICAgICAgdmFyIGJhcnMgPSBfb3B0aW9ucy5iYXJzU2l6ZTtcbiAgICAgICAgaWYoX29wdGlvbnMuY2FwdGlvbkVsICYmIGJhcnMuYm90dG9tID09PSAnYXV0bycpIHtcbiAgICAgICAgICBpZighX2Zha2VDYXB0aW9uQ29udGFpbmVyKSB7XG4gICAgICAgICAgICBfZmFrZUNhcHRpb25Db250YWluZXIgPSBmcmFtZXdvcmsuY3JlYXRlRWwoJ3Bzd3BfX2NhcHRpb24gcHN3cF9fY2FwdGlvbi0tZmFrZScpO1xuICAgICAgICAgICAgX2Zha2VDYXB0aW9uQ29udGFpbmVyLmFwcGVuZENoaWxkKCBmcmFtZXdvcmsuY3JlYXRlRWwoJ3Bzd3BfX2NhcHRpb25fX2NlbnRlcicpICk7XG4gICAgICAgICAgICBfY29udHJvbHMuaW5zZXJ0QmVmb3JlKF9mYWtlQ2FwdGlvbkNvbnRhaW5lciwgX2NhcHRpb25Db250YWluZXIpO1xuICAgICAgICAgICAgZnJhbWV3b3JrLmFkZENsYXNzKF9jb250cm9scywgJ3Bzd3BfX3VpLS1maXQnKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYoIF9vcHRpb25zLmFkZENhcHRpb25IVE1MRm4oaXRlbSwgX2Zha2VDYXB0aW9uQ29udGFpbmVyLCB0cnVlKSApIHtcblxuICAgICAgICAgICAgdmFyIGNhcHRpb25TaXplID0gX2Zha2VDYXB0aW9uQ29udGFpbmVyLmNsaWVudEhlaWdodDtcbiAgICAgICAgICAgIGdhcC5ib3R0b20gPSBwYXJzZUludChjYXB0aW9uU2l6ZSwxMCkgfHwgNDQ7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGdhcC5ib3R0b20gPSBiYXJzLnRvcDsgLy8gaWYgbm8gY2FwdGlvbiwgc2V0IHNpemUgb2YgYm90dG9tIGdhcCB0byBzaXplIG9mIHRvcFxuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBnYXAuYm90dG9tID0gYmFycy5ib3R0b20gPT09ICdhdXRvJyA/IDAgOiBiYXJzLmJvdHRvbTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGhlaWdodCBvZiB0b3AgYmFyIGlzIHN0YXRpYywgbm8gbmVlZCB0byBjYWxjdWxhdGUgaXRcbiAgICAgICAgZ2FwLnRvcCA9IGJhcnMudG9wO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZ2FwLnRvcCA9IGdhcC5ib3R0b20gPSAwO1xuICAgICAgfVxuICAgIH0sXG4gICAgX3NldHVwSWRsZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgLy8gSGlkZSBjb250cm9scyB3aGVuIG1vdXNlIGlzIHVzZWRcbiAgICAgIGlmKF9vcHRpb25zLnRpbWVUb0lkbGUpIHtcbiAgICAgICAgX2xpc3RlbignbW91c2VVc2VkJywgZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgICBmcmFtZXdvcmsuYmluZChkb2N1bWVudCwgJ21vdXNlbW92ZScsIF9vbklkbGVNb3VzZU1vdmUpO1xuICAgICAgICAgIGZyYW1ld29yay5iaW5kKGRvY3VtZW50LCAnbW91c2VvdXQnLCBfb25Nb3VzZUxlYXZlV2luZG93KTtcblxuICAgICAgICAgIF9pZGxlSW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIF9pZGxlSW5jcmVtZW50Kys7XG4gICAgICAgICAgICBpZihfaWRsZUluY3JlbWVudCA9PT0gMikge1xuICAgICAgICAgICAgICB1aS5zZXRJZGxlKHRydWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sIF9vcHRpb25zLnRpbWVUb0lkbGUgLyAyKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBfc2V0dXBIaWRpbmdDb250cm9sc0R1cmluZ0dlc3R1cmVzID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgIC8vIEhpZGUgY29udHJvbHMgb24gdmVydGljYWwgZHJhZ1xuICAgICAgX2xpc3Rlbignb25WZXJ0aWNhbERyYWcnLCBmdW5jdGlvbihub3cpIHtcbiAgICAgICAgaWYoX2NvbnRyb2xzVmlzaWJsZSAmJiBub3cgPCAwLjk1KSB7XG4gICAgICAgICAgdWkuaGlkZUNvbnRyb2xzKCk7XG4gICAgICAgIH0gZWxzZSBpZighX2NvbnRyb2xzVmlzaWJsZSAmJiBub3cgPj0gMC45NSkge1xuICAgICAgICAgIHVpLnNob3dDb250cm9scygpO1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgLy8gSGlkZSBjb250cm9scyB3aGVuIHBpbmNoaW5nIHRvIGNsb3NlXG4gICAgICB2YXIgcGluY2hDb250cm9sc0hpZGRlbjtcbiAgICAgIF9saXN0ZW4oJ29uUGluY2hDbG9zZScgLCBmdW5jdGlvbihub3cpIHtcbiAgICAgICAgaWYoX2NvbnRyb2xzVmlzaWJsZSAmJiBub3cgPCAwLjkpIHtcbiAgICAgICAgICB1aS5oaWRlQ29udHJvbHMoKTtcbiAgICAgICAgICBwaW5jaENvbnRyb2xzSGlkZGVuID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIGlmKHBpbmNoQ29udHJvbHNIaWRkZW4gJiYgIV9jb250cm9sc1Zpc2libGUgJiYgbm93ID4gMC45KSB7XG4gICAgICAgICAgdWkuc2hvd0NvbnRyb2xzKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBfbGlzdGVuKCd6b29tR2VzdHVyZUVuZGVkJywgZnVuY3Rpb24oKSB7XG4gICAgICAgIHBpbmNoQ29udHJvbHNIaWRkZW4gPSBmYWxzZTtcbiAgICAgICAgaWYocGluY2hDb250cm9sc0hpZGRlbiAmJiAhX2NvbnRyb2xzVmlzaWJsZSkge1xuICAgICAgICAgIHVpLnNob3dDb250cm9scygpO1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgIH07XG5cblxuXG4gIHZhciBfdWlFbGVtZW50cyA9IFtcbiAgICB7XG4gICAgICBuYW1lOiAnY2FwdGlvbicsXG4gICAgICBvcHRpb246ICdjYXB0aW9uRWwnLFxuICAgICAgb25Jbml0OiBmdW5jdGlvbihlbCkge1xuICAgICAgICBfY2FwdGlvbkNvbnRhaW5lciA9IGVsO1xuICAgICAgfVxuICAgIH0sXG4gICAge1xuICAgICAgbmFtZTogJ3NoYXJlLW1vZGFsJyxcbiAgICAgIG9wdGlvbjogJ3NoYXJlRWwnLFxuICAgICAgb25Jbml0OiBmdW5jdGlvbihlbCkge1xuICAgICAgICBfc2hhcmVNb2RhbCA9IGVsO1xuICAgICAgfSxcbiAgICAgIG9uVGFwOiBmdW5jdGlvbigpIHtcbiAgICAgICAgX3RvZ2dsZVNoYXJlTW9kYWwoKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIHtcbiAgICAgIG5hbWU6ICdidXR0b24tLXNoYXJlJyxcbiAgICAgIG9wdGlvbjogJ3NoYXJlRWwnLFxuICAgICAgb25Jbml0OiBmdW5jdGlvbihlbCkge1xuICAgICAgICBfc2hhcmVCdXR0b24gPSBlbDtcbiAgICAgIH0sXG4gICAgICBvblRhcDogZnVuY3Rpb24oKSB7XG4gICAgICAgIF90b2dnbGVTaGFyZU1vZGFsKCk7XG4gICAgICB9XG4gICAgfSxcbiAgICB7XG4gICAgICBuYW1lOiAnYnV0dG9uLS16b29tJyxcbiAgICAgIG9wdGlvbjogJ3pvb21FbCcsXG4gICAgICBvblRhcDogcHN3cC50b2dnbGVEZXNrdG9wWm9vbVxuICAgIH0sXG4gICAge1xuICAgICAgbmFtZTogJ2NvdW50ZXInLFxuICAgICAgb3B0aW9uOiAnY291bnRlckVsJyxcbiAgICAgIG9uSW5pdDogZnVuY3Rpb24oZWwpIHtcbiAgICAgICAgX2luZGV4SW5kaWNhdG9yID0gZWw7XG4gICAgICB9XG4gICAgfSxcbiAgICB7XG4gICAgICBuYW1lOiAnYnV0dG9uLS1jbG9zZScsXG4gICAgICBvcHRpb246ICdjbG9zZUVsJyxcbiAgICAgIG9uVGFwOiBwc3dwLmNsb3NlXG4gICAgfSxcbiAgICB7XG4gICAgICBuYW1lOiAnYnV0dG9uLS1hcnJvdy0tbGVmdCcsXG4gICAgICBvcHRpb246ICdhcnJvd0VsJyxcbiAgICAgIG9uVGFwOiBwc3dwLnByZXZcbiAgICB9LFxuICAgIHtcbiAgICAgIG5hbWU6ICdidXR0b24tLWFycm93LS1yaWdodCcsXG4gICAgICBvcHRpb246ICdhcnJvd0VsJyxcbiAgICAgIG9uVGFwOiBwc3dwLm5leHRcbiAgICB9LFxuICAgIHtcbiAgICAgIG5hbWU6ICdidXR0b24tLWZzJyxcbiAgICAgIG9wdGlvbjogJ2Z1bGxzY3JlZW5FbCcsXG4gICAgICBvblRhcDogZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmKF9mdWxsc2NyZW5BUEkuaXNGdWxsc2NyZWVuKCkpIHtcbiAgICAgICAgICBfZnVsbHNjcmVuQVBJLmV4aXQoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBfZnVsbHNjcmVuQVBJLmVudGVyKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIHtcbiAgICAgIG5hbWU6ICdwcmVsb2FkZXInLFxuICAgICAgb3B0aW9uOiAncHJlbG9hZGVyRWwnLFxuICAgICAgb25Jbml0OiBmdW5jdGlvbihlbCkge1xuICAgICAgICBfbG9hZGluZ0luZGljYXRvciA9IGVsO1xuICAgICAgfVxuICAgIH1cblxuICBdO1xuXG4gIHZhciBfc2V0dXBVSUVsZW1lbnRzID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGl0ZW0sXG4gICAgICBjbGFzc0F0dHIsXG4gICAgICB1aUVsZW1lbnQ7XG5cbiAgICB2YXIgbG9vcFRocm91Z2hDaGlsZEVsZW1lbnRzID0gZnVuY3Rpb24oc0NoaWxkcmVuKSB7XG4gICAgICBpZighc0NoaWxkcmVuKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIGwgPSBzQ2hpbGRyZW4ubGVuZ3RoO1xuICAgICAgZm9yKHZhciBpID0gMDsgaSA8IGw7IGkrKykge1xuICAgICAgICBpdGVtID0gc0NoaWxkcmVuW2ldO1xuICAgICAgICBjbGFzc0F0dHIgPSBpdGVtLmNsYXNzTmFtZTtcblxuICAgICAgICBmb3IodmFyIGEgPSAwOyBhIDwgX3VpRWxlbWVudHMubGVuZ3RoOyBhKyspIHtcbiAgICAgICAgICB1aUVsZW1lbnQgPSBfdWlFbGVtZW50c1thXTtcblxuICAgICAgICAgIGlmKGNsYXNzQXR0ci5pbmRleE9mKCdwc3dwX18nICsgdWlFbGVtZW50Lm5hbWUpID4gLTEgICkge1xuXG4gICAgICAgICAgICBpZiggX29wdGlvbnNbdWlFbGVtZW50Lm9wdGlvbl0gKSB7IC8vIGlmIGVsZW1lbnQgaXMgbm90IGRpc2FibGVkIGZyb20gb3B0aW9uc1xuXG4gICAgICAgICAgICAgIGZyYW1ld29yay5yZW1vdmVDbGFzcyhpdGVtLCAncHN3cF9fZWxlbWVudC0tZGlzYWJsZWQnKTtcbiAgICAgICAgICAgICAgaWYodWlFbGVtZW50Lm9uSW5pdCkge1xuICAgICAgICAgICAgICAgIHVpRWxlbWVudC5vbkluaXQoaXRlbSk7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAvL2l0ZW0uc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBmcmFtZXdvcmsuYWRkQ2xhc3MoaXRlbSwgJ3Bzd3BfX2VsZW1lbnQtLWRpc2FibGVkJyk7XG4gICAgICAgICAgICAgIC8vaXRlbS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG4gICAgbG9vcFRocm91Z2hDaGlsZEVsZW1lbnRzKF9jb250cm9scy5jaGlsZHJlbik7XG5cbiAgICB2YXIgdG9wQmFyID0gIGZyYW1ld29yay5nZXRDaGlsZEJ5Q2xhc3MoX2NvbnRyb2xzLCAncHN3cF9fdG9wLWJhcicpO1xuICAgIGlmKHRvcEJhcikge1xuICAgICAgbG9vcFRocm91Z2hDaGlsZEVsZW1lbnRzKCB0b3BCYXIuY2hpbGRyZW4gKTtcbiAgICB9XG4gIH07XG5cblxuXG5cbiAgdWkuaW5pdCA9IGZ1bmN0aW9uKCkge1xuXG4gICAgLy8gZXh0ZW5kIG9wdGlvbnNcbiAgICBmcmFtZXdvcmsuZXh0ZW5kKHBzd3Aub3B0aW9ucywgX2RlZmF1bHRVSU9wdGlvbnMsIHRydWUpO1xuXG4gICAgLy8gY3JlYXRlIGxvY2FsIGxpbmsgZm9yIGZhc3QgYWNjZXNzXG4gICAgX29wdGlvbnMgPSBwc3dwLm9wdGlvbnM7XG5cbiAgICAvLyBmaW5kIHBzd3BfX3VpIGVsZW1lbnRcbiAgICBfY29udHJvbHMgPSBmcmFtZXdvcmsuZ2V0Q2hpbGRCeUNsYXNzKHBzd3Auc2Nyb2xsV3JhcCwgJ3Bzd3BfX3VpJyk7XG5cbiAgICAvLyBjcmVhdGUgbG9jYWwgbGlua1xuICAgIF9saXN0ZW4gPSBwc3dwLmxpc3RlbjtcblxuXG4gICAgX3NldHVwSGlkaW5nQ29udHJvbHNEdXJpbmdHZXN0dXJlcygpO1xuXG4gICAgLy8gdXBkYXRlIGNvbnRyb2xzIHdoZW4gc2xpZGVzIGNoYW5nZVxuICAgIF9saXN0ZW4oJ2JlZm9yZUNoYW5nZScsIHVpLnVwZGF0ZSk7XG5cbiAgICAvLyB0b2dnbGUgem9vbSBvbiBkb3VibGUtdGFwXG4gICAgX2xpc3RlbignZG91YmxlVGFwJywgZnVuY3Rpb24ocG9pbnQpIHtcbiAgICAgIHZhciBpbml0aWFsWm9vbUxldmVsID0gcHN3cC5jdXJySXRlbS5pbml0aWFsWm9vbUxldmVsO1xuICAgICAgaWYocHN3cC5nZXRab29tTGV2ZWwoKSAhPT0gaW5pdGlhbFpvb21MZXZlbCkge1xuICAgICAgICBwc3dwLnpvb21Ubyhpbml0aWFsWm9vbUxldmVsLCBwb2ludCwgMzMzKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBzd3Auem9vbVRvKF9vcHRpb25zLmdldERvdWJsZVRhcFpvb20oZmFsc2UsIHBzd3AuY3Vyckl0ZW0pLCBwb2ludCwgMzMzKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIC8vIEFsbG93IHRleHQgc2VsZWN0aW9uIGluIGNhcHRpb25cbiAgICBfbGlzdGVuKCdwcmV2ZW50RHJhZ0V2ZW50JywgZnVuY3Rpb24oZSwgaXNEb3duLCBwcmV2ZW50T2JqKSB7XG4gICAgICB2YXIgdCA9IGUudGFyZ2V0IHx8IGUuc3JjRWxlbWVudDtcbiAgICAgIGlmKFxuICAgICAgICB0ICYmXG4gICAgICAgIHQuZ2V0QXR0cmlidXRlKCdjbGFzcycpICYmIGUudHlwZS5pbmRleE9mKCdtb3VzZScpID4gLTEgJiZcbiAgICAgICAgKCB0LmdldEF0dHJpYnV0ZSgnY2xhc3MnKS5pbmRleE9mKCdfX2NhcHRpb24nKSA+IDAgfHwgKC8oU01BTEx8U1RST05HfEVNKS9pKS50ZXN0KHQudGFnTmFtZSkgKVxuICAgICAgKSB7XG4gICAgICAgIHByZXZlbnRPYmoucHJldmVudCA9IGZhbHNlO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gYmluZCBldmVudHMgZm9yIFVJXG4gICAgX2xpc3RlbignYmluZEV2ZW50cycsIGZ1bmN0aW9uKCkge1xuICAgICAgZnJhbWV3b3JrLmJpbmQoX2NvbnRyb2xzLCAncHN3cFRhcCBjbGljaycsIF9vbkNvbnRyb2xzVGFwKTtcbiAgICAgIGZyYW1ld29yay5iaW5kKHBzd3Auc2Nyb2xsV3JhcCwgJ3Bzd3BUYXAnLCB1aS5vbkdsb2JhbFRhcCk7XG5cbiAgICAgIGlmKCFwc3dwLmxpa2VseVRvdWNoRGV2aWNlKSB7XG4gICAgICAgIGZyYW1ld29yay5iaW5kKHBzd3Auc2Nyb2xsV3JhcCwgJ21vdXNlb3ZlcicsIHVpLm9uTW91c2VPdmVyKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIC8vIHVuYmluZCBldmVudHMgZm9yIFVJXG4gICAgX2xpc3RlbigndW5iaW5kRXZlbnRzJywgZnVuY3Rpb24oKSB7XG4gICAgICBpZighX3NoYXJlTW9kYWxIaWRkZW4pIHtcbiAgICAgICAgX3RvZ2dsZVNoYXJlTW9kYWwoKTtcbiAgICAgIH1cblxuICAgICAgaWYoX2lkbGVJbnRlcnZhbCkge1xuICAgICAgICBjbGVhckludGVydmFsKF9pZGxlSW50ZXJ2YWwpO1xuICAgICAgfVxuICAgICAgZnJhbWV3b3JrLnVuYmluZChkb2N1bWVudCwgJ21vdXNlb3V0JywgX29uTW91c2VMZWF2ZVdpbmRvdyk7XG4gICAgICBmcmFtZXdvcmsudW5iaW5kKGRvY3VtZW50LCAnbW91c2Vtb3ZlJywgX29uSWRsZU1vdXNlTW92ZSk7XG4gICAgICBmcmFtZXdvcmsudW5iaW5kKF9jb250cm9scywgJ3Bzd3BUYXAgY2xpY2snLCBfb25Db250cm9sc1RhcCk7XG4gICAgICBmcmFtZXdvcmsudW5iaW5kKHBzd3Auc2Nyb2xsV3JhcCwgJ3Bzd3BUYXAnLCB1aS5vbkdsb2JhbFRhcCk7XG4gICAgICBmcmFtZXdvcmsudW5iaW5kKHBzd3Auc2Nyb2xsV3JhcCwgJ21vdXNlb3ZlcicsIHVpLm9uTW91c2VPdmVyKTtcblxuICAgICAgaWYoX2Z1bGxzY3JlbkFQSSkge1xuICAgICAgICBmcmFtZXdvcmsudW5iaW5kKGRvY3VtZW50LCBfZnVsbHNjcmVuQVBJLmV2ZW50SywgdWkudXBkYXRlRnVsbHNjcmVlbik7XG4gICAgICAgIGlmKF9mdWxsc2NyZW5BUEkuaXNGdWxsc2NyZWVuKCkpIHtcbiAgICAgICAgICBfb3B0aW9ucy5oaWRlQW5pbWF0aW9uRHVyYXRpb24gPSAwO1xuICAgICAgICAgIF9mdWxsc2NyZW5BUEkuZXhpdCgpO1xuICAgICAgICB9XG4gICAgICAgIF9mdWxsc2NyZW5BUEkgPSBudWxsO1xuICAgICAgfVxuICAgIH0pO1xuXG5cbiAgICAvLyBjbGVhbiB1cCB0aGluZ3Mgd2hlbiBnYWxsZXJ5IGlzIGRlc3Ryb3llZFxuICAgIF9saXN0ZW4oJ2Rlc3Ryb3knLCBmdW5jdGlvbigpIHtcbiAgICAgIGlmKF9vcHRpb25zLmNhcHRpb25FbCkge1xuICAgICAgICBpZihfZmFrZUNhcHRpb25Db250YWluZXIpIHtcbiAgICAgICAgICBfY29udHJvbHMucmVtb3ZlQ2hpbGQoX2Zha2VDYXB0aW9uQ29udGFpbmVyKTtcbiAgICAgICAgfVxuICAgICAgICBmcmFtZXdvcmsucmVtb3ZlQ2xhc3MoX2NhcHRpb25Db250YWluZXIsICdwc3dwX19jYXB0aW9uLS1lbXB0eScpO1xuICAgICAgfVxuXG4gICAgICBpZihfc2hhcmVNb2RhbCkge1xuICAgICAgICBfc2hhcmVNb2RhbC5jaGlsZHJlblswXS5vbmNsaWNrID0gbnVsbDtcbiAgICAgIH1cbiAgICAgIGZyYW1ld29yay5yZW1vdmVDbGFzcyhfY29udHJvbHMsICdwc3dwX191aS0tb3Zlci1jbG9zZScpO1xuICAgICAgZnJhbWV3b3JrLmFkZENsYXNzKCBfY29udHJvbHMsICdwc3dwX191aS0taGlkZGVuJyk7XG4gICAgICB1aS5zZXRJZGxlKGZhbHNlKTtcbiAgICB9KTtcblxuXG4gICAgaWYoIV9vcHRpb25zLnNob3dBbmltYXRpb25EdXJhdGlvbikge1xuICAgICAgZnJhbWV3b3JrLnJlbW92ZUNsYXNzKCBfY29udHJvbHMsICdwc3dwX191aS0taGlkZGVuJyk7XG4gICAgfVxuICAgIF9saXN0ZW4oJ2luaXRpYWxab29tSW4nLCBmdW5jdGlvbigpIHtcbiAgICAgIGlmKF9vcHRpb25zLnNob3dBbmltYXRpb25EdXJhdGlvbikge1xuICAgICAgICBmcmFtZXdvcmsucmVtb3ZlQ2xhc3MoIF9jb250cm9scywgJ3Bzd3BfX3VpLS1oaWRkZW4nKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBfbGlzdGVuKCdpbml0aWFsWm9vbU91dCcsIGZ1bmN0aW9uKCkge1xuICAgICAgZnJhbWV3b3JrLmFkZENsYXNzKCBfY29udHJvbHMsICdwc3dwX191aS0taGlkZGVuJyk7XG4gICAgfSk7XG5cbiAgICBfbGlzdGVuKCdwYXJzZVZlcnRpY2FsTWFyZ2luJywgX2FwcGx5TmF2QmFyR2Fwcyk7XG5cbiAgICBfc2V0dXBVSUVsZW1lbnRzKCk7XG5cbiAgICBpZihfb3B0aW9ucy5zaGFyZUVsICYmIF9zaGFyZUJ1dHRvbiAmJiBfc2hhcmVNb2RhbCkge1xuICAgICAgX3NoYXJlTW9kYWxIaWRkZW4gPSB0cnVlO1xuICAgIH1cblxuICAgIF9jb3VudE51bUl0ZW1zKCk7XG5cbiAgICBfc2V0dXBJZGxlKCk7XG5cbiAgICBfc2V0dXBGdWxsc2NyZWVuQVBJKCk7XG5cbiAgICBfc2V0dXBMb2FkaW5nSW5kaWNhdG9yKCk7XG4gIH07XG5cbiAgdWkuc2V0SWRsZSA9IGZ1bmN0aW9uKGlzSWRsZSkge1xuICAgIF9pc0lkbGUgPSBpc0lkbGU7XG4gICAgX3RvZ2dsZVBzd3BDbGFzcyhfY29udHJvbHMsICd1aS0taWRsZScsIGlzSWRsZSk7XG4gIH07XG5cbiAgdWkudXBkYXRlID0gZnVuY3Rpb24oKSB7XG4gICAgLy8gRG9uJ3QgdXBkYXRlIFVJIGlmIGl0J3MgaGlkZGVuXG4gICAgaWYoX2NvbnRyb2xzVmlzaWJsZSAmJiBwc3dwLmN1cnJJdGVtKSB7XG5cbiAgICAgIHVpLnVwZGF0ZUluZGV4SW5kaWNhdG9yKCk7XG5cbiAgICAgIGlmKF9vcHRpb25zLmNhcHRpb25FbCkge1xuICAgICAgICBfb3B0aW9ucy5hZGRDYXB0aW9uSFRNTEZuKHBzd3AuY3Vyckl0ZW0sIF9jYXB0aW9uQ29udGFpbmVyKTtcblxuICAgICAgICBfdG9nZ2xlUHN3cENsYXNzKF9jYXB0aW9uQ29udGFpbmVyLCAnY2FwdGlvbi0tZW1wdHknLCAhcHN3cC5jdXJySXRlbS50aXRsZSk7XG4gICAgICB9XG5cbiAgICAgIF9vdmVybGF5VUlVcGRhdGVkID0gdHJ1ZTtcblxuICAgIH0gZWxzZSB7XG4gICAgICBfb3ZlcmxheVVJVXBkYXRlZCA9IGZhbHNlO1xuICAgIH1cblxuICAgIGlmKCFfc2hhcmVNb2RhbEhpZGRlbikge1xuICAgICAgX3RvZ2dsZVNoYXJlTW9kYWwoKTtcbiAgICB9XG5cbiAgICBfY291bnROdW1JdGVtcygpO1xuICB9O1xuXG4gIHVpLnVwZGF0ZUZ1bGxzY3JlZW4gPSBmdW5jdGlvbihlKSB7XG5cbiAgICBpZihlKSB7XG4gICAgICAvLyBzb21lIGJyb3dzZXJzIGNoYW5nZSB3aW5kb3cgc2Nyb2xsIHBvc2l0aW9uIGR1cmluZyB0aGUgZnVsbHNjcmVlblxuICAgICAgLy8gc28gUGhvdG9Td2lwZSB1cGRhdGVzIGl0IGp1c3QgaW4gY2FzZVxuICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgcHN3cC5zZXRTY3JvbGxPZmZzZXQoIDAsIGZyYW1ld29yay5nZXRTY3JvbGxZKCkgKTtcbiAgICAgIH0sIDUwKTtcbiAgICB9XG5cbiAgICAvLyB0b29nbGUgcHN3cC0tZnMgY2xhc3Mgb24gcm9vdCBlbGVtZW50XG4gICAgZnJhbWV3b3JrWyAoX2Z1bGxzY3JlbkFQSS5pc0Z1bGxzY3JlZW4oKSA/ICdhZGQnIDogJ3JlbW92ZScpICsgJ0NsYXNzJyBdKHBzd3AudGVtcGxhdGUsICdwc3dwLS1mcycpO1xuICB9O1xuXG4gIHVpLnVwZGF0ZUluZGV4SW5kaWNhdG9yID0gZnVuY3Rpb24oKSB7XG4gICAgaWYoX29wdGlvbnMuY291bnRlckVsKSB7XG4gICAgICBfaW5kZXhJbmRpY2F0b3IuaW5uZXJIVE1MID0gKHBzd3AuZ2V0Q3VycmVudEluZGV4KCkrMSkgK1xuICAgICAgICAgICAgICAgICAgICBfb3B0aW9ucy5pbmRleEluZGljYXRvclNlcCArXG4gICAgICAgICAgICAgICAgICAgIF9vcHRpb25zLmdldE51bUl0ZW1zRm4oKTtcbiAgICB9XG4gIH07XG5cbiAgdWkub25HbG9iYWxUYXAgPSBmdW5jdGlvbihlKSB7XG4gICAgZSA9IGUgfHwgd2luZG93LmV2ZW50O1xuICAgIHZhciB0YXJnZXQgPSBlLnRhcmdldCB8fCBlLnNyY0VsZW1lbnQ7XG5cbiAgICBpZihfYmxvY2tDb250cm9sc1RhcCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmKGUuZGV0YWlsICYmIGUuZGV0YWlsLnBvaW50ZXJUeXBlID09PSAnbW91c2UnKSB7XG5cbiAgICAgIC8vIGNsb3NlIGdhbGxlcnkgaWYgY2xpY2tlZCBvdXRzaWRlIG9mIHRoZSBpbWFnZVxuICAgICAgaWYoX2hhc0Nsb3NlQ2xhc3ModGFyZ2V0KSkge1xuICAgICAgICBwc3dwLmNsb3NlKCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYoZnJhbWV3b3JrLmhhc0NsYXNzKHRhcmdldCwgJ3Bzd3BfX2ltZycpKSB7XG4gICAgICAgIGlmKHBzd3AuZ2V0Wm9vbUxldmVsKCkgPT09IDEgJiYgcHN3cC5nZXRab29tTGV2ZWwoKSA8PSBwc3dwLmN1cnJJdGVtLmZpdFJhdGlvKSB7XG4gICAgICAgICAgaWYoX29wdGlvbnMuY2xpY2tUb0Nsb3NlTm9uWm9vbWFibGUpIHtcbiAgICAgICAgICAgIHBzd3AuY2xvc2UoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcHN3cC50b2dnbGVEZXNrdG9wWm9vbShlLmRldGFpbC5yZWxlYXNlUG9pbnQpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICB9IGVsc2Uge1xuXG4gICAgICAvLyB0YXAgYW55d2hlcmUgKGV4Y2VwdCBidXR0b25zKSB0byB0b2dnbGUgdmlzaWJpbGl0eSBvZiBjb250cm9sc1xuICAgICAgaWYoX29wdGlvbnMudGFwVG9Ub2dnbGVDb250cm9scykge1xuICAgICAgICBpZihfY29udHJvbHNWaXNpYmxlKSB7XG4gICAgICAgICAgdWkuaGlkZUNvbnRyb2xzKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdWkuc2hvd0NvbnRyb2xzKCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gdGFwIHRvIGNsb3NlIGdhbGxlcnlcbiAgICAgIGlmKF9vcHRpb25zLnRhcFRvQ2xvc2UgJiYgKGZyYW1ld29yay5oYXNDbGFzcyh0YXJnZXQsICdwc3dwX19pbWcnKSB8fCBfaGFzQ2xvc2VDbGFzcyh0YXJnZXQpKSApIHtcbiAgICAgICAgcHN3cC5jbG9zZSgpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICB9XG4gIH07XG4gIHVpLm9uTW91c2VPdmVyID0gZnVuY3Rpb24oZSkge1xuICAgIGUgPSBlIHx8IHdpbmRvdy5ldmVudDtcbiAgICB2YXIgdGFyZ2V0ID0gZS50YXJnZXQgfHwgZS5zcmNFbGVtZW50O1xuXG4gICAgLy8gYWRkIGNsYXNzIHdoZW4gbW91c2UgaXMgb3ZlciBhbiBlbGVtZW50IHRoYXQgc2hvdWxkIGNsb3NlIHRoZSBnYWxsZXJ5XG4gICAgX3RvZ2dsZVBzd3BDbGFzcyhfY29udHJvbHMsICd1aS0tb3Zlci1jbG9zZScsIF9oYXNDbG9zZUNsYXNzKHRhcmdldCkpO1xuICB9O1xuXG4gIHVpLmhpZGVDb250cm9scyA9IGZ1bmN0aW9uKCkge1xuICAgIGZyYW1ld29yay5hZGRDbGFzcyhfY29udHJvbHMsJ3Bzd3BfX3VpLS1oaWRkZW4nKTtcbiAgICBfY29udHJvbHNWaXNpYmxlID0gZmFsc2U7XG4gIH07XG5cbiAgdWkuc2hvd0NvbnRyb2xzID0gZnVuY3Rpb24oKSB7XG4gICAgX2NvbnRyb2xzVmlzaWJsZSA9IHRydWU7XG4gICAgaWYoIV9vdmVybGF5VUlVcGRhdGVkKSB7XG4gICAgICB1aS51cGRhdGUoKTtcbiAgICB9XG4gICAgZnJhbWV3b3JrLnJlbW92ZUNsYXNzKF9jb250cm9scywncHN3cF9fdWktLWhpZGRlbicpO1xuICB9O1xuXG4gIHVpLnN1cHBvcnRzRnVsbHNjcmVlbiA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBkID0gZG9jdW1lbnQ7XG4gICAgcmV0dXJuICEhKGQuZXhpdEZ1bGxzY3JlZW4gfHwgZC5tb3pDYW5jZWxGdWxsU2NyZWVuIHx8IGQud2Via2l0RXhpdEZ1bGxzY3JlZW4gfHwgZC5tc0V4aXRGdWxsc2NyZWVuKTtcbiAgfTtcblxuICB1aS5nZXRGdWxsc2NyZWVuQVBJID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGRFID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LFxuICAgICAgYXBpLFxuICAgICAgdEYgPSAnZnVsbHNjcmVlbmNoYW5nZSc7XG5cbiAgICBpZiAoZEUucmVxdWVzdEZ1bGxzY3JlZW4pIHtcbiAgICAgIGFwaSA9IHtcbiAgICAgICAgZW50ZXJLOiAncmVxdWVzdEZ1bGxzY3JlZW4nLFxuICAgICAgICBleGl0SzogJ2V4aXRGdWxsc2NyZWVuJyxcbiAgICAgICAgZWxlbWVudEs6ICdmdWxsc2NyZWVuRWxlbWVudCcsXG4gICAgICAgIGV2ZW50SzogdEZcbiAgICAgIH07XG5cbiAgICB9IGVsc2UgaWYoZEUubW96UmVxdWVzdEZ1bGxTY3JlZW4gKSB7XG4gICAgICBhcGkgPSB7XG4gICAgICAgIGVudGVySzogJ21velJlcXVlc3RGdWxsU2NyZWVuJyxcbiAgICAgICAgZXhpdEs6ICdtb3pDYW5jZWxGdWxsU2NyZWVuJyxcbiAgICAgICAgZWxlbWVudEs6ICdtb3pGdWxsU2NyZWVuRWxlbWVudCcsXG4gICAgICAgIGV2ZW50SzogJ21veicgKyB0RlxuICAgICAgfTtcblxuXG5cbiAgICB9IGVsc2UgaWYoZEUud2Via2l0UmVxdWVzdEZ1bGxzY3JlZW4pIHtcbiAgICAgIGFwaSA9IHtcbiAgICAgICAgZW50ZXJLOiAnd2Via2l0UmVxdWVzdEZ1bGxzY3JlZW4nLFxuICAgICAgICBleGl0SzogJ3dlYmtpdEV4aXRGdWxsc2NyZWVuJyxcbiAgICAgICAgZWxlbWVudEs6ICd3ZWJraXRGdWxsc2NyZWVuRWxlbWVudCcsXG4gICAgICAgIGV2ZW50SzogJ3dlYmtpdCcgKyB0RlxuICAgICAgfTtcblxuICAgIH0gZWxzZSBpZihkRS5tc1JlcXVlc3RGdWxsc2NyZWVuKSB7XG4gICAgICBhcGkgPSB7XG4gICAgICAgIGVudGVySzogJ21zUmVxdWVzdEZ1bGxzY3JlZW4nLFxuICAgICAgICBleGl0SzogJ21zRXhpdEZ1bGxzY3JlZW4nLFxuICAgICAgICBlbGVtZW50SzogJ21zRnVsbHNjcmVlbkVsZW1lbnQnLFxuICAgICAgICBldmVudEs6ICdNU0Z1bGxzY3JlZW5DaGFuZ2UnXG4gICAgICB9O1xuICAgIH1cblxuICAgIGlmKGFwaSkge1xuICAgICAgYXBpLmVudGVyID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIC8vIGRpc2FibGUgY2xvc2Utb24tc2Nyb2xsIGluIGZ1bGxzY3JlZW5cbiAgICAgICAgX2luaXRhbENsb3NlT25TY3JvbGxWYWx1ZSA9IF9vcHRpb25zLmNsb3NlT25TY3JvbGw7XG4gICAgICAgIF9vcHRpb25zLmNsb3NlT25TY3JvbGwgPSBmYWxzZTtcblxuICAgICAgICBpZih0aGlzLmVudGVySyA9PT0gJ3dlYmtpdFJlcXVlc3RGdWxsc2NyZWVuJykge1xuICAgICAgICAgIHBzd3AudGVtcGxhdGVbdGhpcy5lbnRlcktdKCBFbGVtZW50LkFMTE9XX0tFWUJPQVJEX0lOUFVUICk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIHBzd3AudGVtcGxhdGVbdGhpcy5lbnRlcktdKCk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBhcGkuZXhpdCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBfb3B0aW9ucy5jbG9zZU9uU2Nyb2xsID0gX2luaXRhbENsb3NlT25TY3JvbGxWYWx1ZTtcblxuICAgICAgICByZXR1cm4gZG9jdW1lbnRbdGhpcy5leGl0S10oKTtcblxuICAgICAgfTtcbiAgICAgIGFwaS5pc0Z1bGxzY3JlZW4gPSBmdW5jdGlvbigpIHsgcmV0dXJuIGRvY3VtZW50W3RoaXMuZWxlbWVudEtdOyB9O1xuICAgIH1cblxuICAgIHJldHVybiBhcGk7XG4gIH07XG5cblxuXG59O1xucmV0dXJuIFBob3RvU3dpcGVVSV9EZWZhdWx0O1xuXG5cbn0pO1xuIiwiLyohIFBob3RvU3dpcGUgLSB2NC4xLjEgLSAyMDE1LTEyLTI0XG4qIGh0dHA6Ly9waG90b3N3aXBlLmNvbVxuKiBDb3B5cmlnaHQgKGMpIDIwMTUgRG1pdHJ5IFNlbWVub3Y7ICovXG4oZnVuY3Rpb24gKHJvb3QsIGZhY3RvcnkpIHsgXG5cdGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcblx0XHRkZWZpbmUoZmFjdG9yeSk7XG5cdH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7XG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG5cdH0gZWxzZSB7XG5cdFx0cm9vdC5QaG90b1N3aXBlID0gZmFjdG9yeSgpO1xuXHR9XG59KSh0aGlzLCBmdW5jdGlvbiAoKSB7XG5cblx0J3VzZSBzdHJpY3QnO1xuXHR2YXIgUGhvdG9Td2lwZSA9IGZ1bmN0aW9uKHRlbXBsYXRlLCBVaUNsYXNzLCBpdGVtcywgb3B0aW9ucyl7XG5cbi8qPj5mcmFtZXdvcmstYnJpZGdlKi9cbi8qKlxuICpcbiAqIFNldCBvZiBnZW5lcmljIGZ1bmN0aW9ucyB1c2VkIGJ5IGdhbGxlcnkuXG4gKiBcbiAqIFlvdSdyZSBmcmVlIHRvIG1vZGlmeSBhbnl0aGluZyBoZXJlIGFzIGxvbmcgYXMgZnVuY3Rpb25hbGl0eSBpcyBrZXB0LlxuICogXG4gKi9cbnZhciBmcmFtZXdvcmsgPSB7XG5cdGZlYXR1cmVzOiBudWxsLFxuXHRiaW5kOiBmdW5jdGlvbih0YXJnZXQsIHR5cGUsIGxpc3RlbmVyLCB1bmJpbmQpIHtcblx0XHR2YXIgbWV0aG9kTmFtZSA9ICh1bmJpbmQgPyAncmVtb3ZlJyA6ICdhZGQnKSArICdFdmVudExpc3RlbmVyJztcblx0XHR0eXBlID0gdHlwZS5zcGxpdCgnICcpO1xuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCB0eXBlLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRpZih0eXBlW2ldKSB7XG5cdFx0XHRcdHRhcmdldFttZXRob2ROYW1lXSggdHlwZVtpXSwgbGlzdGVuZXIsIGZhbHNlKTtcblx0XHRcdH1cblx0XHR9XG5cdH0sXG5cdGlzQXJyYXk6IGZ1bmN0aW9uKG9iaikge1xuXHRcdHJldHVybiAob2JqIGluc3RhbmNlb2YgQXJyYXkpO1xuXHR9LFxuXHRjcmVhdGVFbDogZnVuY3Rpb24oY2xhc3NlcywgdGFnKSB7XG5cdFx0dmFyIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0YWcgfHwgJ2RpdicpO1xuXHRcdGlmKGNsYXNzZXMpIHtcblx0XHRcdGVsLmNsYXNzTmFtZSA9IGNsYXNzZXM7XG5cdFx0fVxuXHRcdHJldHVybiBlbDtcblx0fSxcblx0Z2V0U2Nyb2xsWTogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIHlPZmZzZXQgPSB3aW5kb3cucGFnZVlPZmZzZXQ7XG5cdFx0cmV0dXJuIHlPZmZzZXQgIT09IHVuZGVmaW5lZCA/IHlPZmZzZXQgOiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wO1xuXHR9LFxuXHR1bmJpbmQ6IGZ1bmN0aW9uKHRhcmdldCwgdHlwZSwgbGlzdGVuZXIpIHtcblx0XHRmcmFtZXdvcmsuYmluZCh0YXJnZXQsdHlwZSxsaXN0ZW5lcix0cnVlKTtcblx0fSxcblx0cmVtb3ZlQ2xhc3M6IGZ1bmN0aW9uKGVsLCBjbGFzc05hbWUpIHtcblx0XHR2YXIgcmVnID0gbmV3IFJlZ0V4cCgnKFxcXFxzfF4pJyArIGNsYXNzTmFtZSArICcoXFxcXHN8JCknKTtcblx0XHRlbC5jbGFzc05hbWUgPSBlbC5jbGFzc05hbWUucmVwbGFjZShyZWcsICcgJykucmVwbGFjZSgvXlxcc1xccyovLCAnJykucmVwbGFjZSgvXFxzXFxzKiQvLCAnJyk7IFxuXHR9LFxuXHRhZGRDbGFzczogZnVuY3Rpb24oZWwsIGNsYXNzTmFtZSkge1xuXHRcdGlmKCAhZnJhbWV3b3JrLmhhc0NsYXNzKGVsLGNsYXNzTmFtZSkgKSB7XG5cdFx0XHRlbC5jbGFzc05hbWUgKz0gKGVsLmNsYXNzTmFtZSA/ICcgJyA6ICcnKSArIGNsYXNzTmFtZTtcblx0XHR9XG5cdH0sXG5cdGhhc0NsYXNzOiBmdW5jdGlvbihlbCwgY2xhc3NOYW1lKSB7XG5cdFx0cmV0dXJuIGVsLmNsYXNzTmFtZSAmJiBuZXcgUmVnRXhwKCcoXnxcXFxccyknICsgY2xhc3NOYW1lICsgJyhcXFxcc3wkKScpLnRlc3QoZWwuY2xhc3NOYW1lKTtcblx0fSxcblx0Z2V0Q2hpbGRCeUNsYXNzOiBmdW5jdGlvbihwYXJlbnRFbCwgY2hpbGRDbGFzc05hbWUpIHtcblx0XHR2YXIgbm9kZSA9IHBhcmVudEVsLmZpcnN0Q2hpbGQ7XG5cdFx0d2hpbGUobm9kZSkge1xuXHRcdFx0aWYoIGZyYW1ld29yay5oYXNDbGFzcyhub2RlLCBjaGlsZENsYXNzTmFtZSkgKSB7XG5cdFx0XHRcdHJldHVybiBub2RlO1xuXHRcdFx0fVxuXHRcdFx0bm9kZSA9IG5vZGUubmV4dFNpYmxpbmc7XG5cdFx0fVxuXHR9LFxuXHRhcnJheVNlYXJjaDogZnVuY3Rpb24oYXJyYXksIHZhbHVlLCBrZXkpIHtcblx0XHR2YXIgaSA9IGFycmF5Lmxlbmd0aDtcblx0XHR3aGlsZShpLS0pIHtcblx0XHRcdGlmKGFycmF5W2ldW2tleV0gPT09IHZhbHVlKSB7XG5cdFx0XHRcdHJldHVybiBpO1xuXHRcdFx0fSBcblx0XHR9XG5cdFx0cmV0dXJuIC0xO1xuXHR9LFxuXHRleHRlbmQ6IGZ1bmN0aW9uKG8xLCBvMiwgcHJldmVudE92ZXJ3cml0ZSkge1xuXHRcdGZvciAodmFyIHByb3AgaW4gbzIpIHtcblx0XHRcdGlmIChvMi5oYXNPd25Qcm9wZXJ0eShwcm9wKSkge1xuXHRcdFx0XHRpZihwcmV2ZW50T3ZlcndyaXRlICYmIG8xLmhhc093blByb3BlcnR5KHByb3ApKSB7XG5cdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdH1cblx0XHRcdFx0bzFbcHJvcF0gPSBvMltwcm9wXTtcblx0XHRcdH1cblx0XHR9XG5cdH0sXG5cdGVhc2luZzoge1xuXHRcdHNpbmU6IHtcblx0XHRcdG91dDogZnVuY3Rpb24oaykge1xuXHRcdFx0XHRyZXR1cm4gTWF0aC5zaW4oayAqIChNYXRoLlBJIC8gMikpO1xuXHRcdFx0fSxcblx0XHRcdGluT3V0OiBmdW5jdGlvbihrKSB7XG5cdFx0XHRcdHJldHVybiAtIChNYXRoLmNvcyhNYXRoLlBJICogaykgLSAxKSAvIDI7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRjdWJpYzoge1xuXHRcdFx0b3V0OiBmdW5jdGlvbihrKSB7XG5cdFx0XHRcdHJldHVybiAtLWsgKiBrICogayArIDE7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdC8qXG5cdFx0XHRlbGFzdGljOiB7XG5cdFx0XHRcdG91dDogZnVuY3Rpb24gKCBrICkge1xuXG5cdFx0XHRcdFx0dmFyIHMsIGEgPSAwLjEsIHAgPSAwLjQ7XG5cdFx0XHRcdFx0aWYgKCBrID09PSAwICkgcmV0dXJuIDA7XG5cdFx0XHRcdFx0aWYgKCBrID09PSAxICkgcmV0dXJuIDE7XG5cdFx0XHRcdFx0aWYgKCAhYSB8fCBhIDwgMSApIHsgYSA9IDE7IHMgPSBwIC8gNDsgfVxuXHRcdFx0XHRcdGVsc2UgcyA9IHAgKiBNYXRoLmFzaW4oIDEgLyBhICkgLyAoIDIgKiBNYXRoLlBJICk7XG5cdFx0XHRcdFx0cmV0dXJuICggYSAqIE1hdGgucG93KCAyLCAtIDEwICogaykgKiBNYXRoLnNpbiggKCBrIC0gcyApICogKCAyICogTWF0aC5QSSApIC8gcCApICsgMSApO1xuXG5cdFx0XHRcdH0sXG5cdFx0XHR9LFxuXHRcdFx0YmFjazoge1xuXHRcdFx0XHRvdXQ6IGZ1bmN0aW9uICggayApIHtcblx0XHRcdFx0XHR2YXIgcyA9IDEuNzAxNTg7XG5cdFx0XHRcdFx0cmV0dXJuIC0tayAqIGsgKiAoICggcyArIDEgKSAqIGsgKyBzICkgKyAxO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0Ki9cblx0fSxcblxuXHQvKipcblx0ICogXG5cdCAqIEByZXR1cm4ge29iamVjdH1cblx0ICogXG5cdCAqIHtcblx0ICogIHJhZiA6IHJlcXVlc3QgYW5pbWF0aW9uIGZyYW1lIGZ1bmN0aW9uXG5cdCAqICBjYWYgOiBjYW5jZWwgYW5pbWF0aW9uIGZyYW1lIGZ1bmN0aW9uXG5cdCAqICB0cmFuc2Zyb20gOiB0cmFuc2Zvcm0gcHJvcGVydHkga2V5ICh3aXRoIHZlbmRvciksIG9yIG51bGwgaWYgbm90IHN1cHBvcnRlZFxuXHQgKiAgb2xkSUUgOiBJRTggb3IgYmVsb3dcblx0ICogfVxuXHQgKiBcblx0ICovXG5cdGRldGVjdEZlYXR1cmVzOiBmdW5jdGlvbigpIHtcblx0XHRpZihmcmFtZXdvcmsuZmVhdHVyZXMpIHtcblx0XHRcdHJldHVybiBmcmFtZXdvcmsuZmVhdHVyZXM7XG5cdFx0fVxuXHRcdHZhciBoZWxwZXJFbCA9IGZyYW1ld29yay5jcmVhdGVFbCgpLFxuXHRcdFx0aGVscGVyU3R5bGUgPSBoZWxwZXJFbC5zdHlsZSxcblx0XHRcdHZlbmRvciA9ICcnLFxuXHRcdFx0ZmVhdHVyZXMgPSB7fTtcblxuXHRcdC8vIElFOCBhbmQgYmVsb3dcblx0XHRmZWF0dXJlcy5vbGRJRSA9IGRvY3VtZW50LmFsbCAmJiAhZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcjtcblxuXHRcdGZlYXR1cmVzLnRvdWNoID0gJ29udG91Y2hzdGFydCcgaW4gd2luZG93O1xuXG5cdFx0aWYod2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSkge1xuXHRcdFx0ZmVhdHVyZXMucmFmID0gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZTtcblx0XHRcdGZlYXR1cmVzLmNhZiA9IHdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZTtcblx0XHR9XG5cblx0XHRmZWF0dXJlcy5wb2ludGVyRXZlbnQgPSBuYXZpZ2F0b3IucG9pbnRlckVuYWJsZWQgfHwgbmF2aWdhdG9yLm1zUG9pbnRlckVuYWJsZWQ7XG5cblx0XHQvLyBmaXggZmFsc2UtcG9zaXRpdmUgZGV0ZWN0aW9uIG9mIG9sZCBBbmRyb2lkIGluIG5ldyBJRVxuXHRcdC8vIChJRTExIHVhIHN0cmluZyBjb250YWlucyBcIkFuZHJvaWQgNC4wXCIpXG5cdFx0XG5cdFx0aWYoIWZlYXR1cmVzLnBvaW50ZXJFdmVudCkgeyBcblxuXHRcdFx0dmFyIHVhID0gbmF2aWdhdG9yLnVzZXJBZ2VudDtcblxuXHRcdFx0Ly8gRGV0ZWN0IGlmIGRldmljZSBpcyBpUGhvbmUgb3IgaVBvZCBhbmQgaWYgaXQncyBvbGRlciB0aGFuIGlPUyA4XG5cdFx0XHQvLyBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8xNDIyMzkyMFxuXHRcdFx0Ly8gXG5cdFx0XHQvLyBUaGlzIGRldGVjdGlvbiBpcyBtYWRlIGJlY2F1c2Ugb2YgYnVnZ3kgdG9wL2JvdHRvbSB0b29sYmFyc1xuXHRcdFx0Ly8gdGhhdCBkb24ndCB0cmlnZ2VyIHdpbmRvdy5yZXNpemUgZXZlbnQuXG5cdFx0XHQvLyBGb3IgbW9yZSBpbmZvIHJlZmVyIHRvIF9pc0ZpeGVkUG9zaXRpb24gdmFyaWFibGUgaW4gY29yZS5qc1xuXG5cdFx0XHRpZiAoL2lQKGhvbmV8b2QpLy50ZXN0KG5hdmlnYXRvci5wbGF0Zm9ybSkpIHtcblx0XHRcdFx0dmFyIHYgPSAobmF2aWdhdG9yLmFwcFZlcnNpb24pLm1hdGNoKC9PUyAoXFxkKylfKFxcZCspXz8oXFxkKyk/Lyk7XG5cdFx0XHRcdGlmKHYgJiYgdi5sZW5ndGggPiAwKSB7XG5cdFx0XHRcdFx0diA9IHBhcnNlSW50KHZbMV0sIDEwKTtcblx0XHRcdFx0XHRpZih2ID49IDEgJiYgdiA8IDggKSB7XG5cdFx0XHRcdFx0XHRmZWF0dXJlcy5pc09sZElPU1Bob25lID0gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gRGV0ZWN0IG9sZCBBbmRyb2lkIChiZWZvcmUgS2l0S2F0KVxuXHRcdFx0Ly8gZHVlIHRvIGJ1Z3MgcmVsYXRlZCB0byBwb3NpdGlvbjpmaXhlZFxuXHRcdFx0Ly8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy83MTg0NTczL3BpY2stdXAtdGhlLWFuZHJvaWQtdmVyc2lvbi1pbi10aGUtYnJvd3Nlci1ieS1qYXZhc2NyaXB0XG5cdFx0XHRcblx0XHRcdHZhciBtYXRjaCA9IHVhLm1hdGNoKC9BbmRyb2lkXFxzKFswLTlcXC5dKikvKTtcblx0XHRcdHZhciBhbmRyb2lkdmVyc2lvbiA9ICBtYXRjaCA/IG1hdGNoWzFdIDogMDtcblx0XHRcdGFuZHJvaWR2ZXJzaW9uID0gcGFyc2VGbG9hdChhbmRyb2lkdmVyc2lvbik7XG5cdFx0XHRpZihhbmRyb2lkdmVyc2lvbiA+PSAxICkge1xuXHRcdFx0XHRpZihhbmRyb2lkdmVyc2lvbiA8IDQuNCkge1xuXHRcdFx0XHRcdGZlYXR1cmVzLmlzT2xkQW5kcm9pZCA9IHRydWU7IC8vIGZvciBmaXhlZCBwb3NpdGlvbiBidWcgJiBwZXJmb3JtYW5jZVxuXHRcdFx0XHR9XG5cdFx0XHRcdGZlYXR1cmVzLmFuZHJvaWRWZXJzaW9uID0gYW5kcm9pZHZlcnNpb247IC8vIGZvciB0b3VjaGVuZCBidWdcblx0XHRcdH1cdFxuXHRcdFx0ZmVhdHVyZXMuaXNNb2JpbGVPcGVyYSA9IC9vcGVyYSBtaW5pfG9wZXJhIG1vYmkvaS50ZXN0KHVhKTtcblxuXHRcdFx0Ly8gcC5zLiB5ZXMsIHllcywgVUEgc25pZmZpbmcgaXMgYmFkLCBwcm9wb3NlIHlvdXIgc29sdXRpb24gZm9yIGFib3ZlIGJ1Z3MuXG5cdFx0fVxuXHRcdFxuXHRcdHZhciBzdHlsZUNoZWNrcyA9IFsndHJhbnNmb3JtJywgJ3BlcnNwZWN0aXZlJywgJ2FuaW1hdGlvbk5hbWUnXSxcblx0XHRcdHZlbmRvcnMgPSBbJycsICd3ZWJraXQnLCdNb3onLCdtcycsJ08nXSxcblx0XHRcdHN0eWxlQ2hlY2tJdGVtLFxuXHRcdFx0c3R5bGVOYW1lO1xuXG5cdFx0Zm9yKHZhciBpID0gMDsgaSA8IDQ7IGkrKykge1xuXHRcdFx0dmVuZG9yID0gdmVuZG9yc1tpXTtcblxuXHRcdFx0Zm9yKHZhciBhID0gMDsgYSA8IDM7IGErKykge1xuXHRcdFx0XHRzdHlsZUNoZWNrSXRlbSA9IHN0eWxlQ2hlY2tzW2FdO1xuXG5cdFx0XHRcdC8vIHVwcGVyY2FzZSBmaXJzdCBsZXR0ZXIgb2YgcHJvcGVydHkgbmFtZSwgaWYgdmVuZG9yIGlzIHByZXNlbnRcblx0XHRcdFx0c3R5bGVOYW1lID0gdmVuZG9yICsgKHZlbmRvciA/IFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRzdHlsZUNoZWNrSXRlbS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHN0eWxlQ2hlY2tJdGVtLnNsaWNlKDEpIDogXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHN0eWxlQ2hlY2tJdGVtKTtcblx0XHRcdFxuXHRcdFx0XHRpZighZmVhdHVyZXNbc3R5bGVDaGVja0l0ZW1dICYmIHN0eWxlTmFtZSBpbiBoZWxwZXJTdHlsZSApIHtcblx0XHRcdFx0XHRmZWF0dXJlc1tzdHlsZUNoZWNrSXRlbV0gPSBzdHlsZU5hbWU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0aWYodmVuZG9yICYmICFmZWF0dXJlcy5yYWYpIHtcblx0XHRcdFx0dmVuZG9yID0gdmVuZG9yLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRcdGZlYXR1cmVzLnJhZiA9IHdpbmRvd1t2ZW5kb3IrJ1JlcXVlc3RBbmltYXRpb25GcmFtZSddO1xuXHRcdFx0XHRpZihmZWF0dXJlcy5yYWYpIHtcblx0XHRcdFx0XHRmZWF0dXJlcy5jYWYgPSB3aW5kb3dbdmVuZG9yKydDYW5jZWxBbmltYXRpb25GcmFtZSddIHx8IFxuXHRcdFx0XHRcdFx0XHRcdFx0d2luZG93W3ZlbmRvcisnQ2FuY2VsUmVxdWVzdEFuaW1hdGlvbkZyYW1lJ107XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdFx0XHRcblx0XHRpZighZmVhdHVyZXMucmFmKSB7XG5cdFx0XHR2YXIgbGFzdFRpbWUgPSAwO1xuXHRcdFx0ZmVhdHVyZXMucmFmID0gZnVuY3Rpb24oZm4pIHtcblx0XHRcdFx0dmFyIGN1cnJUaW1lID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XG5cdFx0XHRcdHZhciB0aW1lVG9DYWxsID0gTWF0aC5tYXgoMCwgMTYgLSAoY3VyclRpbWUgLSBsYXN0VGltZSkpO1xuXHRcdFx0XHR2YXIgaWQgPSB3aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbigpIHsgZm4oY3VyclRpbWUgKyB0aW1lVG9DYWxsKTsgfSwgdGltZVRvQ2FsbCk7XG5cdFx0XHRcdGxhc3RUaW1lID0gY3VyclRpbWUgKyB0aW1lVG9DYWxsO1xuXHRcdFx0XHRyZXR1cm4gaWQ7XG5cdFx0XHR9O1xuXHRcdFx0ZmVhdHVyZXMuY2FmID0gZnVuY3Rpb24oaWQpIHsgY2xlYXJUaW1lb3V0KGlkKTsgfTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgU1ZHIHN1cHBvcnRcblx0XHRmZWF0dXJlcy5zdmcgPSAhIWRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyAmJiBcblx0XHRcdFx0XHRcdCEhZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKCdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycsICdzdmcnKS5jcmVhdGVTVkdSZWN0O1xuXG5cdFx0ZnJhbWV3b3JrLmZlYXR1cmVzID0gZmVhdHVyZXM7XG5cblx0XHRyZXR1cm4gZmVhdHVyZXM7XG5cdH1cbn07XG5cbmZyYW1ld29yay5kZXRlY3RGZWF0dXJlcygpO1xuXG4vLyBPdmVycmlkZSBhZGRFdmVudExpc3RlbmVyIGZvciBvbGQgdmVyc2lvbnMgb2YgSUVcbmlmKGZyYW1ld29yay5mZWF0dXJlcy5vbGRJRSkge1xuXG5cdGZyYW1ld29yay5iaW5kID0gZnVuY3Rpb24odGFyZ2V0LCB0eXBlLCBsaXN0ZW5lciwgdW5iaW5kKSB7XG5cdFx0XG5cdFx0dHlwZSA9IHR5cGUuc3BsaXQoJyAnKTtcblxuXHRcdHZhciBtZXRob2ROYW1lID0gKHVuYmluZCA/ICdkZXRhY2gnIDogJ2F0dGFjaCcpICsgJ0V2ZW50Jyxcblx0XHRcdGV2TmFtZSxcblx0XHRcdF9oYW5kbGVFdiA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRsaXN0ZW5lci5oYW5kbGVFdmVudC5jYWxsKGxpc3RlbmVyKTtcblx0XHRcdH07XG5cblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdHlwZS5sZW5ndGg7IGkrKykge1xuXHRcdFx0ZXZOYW1lID0gdHlwZVtpXTtcblx0XHRcdGlmKGV2TmFtZSkge1xuXG5cdFx0XHRcdGlmKHR5cGVvZiBsaXN0ZW5lciA9PT0gJ29iamVjdCcgJiYgbGlzdGVuZXIuaGFuZGxlRXZlbnQpIHtcblx0XHRcdFx0XHRpZighdW5iaW5kKSB7XG5cdFx0XHRcdFx0XHRsaXN0ZW5lclsnb2xkSUUnICsgZXZOYW1lXSA9IF9oYW5kbGVFdjtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0aWYoIWxpc3RlbmVyWydvbGRJRScgKyBldk5hbWVdKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHR0YXJnZXRbbWV0aG9kTmFtZV0oICdvbicgKyBldk5hbWUsIGxpc3RlbmVyWydvbGRJRScgKyBldk5hbWVdKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHR0YXJnZXRbbWV0aG9kTmFtZV0oICdvbicgKyBldk5hbWUsIGxpc3RlbmVyKTtcblx0XHRcdFx0fVxuXG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXHRcbn1cblxuLyo+PmZyYW1ld29yay1icmlkZ2UqL1xuXG4vKj4+Y29yZSovXG4vL2Z1bmN0aW9uKHRlbXBsYXRlLCBVaUNsYXNzLCBpdGVtcywgb3B0aW9ucylcblxudmFyIHNlbGYgPSB0aGlzO1xuXG4vKipcbiAqIFN0YXRpYyB2YXJzLCBkb24ndCBjaGFuZ2UgdW5sZXNzIHlvdSBrbm93IHdoYXQgeW91J3JlIGRvaW5nLlxuICovXG52YXIgRE9VQkxFX1RBUF9SQURJVVMgPSAyNSwgXG5cdE5VTV9IT0xERVJTID0gMztcblxuLyoqXG4gKiBPcHRpb25zXG4gKi9cbnZhciBfb3B0aW9ucyA9IHtcblx0YWxsb3dQYW5Ub05leHQ6dHJ1ZSxcblx0c3BhY2luZzogMC4xMixcblx0YmdPcGFjaXR5OiAxLFxuXHRtb3VzZVVzZWQ6IGZhbHNlLFxuXHRsb29wOiB0cnVlLFxuXHRwaW5jaFRvQ2xvc2U6IHRydWUsXG5cdGNsb3NlT25TY3JvbGw6IHRydWUsXG5cdGNsb3NlT25WZXJ0aWNhbERyYWc6IHRydWUsXG5cdHZlcnRpY2FsRHJhZ1JhbmdlOiAwLjc1LFxuXHRoaWRlQW5pbWF0aW9uRHVyYXRpb246IDMzMyxcblx0c2hvd0FuaW1hdGlvbkR1cmF0aW9uOiAzMzMsXG5cdHNob3dIaWRlT3BhY2l0eTogZmFsc2UsXG5cdGZvY3VzOiB0cnVlLFxuXHRlc2NLZXk6IHRydWUsXG5cdGFycm93S2V5czogdHJ1ZSxcblx0bWFpblNjcm9sbEVuZEZyaWN0aW9uOiAwLjM1LFxuXHRwYW5FbmRGcmljdGlvbjogMC4zNSxcblx0aXNDbGlja2FibGVFbGVtZW50OiBmdW5jdGlvbihlbCkge1xuICAgICAgICByZXR1cm4gZWwudGFnTmFtZSA9PT0gJ0EnO1xuICAgIH0sXG4gICAgZ2V0RG91YmxlVGFwWm9vbTogZnVuY3Rpb24oaXNNb3VzZUNsaWNrLCBpdGVtKSB7XG4gICAgXHRpZihpc01vdXNlQ2xpY2spIHtcbiAgICBcdFx0cmV0dXJuIDE7XG4gICAgXHR9IGVsc2Uge1xuICAgIFx0XHRyZXR1cm4gaXRlbS5pbml0aWFsWm9vbUxldmVsIDwgMC43ID8gMSA6IDEuMzM7XG4gICAgXHR9XG4gICAgfSxcbiAgICBtYXhTcHJlYWRab29tOiAxLjMzLFxuXHRtb2RhbDogdHJ1ZSxcblxuXHQvLyBub3QgZnVsbHkgaW1wbGVtZW50ZWQgeWV0XG5cdHNjYWxlTW9kZTogJ2ZpdCcgLy8gVE9ET1xufTtcbmZyYW1ld29yay5leHRlbmQoX29wdGlvbnMsIG9wdGlvbnMpO1xuXG5cbi8qKlxuICogUHJpdmF0ZSBoZWxwZXIgdmFyaWFibGVzICYgZnVuY3Rpb25zXG4gKi9cblxudmFyIF9nZXRFbXB0eVBvaW50ID0gZnVuY3Rpb24oKSB7IFxuXHRcdHJldHVybiB7eDowLHk6MH07IFxuXHR9O1xuXG52YXIgX2lzT3Blbixcblx0X2lzRGVzdHJveWluZyxcblx0X2Nsb3NlZEJ5U2Nyb2xsLFxuXHRfY3VycmVudEl0ZW1JbmRleCxcblx0X2NvbnRhaW5lclN0eWxlLFxuXHRfY29udGFpbmVyU2hpZnRJbmRleCxcblx0X2N1cnJQYW5EaXN0ID0gX2dldEVtcHR5UG9pbnQoKSxcblx0X3N0YXJ0UGFuT2Zmc2V0ID0gX2dldEVtcHR5UG9pbnQoKSxcblx0X3Bhbk9mZnNldCA9IF9nZXRFbXB0eVBvaW50KCksXG5cdF91cE1vdmVFdmVudHMsIC8vIGRyYWcgbW92ZSwgZHJhZyBlbmQgJiBkcmFnIGNhbmNlbCBldmVudHMgYXJyYXlcblx0X2Rvd25FdmVudHMsIC8vIGRyYWcgc3RhcnQgZXZlbnRzIGFycmF5XG5cdF9nbG9iYWxFdmVudEhhbmRsZXJzLFxuXHRfdmlld3BvcnRTaXplID0ge30sXG5cdF9jdXJyWm9vbUxldmVsLFxuXHRfc3RhcnRab29tTGV2ZWwsXG5cdF90cmFuc2xhdGVQcmVmaXgsXG5cdF90cmFuc2xhdGVTdWZpeCxcblx0X3VwZGF0ZVNpemVJbnRlcnZhbCxcblx0X2l0ZW1zTmVlZFVwZGF0ZSxcblx0X2N1cnJQb3NpdGlvbkluZGV4ID0gMCxcblx0X29mZnNldCA9IHt9LFxuXHRfc2xpZGVTaXplID0gX2dldEVtcHR5UG9pbnQoKSwgLy8gc2l6ZSBvZiBzbGlkZSBhcmVhLCBpbmNsdWRpbmcgc3BhY2luZ1xuXHRfaXRlbUhvbGRlcnMsXG5cdF9wcmV2SXRlbUluZGV4LFxuXHRfaW5kZXhEaWZmID0gMCwgLy8gZGlmZmVyZW5jZSBvZiBpbmRleGVzIHNpbmNlIGxhc3QgY29udGVudCB1cGRhdGVcblx0X2RyYWdTdGFydEV2ZW50LFxuXHRfZHJhZ01vdmVFdmVudCxcblx0X2RyYWdFbmRFdmVudCxcblx0X2RyYWdDYW5jZWxFdmVudCxcblx0X3RyYW5zZm9ybUtleSxcblx0X3BvaW50ZXJFdmVudEVuYWJsZWQsXG5cdF9pc0ZpeGVkUG9zaXRpb24gPSB0cnVlLFxuXHRfbGlrZWx5VG91Y2hEZXZpY2UsXG5cdF9tb2R1bGVzID0gW10sXG5cdF9yZXF1ZXN0QUYsXG5cdF9jYW5jZWxBRixcblx0X2luaXRhbENsYXNzTmFtZSxcblx0X2luaXRhbFdpbmRvd1Njcm9sbFksXG5cdF9vbGRJRSxcblx0X2N1cnJlbnRXaW5kb3dTY3JvbGxZLFxuXHRfZmVhdHVyZXMsXG5cdF93aW5kb3dWaXNpYmxlU2l6ZSA9IHt9LFxuXHRfcmVuZGVyTWF4UmVzb2x1dGlvbiA9IGZhbHNlLFxuXG5cdC8vIFJlZ2lzdGVycyBQaG90b1NXaXBlIG1vZHVsZSAoSGlzdG9yeSwgQ29udHJvbGxlciAuLi4pXG5cdF9yZWdpc3Rlck1vZHVsZSA9IGZ1bmN0aW9uKG5hbWUsIG1vZHVsZSkge1xuXHRcdGZyYW1ld29yay5leHRlbmQoc2VsZiwgbW9kdWxlLnB1YmxpY01ldGhvZHMpO1xuXHRcdF9tb2R1bGVzLnB1c2gobmFtZSk7XG5cdH0sXG5cblx0X2dldExvb3BlZElkID0gZnVuY3Rpb24oaW5kZXgpIHtcblx0XHR2YXIgbnVtU2xpZGVzID0gX2dldE51bUl0ZW1zKCk7XG5cdFx0aWYoaW5kZXggPiBudW1TbGlkZXMgLSAxKSB7XG5cdFx0XHRyZXR1cm4gaW5kZXggLSBudW1TbGlkZXM7XG5cdFx0fSBlbHNlICBpZihpbmRleCA8IDApIHtcblx0XHRcdHJldHVybiBudW1TbGlkZXMgKyBpbmRleDtcblx0XHR9XG5cdFx0cmV0dXJuIGluZGV4O1xuXHR9LFxuXHRcblx0Ly8gTWljcm8gYmluZC90cmlnZ2VyXG5cdF9saXN0ZW5lcnMgPSB7fSxcblx0X2xpc3RlbiA9IGZ1bmN0aW9uKG5hbWUsIGZuKSB7XG5cdFx0aWYoIV9saXN0ZW5lcnNbbmFtZV0pIHtcblx0XHRcdF9saXN0ZW5lcnNbbmFtZV0gPSBbXTtcblx0XHR9XG5cdFx0cmV0dXJuIF9saXN0ZW5lcnNbbmFtZV0ucHVzaChmbik7XG5cdH0sXG5cdF9zaG91dCA9IGZ1bmN0aW9uKG5hbWUpIHtcblx0XHR2YXIgbGlzdGVuZXJzID0gX2xpc3RlbmVyc1tuYW1lXTtcblxuXHRcdGlmKGxpc3RlbmVycykge1xuXHRcdFx0dmFyIGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpO1xuXHRcdFx0YXJncy5zaGlmdCgpO1xuXG5cdFx0XHRmb3IodmFyIGkgPSAwOyBpIDwgbGlzdGVuZXJzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGxpc3RlbmVyc1tpXS5hcHBseShzZWxmLCBhcmdzKTtcblx0XHRcdH1cblx0XHR9XG5cdH0sXG5cblx0X2dldEN1cnJlbnRUaW1lID0gZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xuXHR9LFxuXHRfYXBwbHlCZ09wYWNpdHkgPSBmdW5jdGlvbihvcGFjaXR5KSB7XG5cdFx0X2JnT3BhY2l0eSA9IG9wYWNpdHk7XG5cdFx0c2VsZi5iZy5zdHlsZS5vcGFjaXR5ID0gb3BhY2l0eSAqIF9vcHRpb25zLmJnT3BhY2l0eTtcblx0fSxcblxuXHRfYXBwbHlab29tVHJhbnNmb3JtID0gZnVuY3Rpb24oc3R5bGVPYmoseCx5LHpvb20saXRlbSkge1xuXHRcdGlmKCFfcmVuZGVyTWF4UmVzb2x1dGlvbiB8fCAoaXRlbSAmJiBpdGVtICE9PSBzZWxmLmN1cnJJdGVtKSApIHtcblx0XHRcdHpvb20gPSB6b29tIC8gKGl0ZW0gPyBpdGVtLmZpdFJhdGlvIDogc2VsZi5jdXJySXRlbS5maXRSYXRpbyk7XHRcblx0XHR9XG5cdFx0XHRcblx0XHRzdHlsZU9ialtfdHJhbnNmb3JtS2V5XSA9IF90cmFuc2xhdGVQcmVmaXggKyB4ICsgJ3B4LCAnICsgeSArICdweCcgKyBfdHJhbnNsYXRlU3VmaXggKyAnIHNjYWxlKCcgKyB6b29tICsgJyknO1xuXHR9LFxuXHRfYXBwbHlDdXJyZW50Wm9vbVBhbiA9IGZ1bmN0aW9uKCBhbGxvd1JlbmRlclJlc29sdXRpb24gKSB7XG5cdFx0aWYoX2N1cnJab29tRWxlbWVudFN0eWxlKSB7XG5cblx0XHRcdGlmKGFsbG93UmVuZGVyUmVzb2x1dGlvbikge1xuXHRcdFx0XHRpZihfY3Vyclpvb21MZXZlbCA+IHNlbGYuY3Vyckl0ZW0uZml0UmF0aW8pIHtcblx0XHRcdFx0XHRpZighX3JlbmRlck1heFJlc29sdXRpb24pIHtcblx0XHRcdFx0XHRcdF9zZXRJbWFnZVNpemUoc2VsZi5jdXJySXRlbSwgZmFsc2UsIHRydWUpO1xuXHRcdFx0XHRcdFx0X3JlbmRlck1heFJlc29sdXRpb24gPSB0cnVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRpZihfcmVuZGVyTWF4UmVzb2x1dGlvbikge1xuXHRcdFx0XHRcdFx0X3NldEltYWdlU2l6ZShzZWxmLmN1cnJJdGVtKTtcblx0XHRcdFx0XHRcdF9yZW5kZXJNYXhSZXNvbHV0aW9uID0gZmFsc2U7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRcblxuXHRcdFx0X2FwcGx5Wm9vbVRyYW5zZm9ybShfY3Vyclpvb21FbGVtZW50U3R5bGUsIF9wYW5PZmZzZXQueCwgX3Bhbk9mZnNldC55LCBfY3Vyclpvb21MZXZlbCk7XG5cdFx0fVxuXHR9LFxuXHRfYXBwbHlab29tUGFuVG9JdGVtID0gZnVuY3Rpb24oaXRlbSkge1xuXHRcdGlmKGl0ZW0uY29udGFpbmVyKSB7XG5cblx0XHRcdF9hcHBseVpvb21UcmFuc2Zvcm0oaXRlbS5jb250YWluZXIuc3R5bGUsIFxuXHRcdFx0XHRcdFx0XHRcdGl0ZW0uaW5pdGlhbFBvc2l0aW9uLngsIFxuXHRcdFx0XHRcdFx0XHRcdGl0ZW0uaW5pdGlhbFBvc2l0aW9uLnksIFxuXHRcdFx0XHRcdFx0XHRcdGl0ZW0uaW5pdGlhbFpvb21MZXZlbCxcblx0XHRcdFx0XHRcdFx0XHRpdGVtKTtcblx0XHR9XG5cdH0sXG5cdF9zZXRUcmFuc2xhdGVYID0gZnVuY3Rpb24oeCwgZWxTdHlsZSkge1xuXHRcdGVsU3R5bGVbX3RyYW5zZm9ybUtleV0gPSBfdHJhbnNsYXRlUHJlZml4ICsgeCArICdweCwgMHB4JyArIF90cmFuc2xhdGVTdWZpeDtcblx0fSxcblx0X21vdmVNYWluU2Nyb2xsID0gZnVuY3Rpb24oeCwgZHJhZ2dpbmcpIHtcblxuXHRcdGlmKCFfb3B0aW9ucy5sb29wICYmIGRyYWdnaW5nKSB7XG5cdFx0XHR2YXIgbmV3U2xpZGVJbmRleE9mZnNldCA9IF9jdXJyZW50SXRlbUluZGV4ICsgKF9zbGlkZVNpemUueCAqIF9jdXJyUG9zaXRpb25JbmRleCAtIHgpIC8gX3NsaWRlU2l6ZS54LFxuXHRcdFx0XHRkZWx0YSA9IE1hdGgucm91bmQoeCAtIF9tYWluU2Nyb2xsUG9zLngpO1xuXG5cdFx0XHRpZiggKG5ld1NsaWRlSW5kZXhPZmZzZXQgPCAwICYmIGRlbHRhID4gMCkgfHwgXG5cdFx0XHRcdChuZXdTbGlkZUluZGV4T2Zmc2V0ID49IF9nZXROdW1JdGVtcygpIC0gMSAmJiBkZWx0YSA8IDApICkge1xuXHRcdFx0XHR4ID0gX21haW5TY3JvbGxQb3MueCArIGRlbHRhICogX29wdGlvbnMubWFpblNjcm9sbEVuZEZyaWN0aW9uO1xuXHRcdFx0fSBcblx0XHR9XG5cdFx0XG5cdFx0X21haW5TY3JvbGxQb3MueCA9IHg7XG5cdFx0X3NldFRyYW5zbGF0ZVgoeCwgX2NvbnRhaW5lclN0eWxlKTtcblx0fSxcblx0X2NhbGN1bGF0ZVBhbk9mZnNldCA9IGZ1bmN0aW9uKGF4aXMsIHpvb21MZXZlbCkge1xuXHRcdHZhciBtID0gX21pZFpvb21Qb2ludFtheGlzXSAtIF9vZmZzZXRbYXhpc107XG5cdFx0cmV0dXJuIF9zdGFydFBhbk9mZnNldFtheGlzXSArIF9jdXJyUGFuRGlzdFtheGlzXSArIG0gLSBtICogKCB6b29tTGV2ZWwgLyBfc3RhcnRab29tTGV2ZWwgKTtcblx0fSxcblx0XG5cdF9lcXVhbGl6ZVBvaW50cyA9IGZ1bmN0aW9uKHAxLCBwMikge1xuXHRcdHAxLnggPSBwMi54O1xuXHRcdHAxLnkgPSBwMi55O1xuXHRcdGlmKHAyLmlkKSB7XG5cdFx0XHRwMS5pZCA9IHAyLmlkO1xuXHRcdH1cblx0fSxcblx0X3JvdW5kUG9pbnQgPSBmdW5jdGlvbihwKSB7XG5cdFx0cC54ID0gTWF0aC5yb3VuZChwLngpO1xuXHRcdHAueSA9IE1hdGgucm91bmQocC55KTtcblx0fSxcblxuXHRfbW91c2VNb3ZlVGltZW91dCA9IG51bGwsXG5cdF9vbkZpcnN0TW91c2VNb3ZlID0gZnVuY3Rpb24oKSB7XG5cdFx0Ly8gV2FpdCB1bnRpbCBtb3VzZSBtb3ZlIGV2ZW50IGlzIGZpcmVkIGF0IGxlYXN0IHR3aWNlIGR1cmluZyAxMDBtc1xuXHRcdC8vIFdlIGRvIHRoaXMsIGJlY2F1c2Ugc29tZSBtb2JpbGUgYnJvd3NlcnMgdHJpZ2dlciBpdCBvbiB0b3VjaHN0YXJ0XG5cdFx0aWYoX21vdXNlTW92ZVRpbWVvdXQgKSB7IFxuXHRcdFx0ZnJhbWV3b3JrLnVuYmluZChkb2N1bWVudCwgJ21vdXNlbW92ZScsIF9vbkZpcnN0TW91c2VNb3ZlKTtcblx0XHRcdGZyYW1ld29yay5hZGRDbGFzcyh0ZW1wbGF0ZSwgJ3Bzd3AtLWhhc19tb3VzZScpO1xuXHRcdFx0X29wdGlvbnMubW91c2VVc2VkID0gdHJ1ZTtcblx0XHRcdF9zaG91dCgnbW91c2VVc2VkJyk7XG5cdFx0fVxuXHRcdF9tb3VzZU1vdmVUaW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbigpIHtcblx0XHRcdF9tb3VzZU1vdmVUaW1lb3V0ID0gbnVsbDtcblx0XHR9LCAxMDApO1xuXHR9LFxuXG5cdF9iaW5kRXZlbnRzID0gZnVuY3Rpb24oKSB7XG5cdFx0ZnJhbWV3b3JrLmJpbmQoZG9jdW1lbnQsICdrZXlkb3duJywgc2VsZik7XG5cblx0XHRpZihfZmVhdHVyZXMudHJhbnNmb3JtKSB7XG5cdFx0XHQvLyBkb24ndCBiaW5kIGNsaWNrIGV2ZW50IGluIGJyb3dzZXJzIHRoYXQgZG9uJ3Qgc3VwcG9ydCB0cmFuc2Zvcm0gKG1vc3RseSBJRTgpXG5cdFx0XHRmcmFtZXdvcmsuYmluZChzZWxmLnNjcm9sbFdyYXAsICdjbGljaycsIHNlbGYpO1xuXHRcdH1cblx0XHRcblxuXHRcdGlmKCFfb3B0aW9ucy5tb3VzZVVzZWQpIHtcblx0XHRcdGZyYW1ld29yay5iaW5kKGRvY3VtZW50LCAnbW91c2Vtb3ZlJywgX29uRmlyc3RNb3VzZU1vdmUpO1xuXHRcdH1cblxuXHRcdGZyYW1ld29yay5iaW5kKHdpbmRvdywgJ3Jlc2l6ZSBzY3JvbGwnLCBzZWxmKTtcblxuXHRcdF9zaG91dCgnYmluZEV2ZW50cycpO1xuXHR9LFxuXG5cdF91bmJpbmRFdmVudHMgPSBmdW5jdGlvbigpIHtcblx0XHRmcmFtZXdvcmsudW5iaW5kKHdpbmRvdywgJ3Jlc2l6ZScsIHNlbGYpO1xuXHRcdGZyYW1ld29yay51bmJpbmQod2luZG93LCAnc2Nyb2xsJywgX2dsb2JhbEV2ZW50SGFuZGxlcnMuc2Nyb2xsKTtcblx0XHRmcmFtZXdvcmsudW5iaW5kKGRvY3VtZW50LCAna2V5ZG93bicsIHNlbGYpO1xuXHRcdGZyYW1ld29yay51bmJpbmQoZG9jdW1lbnQsICdtb3VzZW1vdmUnLCBfb25GaXJzdE1vdXNlTW92ZSk7XG5cblx0XHRpZihfZmVhdHVyZXMudHJhbnNmb3JtKSB7XG5cdFx0XHRmcmFtZXdvcmsudW5iaW5kKHNlbGYuc2Nyb2xsV3JhcCwgJ2NsaWNrJywgc2VsZik7XG5cdFx0fVxuXG5cdFx0aWYoX2lzRHJhZ2dpbmcpIHtcblx0XHRcdGZyYW1ld29yay51bmJpbmQod2luZG93LCBfdXBNb3ZlRXZlbnRzLCBzZWxmKTtcblx0XHR9XG5cblx0XHRfc2hvdXQoJ3VuYmluZEV2ZW50cycpO1xuXHR9LFxuXHRcblx0X2NhbGN1bGF0ZVBhbkJvdW5kcyA9IGZ1bmN0aW9uKHpvb21MZXZlbCwgdXBkYXRlKSB7XG5cdFx0dmFyIGJvdW5kcyA9IF9jYWxjdWxhdGVJdGVtU2l6ZSggc2VsZi5jdXJySXRlbSwgX3ZpZXdwb3J0U2l6ZSwgem9vbUxldmVsICk7XG5cdFx0aWYodXBkYXRlKSB7XG5cdFx0XHRfY3VyclBhbkJvdW5kcyA9IGJvdW5kcztcblx0XHR9XG5cdFx0cmV0dXJuIGJvdW5kcztcblx0fSxcblx0XG5cdF9nZXRNaW5ab29tTGV2ZWwgPSBmdW5jdGlvbihpdGVtKSB7XG5cdFx0aWYoIWl0ZW0pIHtcblx0XHRcdGl0ZW0gPSBzZWxmLmN1cnJJdGVtO1xuXHRcdH1cblx0XHRyZXR1cm4gaXRlbS5pbml0aWFsWm9vbUxldmVsO1xuXHR9LFxuXHRfZ2V0TWF4Wm9vbUxldmVsID0gZnVuY3Rpb24oaXRlbSkge1xuXHRcdGlmKCFpdGVtKSB7XG5cdFx0XHRpdGVtID0gc2VsZi5jdXJySXRlbTtcblx0XHR9XG5cdFx0cmV0dXJuIGl0ZW0udyA+IDAgPyBfb3B0aW9ucy5tYXhTcHJlYWRab29tIDogMTtcblx0fSxcblxuXHQvLyBSZXR1cm4gdHJ1ZSBpZiBvZmZzZXQgaXMgb3V0IG9mIHRoZSBib3VuZHNcblx0X21vZGlmeURlc3RQYW5PZmZzZXQgPSBmdW5jdGlvbihheGlzLCBkZXN0UGFuQm91bmRzLCBkZXN0UGFuT2Zmc2V0LCBkZXN0Wm9vbUxldmVsKSB7XG5cdFx0aWYoZGVzdFpvb21MZXZlbCA9PT0gc2VsZi5jdXJySXRlbS5pbml0aWFsWm9vbUxldmVsKSB7XG5cdFx0XHRkZXN0UGFuT2Zmc2V0W2F4aXNdID0gc2VsZi5jdXJySXRlbS5pbml0aWFsUG9zaXRpb25bYXhpc107XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0ZGVzdFBhbk9mZnNldFtheGlzXSA9IF9jYWxjdWxhdGVQYW5PZmZzZXQoYXhpcywgZGVzdFpvb21MZXZlbCk7IFxuXG5cdFx0XHRpZihkZXN0UGFuT2Zmc2V0W2F4aXNdID4gZGVzdFBhbkJvdW5kcy5taW5bYXhpc10pIHtcblx0XHRcdFx0ZGVzdFBhbk9mZnNldFtheGlzXSA9IGRlc3RQYW5Cb3VuZHMubWluW2F4aXNdO1xuXHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdH0gZWxzZSBpZihkZXN0UGFuT2Zmc2V0W2F4aXNdIDwgZGVzdFBhbkJvdW5kcy5tYXhbYXhpc10gKSB7XG5cdFx0XHRcdGRlc3RQYW5PZmZzZXRbYXhpc10gPSBkZXN0UGFuQm91bmRzLm1heFtheGlzXTtcblx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHJldHVybiBmYWxzZTtcblx0fSxcblxuXHRfc2V0dXBUcmFuc2Zvcm1zID0gZnVuY3Rpb24oKSB7XG5cblx0XHRpZihfdHJhbnNmb3JtS2V5KSB7XG5cdFx0XHQvLyBzZXR1cCAzZCB0cmFuc2Zvcm1zXG5cdFx0XHR2YXIgYWxsb3czZFRyYW5zZm9ybSA9IF9mZWF0dXJlcy5wZXJzcGVjdGl2ZSAmJiAhX2xpa2VseVRvdWNoRGV2aWNlO1xuXHRcdFx0X3RyYW5zbGF0ZVByZWZpeCA9ICd0cmFuc2xhdGUnICsgKGFsbG93M2RUcmFuc2Zvcm0gPyAnM2QoJyA6ICcoJyk7XG5cdFx0XHRfdHJhbnNsYXRlU3VmaXggPSBfZmVhdHVyZXMucGVyc3BlY3RpdmUgPyAnLCAwcHgpJyA6ICcpJztcdFxuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIE92ZXJyaWRlIHpvb20vcGFuL21vdmUgZnVuY3Rpb25zIGluIGNhc2Ugb2xkIGJyb3dzZXIgaXMgdXNlZCAobW9zdCBsaWtlbHkgSUUpXG5cdFx0Ly8gKHNvIHRoZXkgdXNlIGxlZnQvdG9wL3dpZHRoL2hlaWdodCwgaW5zdGVhZCBvZiBDU1MgdHJhbnNmb3JtKVxuXHRcblx0XHRfdHJhbnNmb3JtS2V5ID0gJ2xlZnQnO1xuXHRcdGZyYW1ld29yay5hZGRDbGFzcyh0ZW1wbGF0ZSwgJ3Bzd3AtLWllJyk7XG5cblx0XHRfc2V0VHJhbnNsYXRlWCA9IGZ1bmN0aW9uKHgsIGVsU3R5bGUpIHtcblx0XHRcdGVsU3R5bGUubGVmdCA9IHggKyAncHgnO1xuXHRcdH07XG5cdFx0X2FwcGx5Wm9vbVBhblRvSXRlbSA9IGZ1bmN0aW9uKGl0ZW0pIHtcblxuXHRcdFx0dmFyIHpvb21SYXRpbyA9IGl0ZW0uZml0UmF0aW8gPiAxID8gMSA6IGl0ZW0uZml0UmF0aW8sXG5cdFx0XHRcdHMgPSBpdGVtLmNvbnRhaW5lci5zdHlsZSxcblx0XHRcdFx0dyA9IHpvb21SYXRpbyAqIGl0ZW0udyxcblx0XHRcdFx0aCA9IHpvb21SYXRpbyAqIGl0ZW0uaDtcblxuXHRcdFx0cy53aWR0aCA9IHcgKyAncHgnO1xuXHRcdFx0cy5oZWlnaHQgPSBoICsgJ3B4Jztcblx0XHRcdHMubGVmdCA9IGl0ZW0uaW5pdGlhbFBvc2l0aW9uLnggKyAncHgnO1xuXHRcdFx0cy50b3AgPSBpdGVtLmluaXRpYWxQb3NpdGlvbi55ICsgJ3B4JztcblxuXHRcdH07XG5cdFx0X2FwcGx5Q3VycmVudFpvb21QYW4gPSBmdW5jdGlvbigpIHtcblx0XHRcdGlmKF9jdXJyWm9vbUVsZW1lbnRTdHlsZSkge1xuXG5cdFx0XHRcdHZhciBzID0gX2N1cnJab29tRWxlbWVudFN0eWxlLFxuXHRcdFx0XHRcdGl0ZW0gPSBzZWxmLmN1cnJJdGVtLFxuXHRcdFx0XHRcdHpvb21SYXRpbyA9IGl0ZW0uZml0UmF0aW8gPiAxID8gMSA6IGl0ZW0uZml0UmF0aW8sXG5cdFx0XHRcdFx0dyA9IHpvb21SYXRpbyAqIGl0ZW0udyxcblx0XHRcdFx0XHRoID0gem9vbVJhdGlvICogaXRlbS5oO1xuXG5cdFx0XHRcdHMud2lkdGggPSB3ICsgJ3B4Jztcblx0XHRcdFx0cy5oZWlnaHQgPSBoICsgJ3B4JztcblxuXG5cdFx0XHRcdHMubGVmdCA9IF9wYW5PZmZzZXQueCArICdweCc7XG5cdFx0XHRcdHMudG9wID0gX3Bhbk9mZnNldC55ICsgJ3B4Jztcblx0XHRcdH1cblx0XHRcdFxuXHRcdH07XG5cdH0sXG5cblx0X29uS2V5RG93biA9IGZ1bmN0aW9uKGUpIHtcblx0XHR2YXIga2V5ZG93bkFjdGlvbiA9ICcnO1xuXHRcdGlmKF9vcHRpb25zLmVzY0tleSAmJiBlLmtleUNvZGUgPT09IDI3KSB7IFxuXHRcdFx0a2V5ZG93bkFjdGlvbiA9ICdjbG9zZSc7XG5cdFx0fSBlbHNlIGlmKF9vcHRpb25zLmFycm93S2V5cykge1xuXHRcdFx0aWYoZS5rZXlDb2RlID09PSAzNykge1xuXHRcdFx0XHRrZXlkb3duQWN0aW9uID0gJ3ByZXYnO1xuXHRcdFx0fSBlbHNlIGlmKGUua2V5Q29kZSA9PT0gMzkpIHsgXG5cdFx0XHRcdGtleWRvd25BY3Rpb24gPSAnbmV4dCc7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYoa2V5ZG93bkFjdGlvbikge1xuXHRcdFx0Ly8gZG9uJ3QgZG8gYW55dGhpbmcgaWYgc3BlY2lhbCBrZXkgcHJlc3NlZCB0byBwcmV2ZW50IGZyb20gb3ZlcnJpZGluZyBkZWZhdWx0IGJyb3dzZXIgYWN0aW9uc1xuXHRcdFx0Ly8gZS5nLiBpbiBDaHJvbWUgb24gTWFjIGNtZCthcnJvdy1sZWZ0IHJldHVybnMgdG8gcHJldmlvdXMgcGFnZVxuXHRcdFx0aWYoICFlLmN0cmxLZXkgJiYgIWUuYWx0S2V5ICYmICFlLnNoaWZ0S2V5ICYmICFlLm1ldGFLZXkgKSB7XG5cdFx0XHRcdGlmKGUucHJldmVudERlZmF1bHQpIHtcblx0XHRcdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0ZS5yZXR1cm5WYWx1ZSA9IGZhbHNlO1xuXHRcdFx0XHR9IFxuXHRcdFx0XHRzZWxmW2tleWRvd25BY3Rpb25dKCk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9LFxuXG5cdF9vbkdsb2JhbENsaWNrID0gZnVuY3Rpb24oZSkge1xuXHRcdGlmKCFlKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gZG9uJ3QgYWxsb3cgY2xpY2sgZXZlbnQgdG8gcGFzcyB0aHJvdWdoIHdoZW4gdHJpZ2dlcmluZyBhZnRlciBkcmFnIG9yIHNvbWUgb3RoZXIgZ2VzdHVyZVxuXHRcdGlmKF9tb3ZlZCB8fCBfem9vbVN0YXJ0ZWQgfHwgX21haW5TY3JvbGxBbmltYXRpbmcgfHwgX3ZlcnRpY2FsRHJhZ0luaXRpYXRlZCkge1xuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcblx0XHR9XG5cdH0sXG5cblx0X3VwZGF0ZVBhZ2VTY3JvbGxPZmZzZXQgPSBmdW5jdGlvbigpIHtcblx0XHRzZWxmLnNldFNjcm9sbE9mZnNldCgwLCBmcmFtZXdvcmsuZ2V0U2Nyb2xsWSgpKTtcdFx0XG5cdH07XG5cdFxuXG5cblx0XG5cblxuXG4vLyBNaWNybyBhbmltYXRpb24gZW5naW5lXG52YXIgX2FuaW1hdGlvbnMgPSB7fSxcblx0X251bUFuaW1hdGlvbnMgPSAwLFxuXHRfc3RvcEFuaW1hdGlvbiA9IGZ1bmN0aW9uKG5hbWUpIHtcblx0XHRpZihfYW5pbWF0aW9uc1tuYW1lXSkge1xuXHRcdFx0aWYoX2FuaW1hdGlvbnNbbmFtZV0ucmFmKSB7XG5cdFx0XHRcdF9jYW5jZWxBRiggX2FuaW1hdGlvbnNbbmFtZV0ucmFmICk7XG5cdFx0XHR9XG5cdFx0XHRfbnVtQW5pbWF0aW9ucy0tO1xuXHRcdFx0ZGVsZXRlIF9hbmltYXRpb25zW25hbWVdO1xuXHRcdH1cblx0fSxcblx0X3JlZ2lzdGVyU3RhcnRBbmltYXRpb24gPSBmdW5jdGlvbihuYW1lKSB7XG5cdFx0aWYoX2FuaW1hdGlvbnNbbmFtZV0pIHtcblx0XHRcdF9zdG9wQW5pbWF0aW9uKG5hbWUpO1xuXHRcdH1cblx0XHRpZighX2FuaW1hdGlvbnNbbmFtZV0pIHtcblx0XHRcdF9udW1BbmltYXRpb25zKys7XG5cdFx0XHRfYW5pbWF0aW9uc1tuYW1lXSA9IHt9O1xuXHRcdH1cblx0fSxcblx0X3N0b3BBbGxBbmltYXRpb25zID0gZnVuY3Rpb24oKSB7XG5cdFx0Zm9yICh2YXIgcHJvcCBpbiBfYW5pbWF0aW9ucykge1xuXG5cdFx0XHRpZiggX2FuaW1hdGlvbnMuaGFzT3duUHJvcGVydHkoIHByb3AgKSApIHtcblx0XHRcdFx0X3N0b3BBbmltYXRpb24ocHJvcCk7XG5cdFx0XHR9IFxuXHRcdFx0XG5cdFx0fVxuXHR9LFxuXHRfYW5pbWF0ZVByb3AgPSBmdW5jdGlvbihuYW1lLCBiLCBlbmRQcm9wLCBkLCBlYXNpbmdGbiwgb25VcGRhdGUsIG9uQ29tcGxldGUpIHtcblx0XHR2YXIgc3RhcnRBbmltVGltZSA9IF9nZXRDdXJyZW50VGltZSgpLCB0O1xuXHRcdF9yZWdpc3RlclN0YXJ0QW5pbWF0aW9uKG5hbWUpO1xuXG5cdFx0dmFyIGFuaW1sb29wID0gZnVuY3Rpb24oKXtcblx0XHRcdGlmICggX2FuaW1hdGlvbnNbbmFtZV0gKSB7XG5cdFx0XHRcdFxuXHRcdFx0XHR0ID0gX2dldEN1cnJlbnRUaW1lKCkgLSBzdGFydEFuaW1UaW1lOyAvLyB0aW1lIGRpZmZcblx0XHRcdFx0Ly9iIC0gYmVnaW5uaW5nIChzdGFydCBwcm9wKVxuXHRcdFx0XHQvL2QgLSBhbmltIGR1cmF0aW9uXG5cblx0XHRcdFx0aWYgKCB0ID49IGQgKSB7XG5cdFx0XHRcdFx0X3N0b3BBbmltYXRpb24obmFtZSk7XG5cdFx0XHRcdFx0b25VcGRhdGUoZW5kUHJvcCk7XG5cdFx0XHRcdFx0aWYob25Db21wbGV0ZSkge1xuXHRcdFx0XHRcdFx0b25Db21wbGV0ZSgpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblx0XHRcdFx0b25VcGRhdGUoIChlbmRQcm9wIC0gYikgKiBlYXNpbmdGbih0L2QpICsgYiApO1xuXG5cdFx0XHRcdF9hbmltYXRpb25zW25hbWVdLnJhZiA9IF9yZXF1ZXN0QUYoYW5pbWxvb3ApO1xuXHRcdFx0fVxuXHRcdH07XG5cdFx0YW5pbWxvb3AoKTtcblx0fTtcblx0XG5cblxudmFyIHB1YmxpY01ldGhvZHMgPSB7XG5cblx0Ly8gbWFrZSBhIGZldyBsb2NhbCB2YXJpYWJsZXMgYW5kIGZ1bmN0aW9ucyBwdWJsaWNcblx0c2hvdXQ6IF9zaG91dCxcblx0bGlzdGVuOiBfbGlzdGVuLFxuXHR2aWV3cG9ydFNpemU6IF92aWV3cG9ydFNpemUsXG5cdG9wdGlvbnM6IF9vcHRpb25zLFxuXG5cdGlzTWFpblNjcm9sbEFuaW1hdGluZzogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIF9tYWluU2Nyb2xsQW5pbWF0aW5nO1xuXHR9LFxuXHRnZXRab29tTGV2ZWw6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBfY3Vyclpvb21MZXZlbDtcblx0fSxcblx0Z2V0Q3VycmVudEluZGV4OiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gX2N1cnJlbnRJdGVtSW5kZXg7XG5cdH0sXG5cdGlzRHJhZ2dpbmc6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBfaXNEcmFnZ2luZztcblx0fSxcdFxuXHRpc1pvb21pbmc6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBfaXNab29taW5nO1xuXHR9LFxuXHRzZXRTY3JvbGxPZmZzZXQ6IGZ1bmN0aW9uKHgseSkge1xuXHRcdF9vZmZzZXQueCA9IHg7XG5cdFx0X2N1cnJlbnRXaW5kb3dTY3JvbGxZID0gX29mZnNldC55ID0geTtcblx0XHRfc2hvdXQoJ3VwZGF0ZVNjcm9sbE9mZnNldCcsIF9vZmZzZXQpO1xuXHR9LFxuXHRhcHBseVpvb21QYW46IGZ1bmN0aW9uKHpvb21MZXZlbCxwYW5YLHBhblksYWxsb3dSZW5kZXJSZXNvbHV0aW9uKSB7XG5cdFx0X3Bhbk9mZnNldC54ID0gcGFuWDtcblx0XHRfcGFuT2Zmc2V0LnkgPSBwYW5ZO1xuXHRcdF9jdXJyWm9vbUxldmVsID0gem9vbUxldmVsO1xuXHRcdF9hcHBseUN1cnJlbnRab29tUGFuKCBhbGxvd1JlbmRlclJlc29sdXRpb24gKTtcblx0fSxcblxuXHRpbml0OiBmdW5jdGlvbigpIHtcblxuXHRcdGlmKF9pc09wZW4gfHwgX2lzRGVzdHJveWluZykge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdHZhciBpO1xuXG5cdFx0c2VsZi5mcmFtZXdvcmsgPSBmcmFtZXdvcms7IC8vIGJhc2ljIGZ1bmN0aW9uYWxpdHlcblx0XHRzZWxmLnRlbXBsYXRlID0gdGVtcGxhdGU7IC8vIHJvb3QgRE9NIGVsZW1lbnQgb2YgUGhvdG9Td2lwZVxuXHRcdHNlbGYuYmcgPSBmcmFtZXdvcmsuZ2V0Q2hpbGRCeUNsYXNzKHRlbXBsYXRlLCAncHN3cF9fYmcnKTtcblxuXHRcdF9pbml0YWxDbGFzc05hbWUgPSB0ZW1wbGF0ZS5jbGFzc05hbWU7XG5cdFx0X2lzT3BlbiA9IHRydWU7XG5cdFx0XHRcdFxuXHRcdF9mZWF0dXJlcyA9IGZyYW1ld29yay5kZXRlY3RGZWF0dXJlcygpO1xuXHRcdF9yZXF1ZXN0QUYgPSBfZmVhdHVyZXMucmFmO1xuXHRcdF9jYW5jZWxBRiA9IF9mZWF0dXJlcy5jYWY7XG5cdFx0X3RyYW5zZm9ybUtleSA9IF9mZWF0dXJlcy50cmFuc2Zvcm07XG5cdFx0X29sZElFID0gX2ZlYXR1cmVzLm9sZElFO1xuXHRcdFxuXHRcdHNlbGYuc2Nyb2xsV3JhcCA9IGZyYW1ld29yay5nZXRDaGlsZEJ5Q2xhc3ModGVtcGxhdGUsICdwc3dwX19zY3JvbGwtd3JhcCcpO1xuXHRcdHNlbGYuY29udGFpbmVyID0gZnJhbWV3b3JrLmdldENoaWxkQnlDbGFzcyhzZWxmLnNjcm9sbFdyYXAsICdwc3dwX19jb250YWluZXInKTtcblxuXHRcdF9jb250YWluZXJTdHlsZSA9IHNlbGYuY29udGFpbmVyLnN0eWxlOyAvLyBmb3IgZmFzdCBhY2Nlc3NcblxuXHRcdC8vIE9iamVjdHMgdGhhdCBob2xkIHNsaWRlcyAodGhlcmUgYXJlIG9ubHkgMyBpbiBET00pXG5cdFx0c2VsZi5pdGVtSG9sZGVycyA9IF9pdGVtSG9sZGVycyA9IFtcblx0XHRcdHtlbDpzZWxmLmNvbnRhaW5lci5jaGlsZHJlblswXSAsIHdyYXA6MCwgaW5kZXg6IC0xfSxcblx0XHRcdHtlbDpzZWxmLmNvbnRhaW5lci5jaGlsZHJlblsxXSAsIHdyYXA6MCwgaW5kZXg6IC0xfSxcblx0XHRcdHtlbDpzZWxmLmNvbnRhaW5lci5jaGlsZHJlblsyXSAsIHdyYXA6MCwgaW5kZXg6IC0xfVxuXHRcdF07XG5cblx0XHQvLyBoaWRlIG5lYXJieSBpdGVtIGhvbGRlcnMgdW50aWwgaW5pdGlhbCB6b29tIGFuaW1hdGlvbiBmaW5pc2hlcyAodG8gYXZvaWQgZXh0cmEgUGFpbnRzKVxuXHRcdF9pdGVtSG9sZGVyc1swXS5lbC5zdHlsZS5kaXNwbGF5ID0gX2l0ZW1Ib2xkZXJzWzJdLmVsLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG5cblx0XHRfc2V0dXBUcmFuc2Zvcm1zKCk7XG5cblx0XHQvLyBTZXR1cCBnbG9iYWwgZXZlbnRzXG5cdFx0X2dsb2JhbEV2ZW50SGFuZGxlcnMgPSB7XG5cdFx0XHRyZXNpemU6IHNlbGYudXBkYXRlU2l6ZSxcblx0XHRcdHNjcm9sbDogX3VwZGF0ZVBhZ2VTY3JvbGxPZmZzZXQsXG5cdFx0XHRrZXlkb3duOiBfb25LZXlEb3duLFxuXHRcdFx0Y2xpY2s6IF9vbkdsb2JhbENsaWNrXG5cdFx0fTtcblxuXHRcdC8vIGRpc2FibGUgc2hvdy9oaWRlIGVmZmVjdHMgb24gb2xkIGJyb3dzZXJzIHRoYXQgZG9uJ3Qgc3VwcG9ydCBDU1MgYW5pbWF0aW9ucyBvciB0cmFuc2Zvcm1zLCBcblx0XHQvLyBvbGQgSU9TLCBBbmRyb2lkIGFuZCBPcGVyYSBtb2JpbGUuIEJsYWNrYmVycnkgc2VlbXMgdG8gd29yayBmaW5lLCBldmVuIG9sZGVyIG1vZGVscy5cblx0XHR2YXIgb2xkUGhvbmUgPSBfZmVhdHVyZXMuaXNPbGRJT1NQaG9uZSB8fCBfZmVhdHVyZXMuaXNPbGRBbmRyb2lkIHx8IF9mZWF0dXJlcy5pc01vYmlsZU9wZXJhO1xuXHRcdGlmKCFfZmVhdHVyZXMuYW5pbWF0aW9uTmFtZSB8fCAhX2ZlYXR1cmVzLnRyYW5zZm9ybSB8fCBvbGRQaG9uZSkge1xuXHRcdFx0X29wdGlvbnMuc2hvd0FuaW1hdGlvbkR1cmF0aW9uID0gX29wdGlvbnMuaGlkZUFuaW1hdGlvbkR1cmF0aW9uID0gMDtcblx0XHR9XG5cblx0XHQvLyBpbml0IG1vZHVsZXNcblx0XHRmb3IoaSA9IDA7IGkgPCBfbW9kdWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0c2VsZlsnaW5pdCcgKyBfbW9kdWxlc1tpXV0oKTtcblx0XHR9XG5cdFx0XG5cdFx0Ly8gaW5pdFxuXHRcdGlmKFVpQ2xhc3MpIHtcblx0XHRcdHZhciB1aSA9IHNlbGYudWkgPSBuZXcgVWlDbGFzcyhzZWxmLCBmcmFtZXdvcmspO1xuXHRcdFx0dWkuaW5pdCgpO1xuXHRcdH1cblxuXHRcdF9zaG91dCgnZmlyc3RVcGRhdGUnKTtcblx0XHRfY3VycmVudEl0ZW1JbmRleCA9IF9jdXJyZW50SXRlbUluZGV4IHx8IF9vcHRpb25zLmluZGV4IHx8IDA7XG5cdFx0Ly8gdmFsaWRhdGUgaW5kZXhcblx0XHRpZiggaXNOYU4oX2N1cnJlbnRJdGVtSW5kZXgpIHx8IF9jdXJyZW50SXRlbUluZGV4IDwgMCB8fCBfY3VycmVudEl0ZW1JbmRleCA+PSBfZ2V0TnVtSXRlbXMoKSApIHtcblx0XHRcdF9jdXJyZW50SXRlbUluZGV4ID0gMDtcblx0XHR9XG5cdFx0c2VsZi5jdXJySXRlbSA9IF9nZXRJdGVtQXQoIF9jdXJyZW50SXRlbUluZGV4ICk7XG5cblx0XHRcblx0XHRpZihfZmVhdHVyZXMuaXNPbGRJT1NQaG9uZSB8fCBfZmVhdHVyZXMuaXNPbGRBbmRyb2lkKSB7XG5cdFx0XHRfaXNGaXhlZFBvc2l0aW9uID0gZmFsc2U7XG5cdFx0fVxuXHRcdFxuXHRcdHRlbXBsYXRlLnNldEF0dHJpYnV0ZSgnYXJpYS1oaWRkZW4nLCAnZmFsc2UnKTtcblx0XHRpZihfb3B0aW9ucy5tb2RhbCkge1xuXHRcdFx0aWYoIV9pc0ZpeGVkUG9zaXRpb24pIHtcblx0XHRcdFx0dGVtcGxhdGUuc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnO1xuXHRcdFx0XHR0ZW1wbGF0ZS5zdHlsZS50b3AgPSBmcmFtZXdvcmsuZ2V0U2Nyb2xsWSgpICsgJ3B4Jztcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHRlbXBsYXRlLnN0eWxlLnBvc2l0aW9uID0gJ2ZpeGVkJztcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZihfY3VycmVudFdpbmRvd1Njcm9sbFkgPT09IHVuZGVmaW5lZCkge1xuXHRcdFx0X3Nob3V0KCdpbml0aWFsTGF5b3V0Jyk7XG5cdFx0XHRfY3VycmVudFdpbmRvd1Njcm9sbFkgPSBfaW5pdGFsV2luZG93U2Nyb2xsWSA9IGZyYW1ld29yay5nZXRTY3JvbGxZKCk7XG5cdFx0fVxuXHRcdFxuXHRcdC8vIGFkZCBjbGFzc2VzIHRvIHJvb3QgZWxlbWVudCBvZiBQaG90b1N3aXBlXG5cdFx0dmFyIHJvb3RDbGFzc2VzID0gJ3Bzd3AtLW9wZW4gJztcblx0XHRpZihfb3B0aW9ucy5tYWluQ2xhc3MpIHtcblx0XHRcdHJvb3RDbGFzc2VzICs9IF9vcHRpb25zLm1haW5DbGFzcyArICcgJztcblx0XHR9XG5cdFx0aWYoX29wdGlvbnMuc2hvd0hpZGVPcGFjaXR5KSB7XG5cdFx0XHRyb290Q2xhc3NlcyArPSAncHN3cC0tYW5pbWF0ZV9vcGFjaXR5ICc7XG5cdFx0fVxuXHRcdHJvb3RDbGFzc2VzICs9IF9saWtlbHlUb3VjaERldmljZSA/ICdwc3dwLS10b3VjaCcgOiAncHN3cC0tbm90b3VjaCc7XG5cdFx0cm9vdENsYXNzZXMgKz0gX2ZlYXR1cmVzLmFuaW1hdGlvbk5hbWUgPyAnIHBzd3AtLWNzc19hbmltYXRpb24nIDogJyc7XG5cdFx0cm9vdENsYXNzZXMgKz0gX2ZlYXR1cmVzLnN2ZyA/ICcgcHN3cC0tc3ZnJyA6ICcnO1xuXHRcdGZyYW1ld29yay5hZGRDbGFzcyh0ZW1wbGF0ZSwgcm9vdENsYXNzZXMpO1xuXG5cdFx0c2VsZi51cGRhdGVTaXplKCk7XG5cblx0XHQvLyBpbml0aWFsIHVwZGF0ZVxuXHRcdF9jb250YWluZXJTaGlmdEluZGV4ID0gLTE7XG5cdFx0X2luZGV4RGlmZiA9IG51bGw7XG5cdFx0Zm9yKGkgPSAwOyBpIDwgTlVNX0hPTERFUlM7IGkrKykge1xuXHRcdFx0X3NldFRyYW5zbGF0ZVgoIChpK19jb250YWluZXJTaGlmdEluZGV4KSAqIF9zbGlkZVNpemUueCwgX2l0ZW1Ib2xkZXJzW2ldLmVsLnN0eWxlKTtcblx0XHR9XG5cblx0XHRpZighX29sZElFKSB7XG5cdFx0XHRmcmFtZXdvcmsuYmluZChzZWxmLnNjcm9sbFdyYXAsIF9kb3duRXZlbnRzLCBzZWxmKTsgLy8gbm8gZHJhZ2dpbmcgZm9yIG9sZCBJRVxuXHRcdH1cdFxuXG5cdFx0X2xpc3RlbignaW5pdGlhbFpvb21JbkVuZCcsIGZ1bmN0aW9uKCkge1xuXHRcdFx0c2VsZi5zZXRDb250ZW50KF9pdGVtSG9sZGVyc1swXSwgX2N1cnJlbnRJdGVtSW5kZXgtMSk7XG5cdFx0XHRzZWxmLnNldENvbnRlbnQoX2l0ZW1Ib2xkZXJzWzJdLCBfY3VycmVudEl0ZW1JbmRleCsxKTtcblxuXHRcdFx0X2l0ZW1Ib2xkZXJzWzBdLmVsLnN0eWxlLmRpc3BsYXkgPSBfaXRlbUhvbGRlcnNbMl0uZWwuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG5cblx0XHRcdGlmKF9vcHRpb25zLmZvY3VzKSB7XG5cdFx0XHRcdC8vIGZvY3VzIGNhdXNlcyBsYXlvdXQsIFxuXHRcdFx0XHQvLyB3aGljaCBjYXVzZXMgbGFnIGR1cmluZyB0aGUgYW5pbWF0aW9uLCBcblx0XHRcdFx0Ly8gdGhhdCdzIHdoeSB3ZSBkZWxheSBpdCB1bnRpbGwgdGhlIGluaXRpYWwgem9vbSB0cmFuc2l0aW9uIGVuZHNcblx0XHRcdFx0dGVtcGxhdGUuZm9jdXMoKTtcblx0XHRcdH1cblx0XHRcdCBcblxuXHRcdFx0X2JpbmRFdmVudHMoKTtcblx0XHR9KTtcblxuXHRcdC8vIHNldCBjb250ZW50IGZvciBjZW50ZXIgc2xpZGUgKGZpcnN0IHRpbWUpXG5cdFx0c2VsZi5zZXRDb250ZW50KF9pdGVtSG9sZGVyc1sxXSwgX2N1cnJlbnRJdGVtSW5kZXgpO1xuXHRcdFxuXHRcdHNlbGYudXBkYXRlQ3Vyckl0ZW0oKTtcblxuXHRcdF9zaG91dCgnYWZ0ZXJJbml0Jyk7XG5cblx0XHRpZighX2lzRml4ZWRQb3NpdGlvbikge1xuXG5cdFx0XHQvLyBPbiBhbGwgdmVyc2lvbnMgb2YgaU9TIGxvd2VyIHRoYW4gOC4wLCB3ZSBjaGVjayBzaXplIG9mIHZpZXdwb3J0IGV2ZXJ5IHNlY29uZC5cblx0XHRcdC8vIFxuXHRcdFx0Ly8gVGhpcyBpcyBkb25lIHRvIGRldGVjdCB3aGVuIFNhZmFyaSB0b3AgJiBib3R0b20gYmFycyBhcHBlYXIsIFxuXHRcdFx0Ly8gYXMgdGhpcyBhY3Rpb24gZG9lc24ndCB0cmlnZ2VyIGFueSBldmVudHMgKGxpa2UgcmVzaXplKS4gXG5cdFx0XHQvLyBcblx0XHRcdC8vIE9uIGlPUzggdGhleSBmaXhlZCB0aGlzLlxuXHRcdFx0Ly8gXG5cdFx0XHQvLyAxMCBOb3YgMjAxNDogaU9TIDcgdXNhZ2UgfjQwJS4gaU9TIDggdXNhZ2UgNTYlLlxuXHRcdFx0XG5cdFx0XHRfdXBkYXRlU2l6ZUludGVydmFsID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmKCFfbnVtQW5pbWF0aW9ucyAmJiAhX2lzRHJhZ2dpbmcgJiYgIV9pc1pvb21pbmcgJiYgKF9jdXJyWm9vbUxldmVsID09PSBzZWxmLmN1cnJJdGVtLmluaXRpYWxab29tTGV2ZWwpICApIHtcblx0XHRcdFx0XHRzZWxmLnVwZGF0ZVNpemUoKTtcblx0XHRcdFx0fVxuXHRcdFx0fSwgMTAwMCk7XG5cdFx0fVxuXG5cdFx0ZnJhbWV3b3JrLmFkZENsYXNzKHRlbXBsYXRlLCAncHN3cC0tdmlzaWJsZScpO1xuXHR9LFxuXG5cdC8vIENsb3NlIHRoZSBnYWxsZXJ5LCB0aGVuIGRlc3Ryb3kgaXRcblx0Y2xvc2U6IGZ1bmN0aW9uKCkge1xuXHRcdGlmKCFfaXNPcGVuKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0X2lzT3BlbiA9IGZhbHNlO1xuXHRcdF9pc0Rlc3Ryb3lpbmcgPSB0cnVlO1xuXHRcdF9zaG91dCgnY2xvc2UnKTtcblx0XHRfdW5iaW5kRXZlbnRzKCk7XG5cblx0XHRfc2hvd09ySGlkZShzZWxmLmN1cnJJdGVtLCBudWxsLCB0cnVlLCBzZWxmLmRlc3Ryb3kpO1xuXHR9LFxuXG5cdC8vIGRlc3Ryb3lzIHRoZSBnYWxsZXJ5ICh1bmJpbmRzIGV2ZW50cywgY2xlYW5zIHVwIGludGVydmFscyBhbmQgdGltZW91dHMgdG8gYXZvaWQgbWVtb3J5IGxlYWtzKVxuXHRkZXN0cm95OiBmdW5jdGlvbigpIHtcblx0XHRfc2hvdXQoJ2Rlc3Ryb3knKTtcblxuXHRcdGlmKF9zaG93T3JIaWRlVGltZW91dCkge1xuXHRcdFx0Y2xlYXJUaW1lb3V0KF9zaG93T3JIaWRlVGltZW91dCk7XG5cdFx0fVxuXHRcdFxuXHRcdHRlbXBsYXRlLnNldEF0dHJpYnV0ZSgnYXJpYS1oaWRkZW4nLCAndHJ1ZScpO1xuXHRcdHRlbXBsYXRlLmNsYXNzTmFtZSA9IF9pbml0YWxDbGFzc05hbWU7XG5cblx0XHRpZihfdXBkYXRlU2l6ZUludGVydmFsKSB7XG5cdFx0XHRjbGVhckludGVydmFsKF91cGRhdGVTaXplSW50ZXJ2YWwpO1xuXHRcdH1cblxuXHRcdGZyYW1ld29yay51bmJpbmQoc2VsZi5zY3JvbGxXcmFwLCBfZG93bkV2ZW50cywgc2VsZik7XG5cblx0XHQvLyB3ZSB1bmJpbmQgc2Nyb2xsIGV2ZW50IGF0IHRoZSBlbmQsIGFzIGNsb3NpbmcgYW5pbWF0aW9uIG1heSBkZXBlbmQgb24gaXRcblx0XHRmcmFtZXdvcmsudW5iaW5kKHdpbmRvdywgJ3Njcm9sbCcsIHNlbGYpO1xuXG5cdFx0X3N0b3BEcmFnVXBkYXRlTG9vcCgpO1xuXG5cdFx0X3N0b3BBbGxBbmltYXRpb25zKCk7XG5cblx0XHRfbGlzdGVuZXJzID0gbnVsbDtcblx0fSxcblxuXHQvKipcblx0ICogUGFuIGltYWdlIHRvIHBvc2l0aW9uXG5cdCAqIEBwYXJhbSB7TnVtYmVyfSB4ICAgICBcblx0ICogQHBhcmFtIHtOdW1iZXJ9IHkgICAgIFxuXHQgKiBAcGFyYW0ge0Jvb2xlYW59IGZvcmNlIFdpbGwgaWdub3JlIGJvdW5kcyBpZiBzZXQgdG8gdHJ1ZS5cblx0ICovXG5cdHBhblRvOiBmdW5jdGlvbih4LHksZm9yY2UpIHtcblx0XHRpZighZm9yY2UpIHtcblx0XHRcdGlmKHggPiBfY3VyclBhbkJvdW5kcy5taW4ueCkge1xuXHRcdFx0XHR4ID0gX2N1cnJQYW5Cb3VuZHMubWluLng7XG5cdFx0XHR9IGVsc2UgaWYoeCA8IF9jdXJyUGFuQm91bmRzLm1heC54KSB7XG5cdFx0XHRcdHggPSBfY3VyclBhbkJvdW5kcy5tYXgueDtcblx0XHRcdH1cblxuXHRcdFx0aWYoeSA+IF9jdXJyUGFuQm91bmRzLm1pbi55KSB7XG5cdFx0XHRcdHkgPSBfY3VyclBhbkJvdW5kcy5taW4ueTtcblx0XHRcdH0gZWxzZSBpZih5IDwgX2N1cnJQYW5Cb3VuZHMubWF4LnkpIHtcblx0XHRcdFx0eSA9IF9jdXJyUGFuQm91bmRzLm1heC55O1xuXHRcdFx0fVxuXHRcdH1cblx0XHRcblx0XHRfcGFuT2Zmc2V0LnggPSB4O1xuXHRcdF9wYW5PZmZzZXQueSA9IHk7XG5cdFx0X2FwcGx5Q3VycmVudFpvb21QYW4oKTtcblx0fSxcblx0XG5cdGhhbmRsZUV2ZW50OiBmdW5jdGlvbiAoZSkge1xuXHRcdGUgPSBlIHx8IHdpbmRvdy5ldmVudDtcblx0XHRpZihfZ2xvYmFsRXZlbnRIYW5kbGVyc1tlLnR5cGVdKSB7XG5cdFx0XHRfZ2xvYmFsRXZlbnRIYW5kbGVyc1tlLnR5cGVdKGUpO1xuXHRcdH1cblx0fSxcblxuXG5cdGdvVG86IGZ1bmN0aW9uKGluZGV4KSB7XG5cblx0XHRpbmRleCA9IF9nZXRMb29wZWRJZChpbmRleCk7XG5cblx0XHR2YXIgZGlmZiA9IGluZGV4IC0gX2N1cnJlbnRJdGVtSW5kZXg7XG5cdFx0X2luZGV4RGlmZiA9IGRpZmY7XG5cblx0XHRfY3VycmVudEl0ZW1JbmRleCA9IGluZGV4O1xuXHRcdHNlbGYuY3Vyckl0ZW0gPSBfZ2V0SXRlbUF0KCBfY3VycmVudEl0ZW1JbmRleCApO1xuXHRcdF9jdXJyUG9zaXRpb25JbmRleCAtPSBkaWZmO1xuXHRcdFxuXHRcdF9tb3ZlTWFpblNjcm9sbChfc2xpZGVTaXplLnggKiBfY3VyclBvc2l0aW9uSW5kZXgpO1xuXHRcdFxuXG5cdFx0X3N0b3BBbGxBbmltYXRpb25zKCk7XG5cdFx0X21haW5TY3JvbGxBbmltYXRpbmcgPSBmYWxzZTtcblxuXHRcdHNlbGYudXBkYXRlQ3Vyckl0ZW0oKTtcblx0fSxcblx0bmV4dDogZnVuY3Rpb24oKSB7XG5cdFx0c2VsZi5nb1RvKCBfY3VycmVudEl0ZW1JbmRleCArIDEpO1xuXHR9LFxuXHRwcmV2OiBmdW5jdGlvbigpIHtcblx0XHRzZWxmLmdvVG8oIF9jdXJyZW50SXRlbUluZGV4IC0gMSk7XG5cdH0sXG5cblx0Ly8gdXBkYXRlIGN1cnJlbnQgem9vbS9wYW4gb2JqZWN0c1xuXHR1cGRhdGVDdXJyWm9vbUl0ZW06IGZ1bmN0aW9uKGVtdWxhdGVTZXRDb250ZW50KSB7XG5cdFx0aWYoZW11bGF0ZVNldENvbnRlbnQpIHtcblx0XHRcdF9zaG91dCgnYmVmb3JlQ2hhbmdlJywgMCk7XG5cdFx0fVxuXG5cdFx0Ly8gaXRlbUhvbGRlclsxXSBpcyBtaWRkbGUgKGN1cnJlbnQpIGl0ZW1cblx0XHRpZihfaXRlbUhvbGRlcnNbMV0uZWwuY2hpbGRyZW4ubGVuZ3RoKSB7XG5cdFx0XHR2YXIgem9vbUVsZW1lbnQgPSBfaXRlbUhvbGRlcnNbMV0uZWwuY2hpbGRyZW5bMF07XG5cdFx0XHRpZiggZnJhbWV3b3JrLmhhc0NsYXNzKHpvb21FbGVtZW50LCAncHN3cF9fem9vbS13cmFwJykgKSB7XG5cdFx0XHRcdF9jdXJyWm9vbUVsZW1lbnRTdHlsZSA9IHpvb21FbGVtZW50LnN0eWxlO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0X2N1cnJab29tRWxlbWVudFN0eWxlID0gbnVsbDtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0X2N1cnJab29tRWxlbWVudFN0eWxlID0gbnVsbDtcblx0XHR9XG5cdFx0XG5cdFx0X2N1cnJQYW5Cb3VuZHMgPSBzZWxmLmN1cnJJdGVtLmJvdW5kcztcdFxuXHRcdF9zdGFydFpvb21MZXZlbCA9IF9jdXJyWm9vbUxldmVsID0gc2VsZi5jdXJySXRlbS5pbml0aWFsWm9vbUxldmVsO1xuXG5cdFx0X3Bhbk9mZnNldC54ID0gX2N1cnJQYW5Cb3VuZHMuY2VudGVyLng7XG5cdFx0X3Bhbk9mZnNldC55ID0gX2N1cnJQYW5Cb3VuZHMuY2VudGVyLnk7XG5cblx0XHRpZihlbXVsYXRlU2V0Q29udGVudCkge1xuXHRcdFx0X3Nob3V0KCdhZnRlckNoYW5nZScpO1xuXHRcdH1cblx0fSxcblxuXG5cdGludmFsaWRhdGVDdXJySXRlbXM6IGZ1bmN0aW9uKCkge1xuXHRcdF9pdGVtc05lZWRVcGRhdGUgPSB0cnVlO1xuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCBOVU1fSE9MREVSUzsgaSsrKSB7XG5cdFx0XHRpZiggX2l0ZW1Ib2xkZXJzW2ldLml0ZW0gKSB7XG5cdFx0XHRcdF9pdGVtSG9sZGVyc1tpXS5pdGVtLm5lZWRzVXBkYXRlID0gdHJ1ZTtcblx0XHRcdH1cblx0XHR9XG5cdH0sXG5cblx0dXBkYXRlQ3Vyckl0ZW06IGZ1bmN0aW9uKGJlZm9yZUFuaW1hdGlvbikge1xuXG5cdFx0aWYoX2luZGV4RGlmZiA9PT0gMCkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdHZhciBkaWZmQWJzID0gTWF0aC5hYnMoX2luZGV4RGlmZiksXG5cdFx0XHR0ZW1wSG9sZGVyO1xuXG5cdFx0aWYoYmVmb3JlQW5pbWF0aW9uICYmIGRpZmZBYnMgPCAyKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cblx0XHRzZWxmLmN1cnJJdGVtID0gX2dldEl0ZW1BdCggX2N1cnJlbnRJdGVtSW5kZXggKTtcblx0XHRfcmVuZGVyTWF4UmVzb2x1dGlvbiA9IGZhbHNlO1xuXHRcdFxuXHRcdF9zaG91dCgnYmVmb3JlQ2hhbmdlJywgX2luZGV4RGlmZik7XG5cblx0XHRpZihkaWZmQWJzID49IE5VTV9IT0xERVJTKSB7XG5cdFx0XHRfY29udGFpbmVyU2hpZnRJbmRleCArPSBfaW5kZXhEaWZmICsgKF9pbmRleERpZmYgPiAwID8gLU5VTV9IT0xERVJTIDogTlVNX0hPTERFUlMpO1xuXHRcdFx0ZGlmZkFicyA9IE5VTV9IT0xERVJTO1xuXHRcdH1cblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgZGlmZkFiczsgaSsrKSB7XG5cdFx0XHRpZihfaW5kZXhEaWZmID4gMCkge1xuXHRcdFx0XHR0ZW1wSG9sZGVyID0gX2l0ZW1Ib2xkZXJzLnNoaWZ0KCk7XG5cdFx0XHRcdF9pdGVtSG9sZGVyc1tOVU1fSE9MREVSUy0xXSA9IHRlbXBIb2xkZXI7IC8vIG1vdmUgZmlyc3QgdG8gbGFzdFxuXG5cdFx0XHRcdF9jb250YWluZXJTaGlmdEluZGV4Kys7XG5cdFx0XHRcdF9zZXRUcmFuc2xhdGVYKCAoX2NvbnRhaW5lclNoaWZ0SW5kZXgrMikgKiBfc2xpZGVTaXplLngsIHRlbXBIb2xkZXIuZWwuc3R5bGUpO1xuXHRcdFx0XHRzZWxmLnNldENvbnRlbnQodGVtcEhvbGRlciwgX2N1cnJlbnRJdGVtSW5kZXggLSBkaWZmQWJzICsgaSArIDEgKyAxKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHRlbXBIb2xkZXIgPSBfaXRlbUhvbGRlcnMucG9wKCk7XG5cdFx0XHRcdF9pdGVtSG9sZGVycy51bnNoaWZ0KCB0ZW1wSG9sZGVyICk7IC8vIG1vdmUgbGFzdCB0byBmaXJzdFxuXG5cdFx0XHRcdF9jb250YWluZXJTaGlmdEluZGV4LS07XG5cdFx0XHRcdF9zZXRUcmFuc2xhdGVYKCBfY29udGFpbmVyU2hpZnRJbmRleCAqIF9zbGlkZVNpemUueCwgdGVtcEhvbGRlci5lbC5zdHlsZSk7XG5cdFx0XHRcdHNlbGYuc2V0Q29udGVudCh0ZW1wSG9sZGVyLCBfY3VycmVudEl0ZW1JbmRleCArIGRpZmZBYnMgLSBpIC0gMSAtIDEpO1xuXHRcdFx0fVxuXHRcdFx0XG5cdFx0fVxuXG5cdFx0Ly8gcmVzZXQgem9vbS9wYW4gb24gcHJldmlvdXMgaXRlbVxuXHRcdGlmKF9jdXJyWm9vbUVsZW1lbnRTdHlsZSAmJiBNYXRoLmFicyhfaW5kZXhEaWZmKSA9PT0gMSkge1xuXG5cdFx0XHR2YXIgcHJldkl0ZW0gPSBfZ2V0SXRlbUF0KF9wcmV2SXRlbUluZGV4KTtcblx0XHRcdGlmKHByZXZJdGVtLmluaXRpYWxab29tTGV2ZWwgIT09IF9jdXJyWm9vbUxldmVsKSB7XG5cdFx0XHRcdF9jYWxjdWxhdGVJdGVtU2l6ZShwcmV2SXRlbSAsIF92aWV3cG9ydFNpemUgKTtcblx0XHRcdFx0X3NldEltYWdlU2l6ZShwcmV2SXRlbSk7XG5cdFx0XHRcdF9hcHBseVpvb21QYW5Ub0l0ZW0oIHByZXZJdGVtICk7IFx0XHRcdFx0XG5cdFx0XHR9XG5cblx0XHR9XG5cblx0XHQvLyByZXNldCBkaWZmIGFmdGVyIHVwZGF0ZVxuXHRcdF9pbmRleERpZmYgPSAwO1xuXG5cdFx0c2VsZi51cGRhdGVDdXJyWm9vbUl0ZW0oKTtcblxuXHRcdF9wcmV2SXRlbUluZGV4ID0gX2N1cnJlbnRJdGVtSW5kZXg7XG5cblx0XHRfc2hvdXQoJ2FmdGVyQ2hhbmdlJyk7XG5cdFx0XG5cdH0sXG5cblxuXG5cdHVwZGF0ZVNpemU6IGZ1bmN0aW9uKGZvcmNlKSB7XG5cdFx0XG5cdFx0aWYoIV9pc0ZpeGVkUG9zaXRpb24gJiYgX29wdGlvbnMubW9kYWwpIHtcblx0XHRcdHZhciB3aW5kb3dTY3JvbGxZID0gZnJhbWV3b3JrLmdldFNjcm9sbFkoKTtcblx0XHRcdGlmKF9jdXJyZW50V2luZG93U2Nyb2xsWSAhPT0gd2luZG93U2Nyb2xsWSkge1xuXHRcdFx0XHR0ZW1wbGF0ZS5zdHlsZS50b3AgPSB3aW5kb3dTY3JvbGxZICsgJ3B4Jztcblx0XHRcdFx0X2N1cnJlbnRXaW5kb3dTY3JvbGxZID0gd2luZG93U2Nyb2xsWTtcblx0XHRcdH1cblx0XHRcdGlmKCFmb3JjZSAmJiBfd2luZG93VmlzaWJsZVNpemUueCA9PT0gd2luZG93LmlubmVyV2lkdGggJiYgX3dpbmRvd1Zpc2libGVTaXplLnkgPT09IHdpbmRvdy5pbm5lckhlaWdodCkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHRfd2luZG93VmlzaWJsZVNpemUueCA9IHdpbmRvdy5pbm5lcldpZHRoO1xuXHRcdFx0X3dpbmRvd1Zpc2libGVTaXplLnkgPSB3aW5kb3cuaW5uZXJIZWlnaHQ7XG5cblx0XHRcdC8vdGVtcGxhdGUuc3R5bGUud2lkdGggPSBfd2luZG93VmlzaWJsZVNpemUueCArICdweCc7XG5cdFx0XHR0ZW1wbGF0ZS5zdHlsZS5oZWlnaHQgPSBfd2luZG93VmlzaWJsZVNpemUueSArICdweCc7XG5cdFx0fVxuXG5cblxuXHRcdF92aWV3cG9ydFNpemUueCA9IHNlbGYuc2Nyb2xsV3JhcC5jbGllbnRXaWR0aDtcblx0XHRfdmlld3BvcnRTaXplLnkgPSBzZWxmLnNjcm9sbFdyYXAuY2xpZW50SGVpZ2h0O1xuXG5cdFx0X3VwZGF0ZVBhZ2VTY3JvbGxPZmZzZXQoKTtcblxuXHRcdF9zbGlkZVNpemUueCA9IF92aWV3cG9ydFNpemUueCArIE1hdGgucm91bmQoX3ZpZXdwb3J0U2l6ZS54ICogX29wdGlvbnMuc3BhY2luZyk7XG5cdFx0X3NsaWRlU2l6ZS55ID0gX3ZpZXdwb3J0U2l6ZS55O1xuXG5cdFx0X21vdmVNYWluU2Nyb2xsKF9zbGlkZVNpemUueCAqIF9jdXJyUG9zaXRpb25JbmRleCk7XG5cblx0XHRfc2hvdXQoJ2JlZm9yZVJlc2l6ZScpOyAvLyBldmVuIG1heSBiZSB1c2VkIGZvciBleGFtcGxlIHRvIHN3aXRjaCBpbWFnZSBzb3VyY2VzXG5cblxuXHRcdC8vIGRvbid0IHJlLWNhbGN1bGF0ZSBzaXplIG9uIGluaXRhbCBzaXplIHVwZGF0ZVxuXHRcdGlmKF9jb250YWluZXJTaGlmdEluZGV4ICE9PSB1bmRlZmluZWQpIHtcblxuXHRcdFx0dmFyIGhvbGRlcixcblx0XHRcdFx0aXRlbSxcblx0XHRcdFx0aEluZGV4O1xuXG5cdFx0XHRmb3IodmFyIGkgPSAwOyBpIDwgTlVNX0hPTERFUlM7IGkrKykge1xuXHRcdFx0XHRob2xkZXIgPSBfaXRlbUhvbGRlcnNbaV07XG5cdFx0XHRcdF9zZXRUcmFuc2xhdGVYKCAoaStfY29udGFpbmVyU2hpZnRJbmRleCkgKiBfc2xpZGVTaXplLngsIGhvbGRlci5lbC5zdHlsZSk7XG5cblx0XHRcdFx0aEluZGV4ID0gX2N1cnJlbnRJdGVtSW5kZXgraS0xO1xuXG5cdFx0XHRcdGlmKF9vcHRpb25zLmxvb3AgJiYgX2dldE51bUl0ZW1zKCkgPiAyKSB7XG5cdFx0XHRcdFx0aEluZGV4ID0gX2dldExvb3BlZElkKGhJbmRleCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyB1cGRhdGUgem9vbSBsZXZlbCBvbiBpdGVtcyBhbmQgcmVmcmVzaCBzb3VyY2UgKGlmIG5lZWRzVXBkYXRlKVxuXHRcdFx0XHRpdGVtID0gX2dldEl0ZW1BdCggaEluZGV4ICk7XG5cblx0XHRcdFx0Ly8gcmUtcmVuZGVyIGdhbGxlcnkgaXRlbSBpZiBgbmVlZHNVcGRhdGVgLFxuXHRcdFx0XHQvLyBvciBkb2Vzbid0IGhhdmUgYGJvdW5kc2AgKGVudGlyZWx5IG5ldyBzbGlkZSBvYmplY3QpXG5cdFx0XHRcdGlmKCBpdGVtICYmIChfaXRlbXNOZWVkVXBkYXRlIHx8IGl0ZW0ubmVlZHNVcGRhdGUgfHwgIWl0ZW0uYm91bmRzKSApIHtcblxuXHRcdFx0XHRcdHNlbGYuY2xlYW5TbGlkZSggaXRlbSApO1xuXHRcdFx0XHRcdFxuXHRcdFx0XHRcdHNlbGYuc2V0Q29udGVudCggaG9sZGVyLCBoSW5kZXggKTtcblxuXHRcdFx0XHRcdC8vIGlmIFwiY2VudGVyXCIgc2xpZGVcblx0XHRcdFx0XHRpZihpID09PSAxKSB7XG5cdFx0XHRcdFx0XHRzZWxmLmN1cnJJdGVtID0gaXRlbTtcblx0XHRcdFx0XHRcdHNlbGYudXBkYXRlQ3Vyclpvb21JdGVtKHRydWUpO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGl0ZW0ubmVlZHNVcGRhdGUgPSBmYWxzZTtcblxuXHRcdFx0XHR9IGVsc2UgaWYoaG9sZGVyLmluZGV4ID09PSAtMSAmJiBoSW5kZXggPj0gMCkge1xuXHRcdFx0XHRcdC8vIGFkZCBjb250ZW50IGZpcnN0IHRpbWVcblx0XHRcdFx0XHRzZWxmLnNldENvbnRlbnQoIGhvbGRlciwgaEluZGV4ICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYoaXRlbSAmJiBpdGVtLmNvbnRhaW5lcikge1xuXHRcdFx0XHRcdF9jYWxjdWxhdGVJdGVtU2l6ZShpdGVtLCBfdmlld3BvcnRTaXplKTtcblx0XHRcdFx0XHRfc2V0SW1hZ2VTaXplKGl0ZW0pO1xuXHRcdFx0XHRcdF9hcHBseVpvb21QYW5Ub0l0ZW0oIGl0ZW0gKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRcblx0XHRcdH1cblx0XHRcdF9pdGVtc05lZWRVcGRhdGUgPSBmYWxzZTtcblx0XHR9XHRcblxuXHRcdF9zdGFydFpvb21MZXZlbCA9IF9jdXJyWm9vbUxldmVsID0gc2VsZi5jdXJySXRlbS5pbml0aWFsWm9vbUxldmVsO1xuXHRcdF9jdXJyUGFuQm91bmRzID0gc2VsZi5jdXJySXRlbS5ib3VuZHM7XG5cblx0XHRpZihfY3VyclBhbkJvdW5kcykge1xuXHRcdFx0X3Bhbk9mZnNldC54ID0gX2N1cnJQYW5Cb3VuZHMuY2VudGVyLng7XG5cdFx0XHRfcGFuT2Zmc2V0LnkgPSBfY3VyclBhbkJvdW5kcy5jZW50ZXIueTtcblx0XHRcdF9hcHBseUN1cnJlbnRab29tUGFuKCB0cnVlICk7XG5cdFx0fVxuXHRcdFxuXHRcdF9zaG91dCgncmVzaXplJyk7XG5cdH0sXG5cdFxuXHQvLyBab29tIGN1cnJlbnQgaXRlbSB0b1xuXHR6b29tVG86IGZ1bmN0aW9uKGRlc3Rab29tTGV2ZWwsIGNlbnRlclBvaW50LCBzcGVlZCwgZWFzaW5nRm4sIHVwZGF0ZUZuKSB7XG5cdFx0Lypcblx0XHRcdGlmKGRlc3Rab29tTGV2ZWwgPT09ICdmaXQnKSB7XG5cdFx0XHRcdGRlc3Rab29tTGV2ZWwgPSBzZWxmLmN1cnJJdGVtLmZpdFJhdGlvO1xuXHRcdFx0fSBlbHNlIGlmKGRlc3Rab29tTGV2ZWwgPT09ICdmaWxsJykge1xuXHRcdFx0XHRkZXN0Wm9vbUxldmVsID0gc2VsZi5jdXJySXRlbS5maWxsUmF0aW87XG5cdFx0XHR9XG5cdFx0Ki9cblxuXHRcdGlmKGNlbnRlclBvaW50KSB7XG5cdFx0XHRfc3RhcnRab29tTGV2ZWwgPSBfY3Vyclpvb21MZXZlbDtcblx0XHRcdF9taWRab29tUG9pbnQueCA9IE1hdGguYWJzKGNlbnRlclBvaW50LngpIC0gX3Bhbk9mZnNldC54IDtcblx0XHRcdF9taWRab29tUG9pbnQueSA9IE1hdGguYWJzKGNlbnRlclBvaW50LnkpIC0gX3Bhbk9mZnNldC55IDtcblx0XHRcdF9lcXVhbGl6ZVBvaW50cyhfc3RhcnRQYW5PZmZzZXQsIF9wYW5PZmZzZXQpO1xuXHRcdH1cblxuXHRcdHZhciBkZXN0UGFuQm91bmRzID0gX2NhbGN1bGF0ZVBhbkJvdW5kcyhkZXN0Wm9vbUxldmVsLCBmYWxzZSksXG5cdFx0XHRkZXN0UGFuT2Zmc2V0ID0ge307XG5cblx0XHRfbW9kaWZ5RGVzdFBhbk9mZnNldCgneCcsIGRlc3RQYW5Cb3VuZHMsIGRlc3RQYW5PZmZzZXQsIGRlc3Rab29tTGV2ZWwpO1xuXHRcdF9tb2RpZnlEZXN0UGFuT2Zmc2V0KCd5JywgZGVzdFBhbkJvdW5kcywgZGVzdFBhbk9mZnNldCwgZGVzdFpvb21MZXZlbCk7XG5cblx0XHR2YXIgaW5pdGlhbFpvb21MZXZlbCA9IF9jdXJyWm9vbUxldmVsO1xuXHRcdHZhciBpbml0aWFsUGFuT2Zmc2V0ID0ge1xuXHRcdFx0eDogX3Bhbk9mZnNldC54LFxuXHRcdFx0eTogX3Bhbk9mZnNldC55XG5cdFx0fTtcblxuXHRcdF9yb3VuZFBvaW50KGRlc3RQYW5PZmZzZXQpO1xuXG5cdFx0dmFyIG9uVXBkYXRlID0gZnVuY3Rpb24obm93KSB7XG5cdFx0XHRpZihub3cgPT09IDEpIHtcblx0XHRcdFx0X2N1cnJab29tTGV2ZWwgPSBkZXN0Wm9vbUxldmVsO1xuXHRcdFx0XHRfcGFuT2Zmc2V0LnggPSBkZXN0UGFuT2Zmc2V0Lng7XG5cdFx0XHRcdF9wYW5PZmZzZXQueSA9IGRlc3RQYW5PZmZzZXQueTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdF9jdXJyWm9vbUxldmVsID0gKGRlc3Rab29tTGV2ZWwgLSBpbml0aWFsWm9vbUxldmVsKSAqIG5vdyArIGluaXRpYWxab29tTGV2ZWw7XG5cdFx0XHRcdF9wYW5PZmZzZXQueCA9IChkZXN0UGFuT2Zmc2V0LnggLSBpbml0aWFsUGFuT2Zmc2V0LngpICogbm93ICsgaW5pdGlhbFBhbk9mZnNldC54O1xuXHRcdFx0XHRfcGFuT2Zmc2V0LnkgPSAoZGVzdFBhbk9mZnNldC55IC0gaW5pdGlhbFBhbk9mZnNldC55KSAqIG5vdyArIGluaXRpYWxQYW5PZmZzZXQueTtcblx0XHRcdH1cblxuXHRcdFx0aWYodXBkYXRlRm4pIHtcblx0XHRcdFx0dXBkYXRlRm4obm93KTtcblx0XHRcdH1cblxuXHRcdFx0X2FwcGx5Q3VycmVudFpvb21QYW4oIG5vdyA9PT0gMSApO1xuXHRcdH07XG5cblx0XHRpZihzcGVlZCkge1xuXHRcdFx0X2FuaW1hdGVQcm9wKCdjdXN0b21ab29tVG8nLCAwLCAxLCBzcGVlZCwgZWFzaW5nRm4gfHwgZnJhbWV3b3JrLmVhc2luZy5zaW5lLmluT3V0LCBvblVwZGF0ZSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdG9uVXBkYXRlKDEpO1xuXHRcdH1cblx0fVxuXG5cbn07XG5cblxuLyo+PmNvcmUqL1xuXG4vKj4+Z2VzdHVyZXMqL1xuLyoqXG4gKiBNb3VzZS90b3VjaC9wb2ludGVyIGV2ZW50IGhhbmRsZXJzLlxuICogXG4gKiBzZXBhcmF0ZWQgZnJvbSBAY29yZS5qcyBmb3IgcmVhZGFiaWxpdHlcbiAqL1xuXG52YXIgTUlOX1NXSVBFX0RJU1RBTkNFID0gMzAsXG5cdERJUkVDVElPTl9DSEVDS19PRkZTRVQgPSAxMDsgLy8gYW1vdW50IG9mIHBpeGVscyB0byBkcmFnIHRvIGRldGVybWluZSBkaXJlY3Rpb24gb2Ygc3dpcGVcblxudmFyIF9nZXN0dXJlU3RhcnRUaW1lLFxuXHRfZ2VzdHVyZUNoZWNrU3BlZWRUaW1lLFxuXG5cdC8vIHBvb2wgb2Ygb2JqZWN0cyB0aGF0IGFyZSB1c2VkIGR1cmluZyBkcmFnZ2luZyBvZiB6b29taW5nXG5cdHAgPSB7fSwgLy8gZmlyc3QgcG9pbnRcblx0cDIgPSB7fSwgLy8gc2Vjb25kIHBvaW50IChmb3Igem9vbSBnZXN0dXJlKVxuXHRkZWx0YSA9IHt9LFxuXHRfY3VyclBvaW50ID0ge30sXG5cdF9zdGFydFBvaW50ID0ge30sXG5cdF9jdXJyUG9pbnRlcnMgPSBbXSxcblx0X3N0YXJ0TWFpblNjcm9sbFBvcyA9IHt9LFxuXHRfcmVsZWFzZUFuaW1EYXRhLFxuXHRfcG9zUG9pbnRzID0gW10sIC8vIGFycmF5IG9mIHBvaW50cyBkdXJpbmcgZHJhZ2dpbmcsIHVzZWQgdG8gZGV0ZXJtaW5lIHR5cGUgb2YgZ2VzdHVyZVxuXHRfdGVtcFBvaW50ID0ge30sXG5cblx0X2lzWm9vbWluZ0luLFxuXHRfdmVydGljYWxEcmFnSW5pdGlhdGVkLFxuXHRfb2xkQW5kcm9pZFRvdWNoRW5kVGltZW91dCxcblx0X2N1cnJab29tZWRJdGVtSW5kZXggPSAwLFxuXHRfY2VudGVyUG9pbnQgPSBfZ2V0RW1wdHlQb2ludCgpLFxuXHRfbGFzdFJlbGVhc2VUaW1lID0gMCxcblx0X2lzRHJhZ2dpbmcsIC8vIGF0IGxlYXN0IG9uZSBwb2ludGVyIGlzIGRvd25cblx0X2lzTXVsdGl0b3VjaCwgLy8gYXQgbGVhc3QgdHdvIF9wb2ludGVycyBhcmUgZG93blxuXHRfem9vbVN0YXJ0ZWQsIC8vIHpvb20gbGV2ZWwgY2hhbmdlZCBkdXJpbmcgem9vbSBnZXN0dXJlXG5cdF9tb3ZlZCxcblx0X2RyYWdBbmltRnJhbWUsXG5cdF9tYWluU2Nyb2xsU2hpZnRlZCxcblx0X2N1cnJlbnRQb2ludHMsIC8vIGFycmF5IG9mIGN1cnJlbnQgdG91Y2ggcG9pbnRzXG5cdF9pc1pvb21pbmcsXG5cdF9jdXJyUG9pbnRzRGlzdGFuY2UsXG5cdF9zdGFydFBvaW50c0Rpc3RhbmNlLFxuXHRfY3VyclBhbkJvdW5kcyxcblx0X21haW5TY3JvbGxQb3MgPSBfZ2V0RW1wdHlQb2ludCgpLFxuXHRfY3Vyclpvb21FbGVtZW50U3R5bGUsXG5cdF9tYWluU2Nyb2xsQW5pbWF0aW5nLCAvLyB0cnVlLCBpZiBhbmltYXRpb24gYWZ0ZXIgc3dpcGUgZ2VzdHVyZSBpcyBydW5uaW5nXG5cdF9taWRab29tUG9pbnQgPSBfZ2V0RW1wdHlQb2ludCgpLFxuXHRfY3VyckNlbnRlclBvaW50ID0gX2dldEVtcHR5UG9pbnQoKSxcblx0X2RpcmVjdGlvbixcblx0X2lzRmlyc3RNb3ZlLFxuXHRfb3BhY2l0eUNoYW5nZWQsXG5cdF9iZ09wYWNpdHksXG5cdF93YXNPdmVySW5pdGlhbFpvb20sXG5cblx0X2lzRXF1YWxQb2ludHMgPSBmdW5jdGlvbihwMSwgcDIpIHtcblx0XHRyZXR1cm4gcDEueCA9PT0gcDIueCAmJiBwMS55ID09PSBwMi55O1xuXHR9LFxuXHRfaXNOZWFyYnlQb2ludHMgPSBmdW5jdGlvbih0b3VjaDAsIHRvdWNoMSkge1xuXHRcdHJldHVybiBNYXRoLmFicyh0b3VjaDAueCAtIHRvdWNoMS54KSA8IERPVUJMRV9UQVBfUkFESVVTICYmIE1hdGguYWJzKHRvdWNoMC55IC0gdG91Y2gxLnkpIDwgRE9VQkxFX1RBUF9SQURJVVM7XG5cdH0sXG5cdF9jYWxjdWxhdGVQb2ludHNEaXN0YW5jZSA9IGZ1bmN0aW9uKHAxLCBwMikge1xuXHRcdF90ZW1wUG9pbnQueCA9IE1hdGguYWJzKCBwMS54IC0gcDIueCApO1xuXHRcdF90ZW1wUG9pbnQueSA9IE1hdGguYWJzKCBwMS55IC0gcDIueSApO1xuXHRcdHJldHVybiBNYXRoLnNxcnQoX3RlbXBQb2ludC54ICogX3RlbXBQb2ludC54ICsgX3RlbXBQb2ludC55ICogX3RlbXBQb2ludC55KTtcblx0fSxcblx0X3N0b3BEcmFnVXBkYXRlTG9vcCA9IGZ1bmN0aW9uKCkge1xuXHRcdGlmKF9kcmFnQW5pbUZyYW1lKSB7XG5cdFx0XHRfY2FuY2VsQUYoX2RyYWdBbmltRnJhbWUpO1xuXHRcdFx0X2RyYWdBbmltRnJhbWUgPSBudWxsO1xuXHRcdH1cblx0fSxcblx0X2RyYWdVcGRhdGVMb29wID0gZnVuY3Rpb24oKSB7XG5cdFx0aWYoX2lzRHJhZ2dpbmcpIHtcblx0XHRcdF9kcmFnQW5pbUZyYW1lID0gX3JlcXVlc3RBRihfZHJhZ1VwZGF0ZUxvb3ApO1xuXHRcdFx0X3JlbmRlck1vdmVtZW50KCk7XG5cdFx0fVxuXHR9LFxuXHRfY2FuUGFuID0gZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuICEoX29wdGlvbnMuc2NhbGVNb2RlID09PSAnZml0JyAmJiBfY3Vyclpvb21MZXZlbCA9PT0gIHNlbGYuY3Vyckl0ZW0uaW5pdGlhbFpvb21MZXZlbCk7XG5cdH0sXG5cdFxuXHQvLyBmaW5kIHRoZSBjbG9zZXN0IHBhcmVudCBET00gZWxlbWVudFxuXHRfY2xvc2VzdEVsZW1lbnQgPSBmdW5jdGlvbihlbCwgZm4pIHtcblx0ICBcdGlmKCFlbCB8fCBlbCA9PT0gZG9jdW1lbnQpIHtcblx0ICBcdFx0cmV0dXJuIGZhbHNlO1xuXHQgIFx0fVxuXG5cdCAgXHQvLyBkb24ndCBzZWFyY2ggZWxlbWVudHMgYWJvdmUgcHN3cF9fc2Nyb2xsLXdyYXBcblx0ICBcdGlmKGVsLmdldEF0dHJpYnV0ZSgnY2xhc3MnKSAmJiBlbC5nZXRBdHRyaWJ1dGUoJ2NsYXNzJykuaW5kZXhPZigncHN3cF9fc2Nyb2xsLXdyYXAnKSA+IC0xICkge1xuXHQgIFx0XHRyZXR1cm4gZmFsc2U7XG5cdCAgXHR9XG5cblx0ICBcdGlmKCBmbihlbCkgKSB7XG5cdCAgXHRcdHJldHVybiBlbDtcblx0ICBcdH1cblxuXHQgIFx0cmV0dXJuIF9jbG9zZXN0RWxlbWVudChlbC5wYXJlbnROb2RlLCBmbik7XG5cdH0sXG5cblx0X3ByZXZlbnRPYmogPSB7fSxcblx0X3ByZXZlbnREZWZhdWx0RXZlbnRCZWhhdmlvdXIgPSBmdW5jdGlvbihlLCBpc0Rvd24pIHtcblx0ICAgIF9wcmV2ZW50T2JqLnByZXZlbnQgPSAhX2Nsb3Nlc3RFbGVtZW50KGUudGFyZ2V0LCBfb3B0aW9ucy5pc0NsaWNrYWJsZUVsZW1lbnQpO1xuXG5cdFx0X3Nob3V0KCdwcmV2ZW50RHJhZ0V2ZW50JywgZSwgaXNEb3duLCBfcHJldmVudE9iaik7XG5cdFx0cmV0dXJuIF9wcmV2ZW50T2JqLnByZXZlbnQ7XG5cblx0fSxcblx0X2NvbnZlcnRUb3VjaFRvUG9pbnQgPSBmdW5jdGlvbih0b3VjaCwgcCkge1xuXHRcdHAueCA9IHRvdWNoLnBhZ2VYO1xuXHRcdHAueSA9IHRvdWNoLnBhZ2VZO1xuXHRcdHAuaWQgPSB0b3VjaC5pZGVudGlmaWVyO1xuXHRcdHJldHVybiBwO1xuXHR9LFxuXHRfZmluZENlbnRlck9mUG9pbnRzID0gZnVuY3Rpb24ocDEsIHAyLCBwQ2VudGVyKSB7XG5cdFx0cENlbnRlci54ID0gKHAxLnggKyBwMi54KSAqIDAuNTtcblx0XHRwQ2VudGVyLnkgPSAocDEueSArIHAyLnkpICogMC41O1xuXHR9LFxuXHRfcHVzaFBvc1BvaW50ID0gZnVuY3Rpb24odGltZSwgeCwgeSkge1xuXHRcdGlmKHRpbWUgLSBfZ2VzdHVyZUNoZWNrU3BlZWRUaW1lID4gNTApIHtcblx0XHRcdHZhciBvID0gX3Bvc1BvaW50cy5sZW5ndGggPiAyID8gX3Bvc1BvaW50cy5zaGlmdCgpIDoge307XG5cdFx0XHRvLnggPSB4O1xuXHRcdFx0by55ID0geTsgXG5cdFx0XHRfcG9zUG9pbnRzLnB1c2gobyk7XG5cdFx0XHRfZ2VzdHVyZUNoZWNrU3BlZWRUaW1lID0gdGltZTtcblx0XHR9XG5cdH0sXG5cblx0X2NhbGN1bGF0ZVZlcnRpY2FsRHJhZ09wYWNpdHlSYXRpbyA9IGZ1bmN0aW9uKCkge1xuXHRcdHZhciB5T2Zmc2V0ID0gX3Bhbk9mZnNldC55IC0gc2VsZi5jdXJySXRlbS5pbml0aWFsUG9zaXRpb24ueTsgLy8gZGlmZmVyZW5jZSBiZXR3ZWVuIGluaXRpYWwgYW5kIGN1cnJlbnQgcG9zaXRpb25cblx0XHRyZXR1cm4gMSAtICBNYXRoLmFicyggeU9mZnNldCAvIChfdmlld3BvcnRTaXplLnkgLyAyKSAgKTtcblx0fSxcblxuXHRcblx0Ly8gcG9pbnRzIHBvb2wsIHJldXNlZCBkdXJpbmcgdG91Y2ggZXZlbnRzXG5cdF9lUG9pbnQxID0ge30sXG5cdF9lUG9pbnQyID0ge30sXG5cdF90ZW1wUG9pbnRzQXJyID0gW10sXG5cdF90ZW1wQ291bnRlcixcblx0X2dldFRvdWNoUG9pbnRzID0gZnVuY3Rpb24oZSkge1xuXHRcdC8vIGNsZWFuIHVwIHByZXZpb3VzIHBvaW50cywgd2l0aG91dCByZWNyZWF0aW5nIGFycmF5XG5cdFx0d2hpbGUoX3RlbXBQb2ludHNBcnIubGVuZ3RoID4gMCkge1xuXHRcdFx0X3RlbXBQb2ludHNBcnIucG9wKCk7XG5cdFx0fVxuXG5cdFx0aWYoIV9wb2ludGVyRXZlbnRFbmFibGVkKSB7XG5cdFx0XHRpZihlLnR5cGUuaW5kZXhPZigndG91Y2gnKSA+IC0xKSB7XG5cblx0XHRcdFx0aWYoZS50b3VjaGVzICYmIGUudG91Y2hlcy5sZW5ndGggPiAwKSB7XG5cdFx0XHRcdFx0X3RlbXBQb2ludHNBcnJbMF0gPSBfY29udmVydFRvdWNoVG9Qb2ludChlLnRvdWNoZXNbMF0sIF9lUG9pbnQxKTtcblx0XHRcdFx0XHRpZihlLnRvdWNoZXMubGVuZ3RoID4gMSkge1xuXHRcdFx0XHRcdFx0X3RlbXBQb2ludHNBcnJbMV0gPSBfY29udmVydFRvdWNoVG9Qb2ludChlLnRvdWNoZXNbMV0sIF9lUG9pbnQyKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRfZVBvaW50MS54ID0gZS5wYWdlWDtcblx0XHRcdFx0X2VQb2ludDEueSA9IGUucGFnZVk7XG5cdFx0XHRcdF9lUG9pbnQxLmlkID0gJyc7XG5cdFx0XHRcdF90ZW1wUG9pbnRzQXJyWzBdID0gX2VQb2ludDE7Ly9fZVBvaW50MTtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0X3RlbXBDb3VudGVyID0gMDtcblx0XHRcdC8vIHdlIGNhbiB1c2UgZm9yRWFjaCwgYXMgcG9pbnRlciBldmVudHMgYXJlIHN1cHBvcnRlZCBvbmx5IGluIG1vZGVybiBicm93c2Vyc1xuXHRcdFx0X2N1cnJQb2ludGVycy5mb3JFYWNoKGZ1bmN0aW9uKHApIHtcblx0XHRcdFx0aWYoX3RlbXBDb3VudGVyID09PSAwKSB7XG5cdFx0XHRcdFx0X3RlbXBQb2ludHNBcnJbMF0gPSBwO1xuXHRcdFx0XHR9IGVsc2UgaWYoX3RlbXBDb3VudGVyID09PSAxKSB7XG5cdFx0XHRcdFx0X3RlbXBQb2ludHNBcnJbMV0gPSBwO1xuXHRcdFx0XHR9XG5cdFx0XHRcdF90ZW1wQ291bnRlcisrO1xuXG5cdFx0XHR9KTtcblx0XHR9XG5cdFx0cmV0dXJuIF90ZW1wUG9pbnRzQXJyO1xuXHR9LFxuXG5cdF9wYW5Pck1vdmVNYWluU2Nyb2xsID0gZnVuY3Rpb24oYXhpcywgZGVsdGEpIHtcblxuXHRcdHZhciBwYW5GcmljdGlvbixcblx0XHRcdG92ZXJEaWZmID0gMCxcblx0XHRcdG5ld09mZnNldCA9IF9wYW5PZmZzZXRbYXhpc10gKyBkZWx0YVtheGlzXSxcblx0XHRcdHN0YXJ0T3ZlckRpZmYsXG5cdFx0XHRkaXIgPSBkZWx0YVtheGlzXSA+IDAsXG5cdFx0XHRuZXdNYWluU2Nyb2xsUG9zaXRpb24gPSBfbWFpblNjcm9sbFBvcy54ICsgZGVsdGEueCxcblx0XHRcdG1haW5TY3JvbGxEaWZmID0gX21haW5TY3JvbGxQb3MueCAtIF9zdGFydE1haW5TY3JvbGxQb3MueCxcblx0XHRcdG5ld1BhblBvcyxcblx0XHRcdG5ld01haW5TY3JvbGxQb3M7XG5cblx0XHQvLyBjYWxjdWxhdGUgZmRpc3RhbmNlIG92ZXIgdGhlIGJvdW5kcyBhbmQgZnJpY3Rpb25cblx0XHRpZihuZXdPZmZzZXQgPiBfY3VyclBhbkJvdW5kcy5taW5bYXhpc10gfHwgbmV3T2Zmc2V0IDwgX2N1cnJQYW5Cb3VuZHMubWF4W2F4aXNdKSB7XG5cdFx0XHRwYW5GcmljdGlvbiA9IF9vcHRpb25zLnBhbkVuZEZyaWN0aW9uO1xuXHRcdFx0Ly8gTGluZWFyIGluY3JlYXNpbmcgb2YgZnJpY3Rpb24sIHNvIGF0IDEvNCBvZiB2aWV3cG9ydCBpdCdzIGF0IG1heCB2YWx1ZS4gXG5cdFx0XHQvLyBMb29rcyBub3QgYXMgbmljZSBhcyB3YXMgZXhwZWN0ZWQuIExlZnQgZm9yIGhpc3RvcnkuXG5cdFx0XHQvLyBwYW5GcmljdGlvbiA9ICgxIC0gKF9wYW5PZmZzZXRbYXhpc10gKyBkZWx0YVtheGlzXSArIHBhbkJvdW5kcy5taW5bYXhpc10pIC8gKF92aWV3cG9ydFNpemVbYXhpc10gLyA0KSApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRwYW5GcmljdGlvbiA9IDE7XG5cdFx0fVxuXHRcdFxuXHRcdG5ld09mZnNldCA9IF9wYW5PZmZzZXRbYXhpc10gKyBkZWx0YVtheGlzXSAqIHBhbkZyaWN0aW9uO1xuXG5cdFx0Ly8gbW92ZSBtYWluIHNjcm9sbCBvciBzdGFydCBwYW5uaW5nXG5cdFx0aWYoX29wdGlvbnMuYWxsb3dQYW5Ub05leHQgfHwgX2N1cnJab29tTGV2ZWwgPT09IHNlbGYuY3Vyckl0ZW0uaW5pdGlhbFpvb21MZXZlbCkge1xuXG5cblx0XHRcdGlmKCFfY3Vyclpvb21FbGVtZW50U3R5bGUpIHtcblx0XHRcdFx0XG5cdFx0XHRcdG5ld01haW5TY3JvbGxQb3MgPSBuZXdNYWluU2Nyb2xsUG9zaXRpb247XG5cblx0XHRcdH0gZWxzZSBpZihfZGlyZWN0aW9uID09PSAnaCcgJiYgYXhpcyA9PT0gJ3gnICYmICFfem9vbVN0YXJ0ZWQgKSB7XG5cdFx0XHRcdFxuXHRcdFx0XHRpZihkaXIpIHtcblx0XHRcdFx0XHRpZihuZXdPZmZzZXQgPiBfY3VyclBhbkJvdW5kcy5taW5bYXhpc10pIHtcblx0XHRcdFx0XHRcdHBhbkZyaWN0aW9uID0gX29wdGlvbnMucGFuRW5kRnJpY3Rpb247XG5cdFx0XHRcdFx0XHRvdmVyRGlmZiA9IF9jdXJyUGFuQm91bmRzLm1pbltheGlzXSAtIG5ld09mZnNldDtcblx0XHRcdFx0XHRcdHN0YXJ0T3ZlckRpZmYgPSBfY3VyclBhbkJvdW5kcy5taW5bYXhpc10gLSBfc3RhcnRQYW5PZmZzZXRbYXhpc107XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFxuXHRcdFx0XHRcdC8vIGRyYWcgcmlnaHRcblx0XHRcdFx0XHRpZiggKHN0YXJ0T3ZlckRpZmYgPD0gMCB8fCBtYWluU2Nyb2xsRGlmZiA8IDApICYmIF9nZXROdW1JdGVtcygpID4gMSApIHtcblx0XHRcdFx0XHRcdG5ld01haW5TY3JvbGxQb3MgPSBuZXdNYWluU2Nyb2xsUG9zaXRpb247XG5cdFx0XHRcdFx0XHRpZihtYWluU2Nyb2xsRGlmZiA8IDAgJiYgbmV3TWFpblNjcm9sbFBvc2l0aW9uID4gX3N0YXJ0TWFpblNjcm9sbFBvcy54KSB7XG5cdFx0XHRcdFx0XHRcdG5ld01haW5TY3JvbGxQb3MgPSBfc3RhcnRNYWluU2Nyb2xsUG9zLng7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGlmKF9jdXJyUGFuQm91bmRzLm1pbi54ICE9PSBfY3VyclBhbkJvdW5kcy5tYXgueCkge1xuXHRcdFx0XHRcdFx0XHRuZXdQYW5Qb3MgPSBuZXdPZmZzZXQ7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHRcdGlmKG5ld09mZnNldCA8IF9jdXJyUGFuQm91bmRzLm1heFtheGlzXSApIHtcblx0XHRcdFx0XHRcdHBhbkZyaWN0aW9uID1fb3B0aW9ucy5wYW5FbmRGcmljdGlvbjtcblx0XHRcdFx0XHRcdG92ZXJEaWZmID0gbmV3T2Zmc2V0IC0gX2N1cnJQYW5Cb3VuZHMubWF4W2F4aXNdO1xuXHRcdFx0XHRcdFx0c3RhcnRPdmVyRGlmZiA9IF9zdGFydFBhbk9mZnNldFtheGlzXSAtIF9jdXJyUGFuQm91bmRzLm1heFtheGlzXTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRpZiggKHN0YXJ0T3ZlckRpZmYgPD0gMCB8fCBtYWluU2Nyb2xsRGlmZiA+IDApICYmIF9nZXROdW1JdGVtcygpID4gMSApIHtcblx0XHRcdFx0XHRcdG5ld01haW5TY3JvbGxQb3MgPSBuZXdNYWluU2Nyb2xsUG9zaXRpb247XG5cblx0XHRcdFx0XHRcdGlmKG1haW5TY3JvbGxEaWZmID4gMCAmJiBuZXdNYWluU2Nyb2xsUG9zaXRpb24gPCBfc3RhcnRNYWluU2Nyb2xsUG9zLngpIHtcblx0XHRcdFx0XHRcdFx0bmV3TWFpblNjcm9sbFBvcyA9IF9zdGFydE1haW5TY3JvbGxQb3MueDtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRpZihfY3VyclBhbkJvdW5kcy5taW4ueCAhPT0gX2N1cnJQYW5Cb3VuZHMubWF4LngpIHtcblx0XHRcdFx0XHRcdFx0bmV3UGFuUG9zID0gbmV3T2Zmc2V0O1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHR9XG5cblxuXHRcdFx0XHQvL1xuXHRcdFx0fVxuXG5cdFx0XHRpZihheGlzID09PSAneCcpIHtcblxuXHRcdFx0XHRpZihuZXdNYWluU2Nyb2xsUG9zICE9PSB1bmRlZmluZWQpIHtcblx0XHRcdFx0XHRfbW92ZU1haW5TY3JvbGwobmV3TWFpblNjcm9sbFBvcywgdHJ1ZSk7XG5cdFx0XHRcdFx0aWYobmV3TWFpblNjcm9sbFBvcyA9PT0gX3N0YXJ0TWFpblNjcm9sbFBvcy54KSB7XG5cdFx0XHRcdFx0XHRfbWFpblNjcm9sbFNoaWZ0ZWQgPSBmYWxzZTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0X21haW5TY3JvbGxTaGlmdGVkID0gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZihfY3VyclBhbkJvdW5kcy5taW4ueCAhPT0gX2N1cnJQYW5Cb3VuZHMubWF4LngpIHtcblx0XHRcdFx0XHRpZihuZXdQYW5Qb3MgIT09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRcdFx0X3Bhbk9mZnNldC54ID0gbmV3UGFuUG9zO1xuXHRcdFx0XHRcdH0gZWxzZSBpZighX21haW5TY3JvbGxTaGlmdGVkKSB7XG5cdFx0XHRcdFx0XHRfcGFuT2Zmc2V0LnggKz0gZGVsdGEueCAqIHBhbkZyaWN0aW9uO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiBuZXdNYWluU2Nyb2xsUG9zICE9PSB1bmRlZmluZWQ7XG5cdFx0XHR9XG5cblx0XHR9XG5cblx0XHRpZighX21haW5TY3JvbGxBbmltYXRpbmcpIHtcblx0XHRcdFxuXHRcdFx0aWYoIV9tYWluU2Nyb2xsU2hpZnRlZCkge1xuXHRcdFx0XHRpZihfY3Vyclpvb21MZXZlbCA+IHNlbGYuY3Vyckl0ZW0uZml0UmF0aW8pIHtcblx0XHRcdFx0XHRfcGFuT2Zmc2V0W2F4aXNdICs9IGRlbHRhW2F4aXNdICogcGFuRnJpY3Rpb247XG5cdFx0XHRcdFxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdFxuXHRcdH1cblx0XHRcblx0fSxcblxuXHQvLyBQb2ludGVyZG93bi90b3VjaHN0YXJ0L21vdXNlZG93biBoYW5kbGVyXG5cdF9vbkRyYWdTdGFydCA9IGZ1bmN0aW9uKGUpIHtcblxuXHRcdC8vIEFsbG93IGRyYWdnaW5nIG9ubHkgdmlhIGxlZnQgbW91c2UgYnV0dG9uLlxuXHRcdC8vIEFzIHRoaXMgaGFuZGxlciBpcyBub3QgYWRkZWQgaW4gSUU4IC0gd2UgaWdub3JlIGUud2hpY2hcblx0XHQvLyBcblx0XHQvLyBodHRwOi8vd3d3LnF1aXJrc21vZGUub3JnL2pzL2V2ZW50c19wcm9wZXJ0aWVzLmh0bWxcblx0XHQvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvZXZlbnQuYnV0dG9uXG5cdFx0aWYoZS50eXBlID09PSAnbW91c2Vkb3duJyAmJiBlLmJ1dHRvbiA+IDAgICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmKF9pbml0aWFsWm9vbVJ1bm5pbmcpIHtcblx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRpZihfb2xkQW5kcm9pZFRvdWNoRW5kVGltZW91dCAmJiBlLnR5cGUgPT09ICdtb3VzZWRvd24nKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0aWYoX3ByZXZlbnREZWZhdWx0RXZlbnRCZWhhdmlvdXIoZSwgdHJ1ZSkpIHtcblx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHR9XG5cblxuXG5cdFx0X3Nob3V0KCdwb2ludGVyRG93bicpO1xuXG5cdFx0aWYoX3BvaW50ZXJFdmVudEVuYWJsZWQpIHtcblx0XHRcdHZhciBwb2ludGVySW5kZXggPSBmcmFtZXdvcmsuYXJyYXlTZWFyY2goX2N1cnJQb2ludGVycywgZS5wb2ludGVySWQsICdpZCcpO1xuXHRcdFx0aWYocG9pbnRlckluZGV4IDwgMCkge1xuXHRcdFx0XHRwb2ludGVySW5kZXggPSBfY3VyclBvaW50ZXJzLmxlbmd0aDtcblx0XHRcdH1cblx0XHRcdF9jdXJyUG9pbnRlcnNbcG9pbnRlckluZGV4XSA9IHt4OmUucGFnZVgsIHk6ZS5wYWdlWSwgaWQ6IGUucG9pbnRlcklkfTtcblx0XHR9XG5cdFx0XG5cblxuXHRcdHZhciBzdGFydFBvaW50c0xpc3QgPSBfZ2V0VG91Y2hQb2ludHMoZSksXG5cdFx0XHRudW1Qb2ludHMgPSBzdGFydFBvaW50c0xpc3QubGVuZ3RoO1xuXG5cdFx0X2N1cnJlbnRQb2ludHMgPSBudWxsO1xuXG5cdFx0X3N0b3BBbGxBbmltYXRpb25zKCk7XG5cblx0XHQvLyBpbml0IGRyYWdcblx0XHRpZighX2lzRHJhZ2dpbmcgfHwgbnVtUG9pbnRzID09PSAxKSB7XG5cblx0XHRcdFxuXG5cdFx0XHRfaXNEcmFnZ2luZyA9IF9pc0ZpcnN0TW92ZSA9IHRydWU7XG5cdFx0XHRmcmFtZXdvcmsuYmluZCh3aW5kb3csIF91cE1vdmVFdmVudHMsIHNlbGYpO1xuXG5cdFx0XHRfaXNab29taW5nSW4gPSBcblx0XHRcdFx0X3dhc092ZXJJbml0aWFsWm9vbSA9IFxuXHRcdFx0XHRfb3BhY2l0eUNoYW5nZWQgPSBcblx0XHRcdFx0X3ZlcnRpY2FsRHJhZ0luaXRpYXRlZCA9IFxuXHRcdFx0XHRfbWFpblNjcm9sbFNoaWZ0ZWQgPSBcblx0XHRcdFx0X21vdmVkID0gXG5cdFx0XHRcdF9pc011bHRpdG91Y2ggPSBcblx0XHRcdFx0X3pvb21TdGFydGVkID0gZmFsc2U7XG5cblx0XHRcdF9kaXJlY3Rpb24gPSBudWxsO1xuXG5cdFx0XHRfc2hvdXQoJ2ZpcnN0VG91Y2hTdGFydCcsIHN0YXJ0UG9pbnRzTGlzdCk7XG5cblx0XHRcdF9lcXVhbGl6ZVBvaW50cyhfc3RhcnRQYW5PZmZzZXQsIF9wYW5PZmZzZXQpO1xuXG5cdFx0XHRfY3VyclBhbkRpc3QueCA9IF9jdXJyUGFuRGlzdC55ID0gMDtcblx0XHRcdF9lcXVhbGl6ZVBvaW50cyhfY3VyclBvaW50LCBzdGFydFBvaW50c0xpc3RbMF0pO1xuXHRcdFx0X2VxdWFsaXplUG9pbnRzKF9zdGFydFBvaW50LCBfY3VyclBvaW50KTtcblxuXHRcdFx0Ly9fZXF1YWxpemVQb2ludHMoX3N0YXJ0TWFpblNjcm9sbFBvcywgX21haW5TY3JvbGxQb3MpO1xuXHRcdFx0X3N0YXJ0TWFpblNjcm9sbFBvcy54ID0gX3NsaWRlU2l6ZS54ICogX2N1cnJQb3NpdGlvbkluZGV4O1xuXG5cdFx0XHRfcG9zUG9pbnRzID0gW3tcblx0XHRcdFx0eDogX2N1cnJQb2ludC54LFxuXHRcdFx0XHR5OiBfY3VyclBvaW50Lnlcblx0XHRcdH1dO1xuXG5cdFx0XHRfZ2VzdHVyZUNoZWNrU3BlZWRUaW1lID0gX2dlc3R1cmVTdGFydFRpbWUgPSBfZ2V0Q3VycmVudFRpbWUoKTtcblxuXHRcdFx0Ly9fbWFpblNjcm9sbEFuaW1hdGlvbkVuZCh0cnVlKTtcblx0XHRcdF9jYWxjdWxhdGVQYW5Cb3VuZHMoIF9jdXJyWm9vbUxldmVsLCB0cnVlICk7XG5cdFx0XHRcblx0XHRcdC8vIFN0YXJ0IHJlbmRlcmluZ1xuXHRcdFx0X3N0b3BEcmFnVXBkYXRlTG9vcCgpO1xuXHRcdFx0X2RyYWdVcGRhdGVMb29wKCk7XG5cdFx0XHRcblx0XHR9XG5cblx0XHQvLyBpbml0IHpvb21cblx0XHRpZighX2lzWm9vbWluZyAmJiBudW1Qb2ludHMgPiAxICYmICFfbWFpblNjcm9sbEFuaW1hdGluZyAmJiAhX21haW5TY3JvbGxTaGlmdGVkKSB7XG5cdFx0XHRfc3RhcnRab29tTGV2ZWwgPSBfY3Vyclpvb21MZXZlbDtcblx0XHRcdF96b29tU3RhcnRlZCA9IGZhbHNlOyAvLyB0cnVlIGlmIHpvb20gY2hhbmdlZCBhdCBsZWFzdCBvbmNlXG5cblx0XHRcdF9pc1pvb21pbmcgPSBfaXNNdWx0aXRvdWNoID0gdHJ1ZTtcblx0XHRcdF9jdXJyUGFuRGlzdC55ID0gX2N1cnJQYW5EaXN0LnggPSAwO1xuXG5cdFx0XHRfZXF1YWxpemVQb2ludHMoX3N0YXJ0UGFuT2Zmc2V0LCBfcGFuT2Zmc2V0KTtcblxuXHRcdFx0X2VxdWFsaXplUG9pbnRzKHAsIHN0YXJ0UG9pbnRzTGlzdFswXSk7XG5cdFx0XHRfZXF1YWxpemVQb2ludHMocDIsIHN0YXJ0UG9pbnRzTGlzdFsxXSk7XG5cblx0XHRcdF9maW5kQ2VudGVyT2ZQb2ludHMocCwgcDIsIF9jdXJyQ2VudGVyUG9pbnQpO1xuXG5cdFx0XHRfbWlkWm9vbVBvaW50LnggPSBNYXRoLmFicyhfY3VyckNlbnRlclBvaW50LngpIC0gX3Bhbk9mZnNldC54O1xuXHRcdFx0X21pZFpvb21Qb2ludC55ID0gTWF0aC5hYnMoX2N1cnJDZW50ZXJQb2ludC55KSAtIF9wYW5PZmZzZXQueTtcblx0XHRcdF9jdXJyUG9pbnRzRGlzdGFuY2UgPSBfc3RhcnRQb2ludHNEaXN0YW5jZSA9IF9jYWxjdWxhdGVQb2ludHNEaXN0YW5jZShwLCBwMik7XG5cdFx0fVxuXG5cblx0fSxcblxuXHQvLyBQb2ludGVybW92ZS90b3VjaG1vdmUvbW91c2Vtb3ZlIGhhbmRsZXJcblx0X29uRHJhZ01vdmUgPSBmdW5jdGlvbihlKSB7XG5cblx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cblx0XHRpZihfcG9pbnRlckV2ZW50RW5hYmxlZCkge1xuXHRcdFx0dmFyIHBvaW50ZXJJbmRleCA9IGZyYW1ld29yay5hcnJheVNlYXJjaChfY3VyclBvaW50ZXJzLCBlLnBvaW50ZXJJZCwgJ2lkJyk7XG5cdFx0XHRpZihwb2ludGVySW5kZXggPiAtMSkge1xuXHRcdFx0XHR2YXIgcCA9IF9jdXJyUG9pbnRlcnNbcG9pbnRlckluZGV4XTtcblx0XHRcdFx0cC54ID0gZS5wYWdlWDtcblx0XHRcdFx0cC55ID0gZS5wYWdlWTsgXG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYoX2lzRHJhZ2dpbmcpIHtcblx0XHRcdHZhciB0b3VjaGVzTGlzdCA9IF9nZXRUb3VjaFBvaW50cyhlKTtcblx0XHRcdGlmKCFfZGlyZWN0aW9uICYmICFfbW92ZWQgJiYgIV9pc1pvb21pbmcpIHtcblxuXHRcdFx0XHRpZihfbWFpblNjcm9sbFBvcy54ICE9PSBfc2xpZGVTaXplLnggKiBfY3VyclBvc2l0aW9uSW5kZXgpIHtcblx0XHRcdFx0XHQvLyBpZiBtYWluIHNjcm9sbCBwb3NpdGlvbiBpcyBzaGlmdGVkIOKAkyBkaXJlY3Rpb24gaXMgYWx3YXlzIGhvcml6b250YWxcblx0XHRcdFx0XHRfZGlyZWN0aW9uID0gJ2gnO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHZhciBkaWZmID0gTWF0aC5hYnModG91Y2hlc0xpc3RbMF0ueCAtIF9jdXJyUG9pbnQueCkgLSBNYXRoLmFicyh0b3VjaGVzTGlzdFswXS55IC0gX2N1cnJQb2ludC55KTtcblx0XHRcdFx0XHQvLyBjaGVjayB0aGUgZGlyZWN0aW9uIG9mIG1vdmVtZW50XG5cdFx0XHRcdFx0aWYoTWF0aC5hYnMoZGlmZikgPj0gRElSRUNUSU9OX0NIRUNLX09GRlNFVCkge1xuXHRcdFx0XHRcdFx0X2RpcmVjdGlvbiA9IGRpZmYgPiAwID8gJ2gnIDogJ3YnO1xuXHRcdFx0XHRcdFx0X2N1cnJlbnRQb2ludHMgPSB0b3VjaGVzTGlzdDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRfY3VycmVudFBvaW50cyA9IHRvdWNoZXNMaXN0O1xuXHRcdFx0fVxuXHRcdH1cdFxuXHR9LFxuXHQvLyBcblx0X3JlbmRlck1vdmVtZW50ID0gIGZ1bmN0aW9uKCkge1xuXG5cdFx0aWYoIV9jdXJyZW50UG9pbnRzKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0dmFyIG51bVBvaW50cyA9IF9jdXJyZW50UG9pbnRzLmxlbmd0aDtcblxuXHRcdGlmKG51bVBvaW50cyA9PT0gMCkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdF9lcXVhbGl6ZVBvaW50cyhwLCBfY3VycmVudFBvaW50c1swXSk7XG5cblx0XHRkZWx0YS54ID0gcC54IC0gX2N1cnJQb2ludC54O1xuXHRcdGRlbHRhLnkgPSBwLnkgLSBfY3VyclBvaW50Lnk7XG5cblx0XHRpZihfaXNab29taW5nICYmIG51bVBvaW50cyA+IDEpIHtcblx0XHRcdC8vIEhhbmRsZSBiZWhhdmlvdXIgZm9yIG1vcmUgdGhhbiAxIHBvaW50XG5cblx0XHRcdF9jdXJyUG9pbnQueCA9IHAueDtcblx0XHRcdF9jdXJyUG9pbnQueSA9IHAueTtcblx0XHRcblx0XHRcdC8vIGNoZWNrIGlmIG9uZSBvZiB0d28gcG9pbnRzIGNoYW5nZWRcblx0XHRcdGlmKCAhZGVsdGEueCAmJiAhZGVsdGEueSAmJiBfaXNFcXVhbFBvaW50cyhfY3VycmVudFBvaW50c1sxXSwgcDIpICkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdF9lcXVhbGl6ZVBvaW50cyhwMiwgX2N1cnJlbnRQb2ludHNbMV0pO1xuXG5cblx0XHRcdGlmKCFfem9vbVN0YXJ0ZWQpIHtcblx0XHRcdFx0X3pvb21TdGFydGVkID0gdHJ1ZTtcblx0XHRcdFx0X3Nob3V0KCd6b29tR2VzdHVyZVN0YXJ0ZWQnKTtcblx0XHRcdH1cblx0XHRcdFxuXHRcdFx0Ly8gRGlzdGFuY2UgYmV0d2VlbiB0d28gcG9pbnRzXG5cdFx0XHR2YXIgcG9pbnRzRGlzdGFuY2UgPSBfY2FsY3VsYXRlUG9pbnRzRGlzdGFuY2UocCxwMik7XG5cblx0XHRcdHZhciB6b29tTGV2ZWwgPSBfY2FsY3VsYXRlWm9vbUxldmVsKHBvaW50c0Rpc3RhbmNlKTtcblxuXHRcdFx0Ly8gc2xpZ2h0bHkgb3ZlciB0aGUgb2YgaW5pdGlhbCB6b29tIGxldmVsXG5cdFx0XHRpZih6b29tTGV2ZWwgPiBzZWxmLmN1cnJJdGVtLmluaXRpYWxab29tTGV2ZWwgKyBzZWxmLmN1cnJJdGVtLmluaXRpYWxab29tTGV2ZWwgLyAxNSkge1xuXHRcdFx0XHRfd2FzT3ZlckluaXRpYWxab29tID0gdHJ1ZTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQXBwbHkgdGhlIGZyaWN0aW9uIGlmIHpvb20gbGV2ZWwgaXMgb3V0IG9mIHRoZSBib3VuZHNcblx0XHRcdHZhciB6b29tRnJpY3Rpb24gPSAxLFxuXHRcdFx0XHRtaW5ab29tTGV2ZWwgPSBfZ2V0TWluWm9vbUxldmVsKCksXG5cdFx0XHRcdG1heFpvb21MZXZlbCA9IF9nZXRNYXhab29tTGV2ZWwoKTtcblxuXHRcdFx0aWYgKCB6b29tTGV2ZWwgPCBtaW5ab29tTGV2ZWwgKSB7XG5cdFx0XHRcdFxuXHRcdFx0XHRpZihfb3B0aW9ucy5waW5jaFRvQ2xvc2UgJiYgIV93YXNPdmVySW5pdGlhbFpvb20gJiYgX3N0YXJ0Wm9vbUxldmVsIDw9IHNlbGYuY3Vyckl0ZW0uaW5pdGlhbFpvb21MZXZlbCkge1xuXHRcdFx0XHRcdC8vIGZhZGUgb3V0IGJhY2tncm91bmQgaWYgem9vbWluZyBvdXRcblx0XHRcdFx0XHR2YXIgbWludXNEaWZmID0gbWluWm9vbUxldmVsIC0gem9vbUxldmVsO1xuXHRcdFx0XHRcdHZhciBwZXJjZW50ID0gMSAtIG1pbnVzRGlmZiAvIChtaW5ab29tTGV2ZWwgLyAxLjIpO1xuXG5cdFx0XHRcdFx0X2FwcGx5QmdPcGFjaXR5KHBlcmNlbnQpO1xuXHRcdFx0XHRcdF9zaG91dCgnb25QaW5jaENsb3NlJywgcGVyY2VudCk7XG5cdFx0XHRcdFx0X29wYWNpdHlDaGFuZ2VkID0gdHJ1ZTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHR6b29tRnJpY3Rpb24gPSAobWluWm9vbUxldmVsIC0gem9vbUxldmVsKSAvIG1pblpvb21MZXZlbDtcblx0XHRcdFx0XHRpZih6b29tRnJpY3Rpb24gPiAxKSB7XG5cdFx0XHRcdFx0XHR6b29tRnJpY3Rpb24gPSAxO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHR6b29tTGV2ZWwgPSBtaW5ab29tTGV2ZWwgLSB6b29tRnJpY3Rpb24gKiAobWluWm9vbUxldmVsIC8gMyk7XG5cdFx0XHRcdH1cblx0XHRcdFx0XG5cdFx0XHR9IGVsc2UgaWYgKCB6b29tTGV2ZWwgPiBtYXhab29tTGV2ZWwgKSB7XG5cdFx0XHRcdC8vIDEuNSAtIGV4dHJhIHpvb20gbGV2ZWwgYWJvdmUgdGhlIG1heC4gRS5nLiBpZiBtYXggaXMgeDYsIHJlYWwgbWF4IDYgKyAxLjUgPSA3LjVcblx0XHRcdFx0em9vbUZyaWN0aW9uID0gKHpvb21MZXZlbCAtIG1heFpvb21MZXZlbCkgLyAoIG1pblpvb21MZXZlbCAqIDYgKTtcblx0XHRcdFx0aWYoem9vbUZyaWN0aW9uID4gMSkge1xuXHRcdFx0XHRcdHpvb21GcmljdGlvbiA9IDE7XG5cdFx0XHRcdH1cblx0XHRcdFx0em9vbUxldmVsID0gbWF4Wm9vbUxldmVsICsgem9vbUZyaWN0aW9uICogbWluWm9vbUxldmVsO1xuXHRcdFx0fVxuXG5cdFx0XHRpZih6b29tRnJpY3Rpb24gPCAwKSB7XG5cdFx0XHRcdHpvb21GcmljdGlvbiA9IDA7XG5cdFx0XHR9XG5cblx0XHRcdC8vIGRpc3RhbmNlIGJldHdlZW4gdG91Y2ggcG9pbnRzIGFmdGVyIGZyaWN0aW9uIGlzIGFwcGxpZWRcblx0XHRcdF9jdXJyUG9pbnRzRGlzdGFuY2UgPSBwb2ludHNEaXN0YW5jZTtcblxuXHRcdFx0Ly8gX2NlbnRlclBvaW50IC0gVGhlIHBvaW50IGluIHRoZSBtaWRkbGUgb2YgdHdvIHBvaW50ZXJzXG5cdFx0XHRfZmluZENlbnRlck9mUG9pbnRzKHAsIHAyLCBfY2VudGVyUG9pbnQpO1xuXHRcdFxuXHRcdFx0Ly8gcGFuaW5nIHdpdGggdHdvIHBvaW50ZXJzIHByZXNzZWRcblx0XHRcdF9jdXJyUGFuRGlzdC54ICs9IF9jZW50ZXJQb2ludC54IC0gX2N1cnJDZW50ZXJQb2ludC54O1xuXHRcdFx0X2N1cnJQYW5EaXN0LnkgKz0gX2NlbnRlclBvaW50LnkgLSBfY3VyckNlbnRlclBvaW50Lnk7XG5cdFx0XHRfZXF1YWxpemVQb2ludHMoX2N1cnJDZW50ZXJQb2ludCwgX2NlbnRlclBvaW50KTtcblxuXHRcdFx0X3Bhbk9mZnNldC54ID0gX2NhbGN1bGF0ZVBhbk9mZnNldCgneCcsIHpvb21MZXZlbCk7XG5cdFx0XHRfcGFuT2Zmc2V0LnkgPSBfY2FsY3VsYXRlUGFuT2Zmc2V0KCd5Jywgem9vbUxldmVsKTtcblxuXHRcdFx0X2lzWm9vbWluZ0luID0gem9vbUxldmVsID4gX2N1cnJab29tTGV2ZWw7XG5cdFx0XHRfY3Vyclpvb21MZXZlbCA9IHpvb21MZXZlbDtcblx0XHRcdF9hcHBseUN1cnJlbnRab29tUGFuKCk7XG5cblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyBoYW5kbGUgYmVoYXZpb3VyIGZvciBvbmUgcG9pbnQgKGRyYWdnaW5nIG9yIHBhbm5pbmcpXG5cblx0XHRcdGlmKCFfZGlyZWN0aW9uKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0aWYoX2lzRmlyc3RNb3ZlKSB7XG5cdFx0XHRcdF9pc0ZpcnN0TW92ZSA9IGZhbHNlO1xuXG5cdFx0XHRcdC8vIHN1YnRyYWN0IGRyYWcgZGlzdGFuY2UgdGhhdCB3YXMgdXNlZCBkdXJpbmcgdGhlIGRldGVjdGlvbiBkaXJlY3Rpb24gIFxuXG5cdFx0XHRcdGlmKCBNYXRoLmFicyhkZWx0YS54KSA+PSBESVJFQ1RJT05fQ0hFQ0tfT0ZGU0VUKSB7XG5cdFx0XHRcdFx0ZGVsdGEueCAtPSBfY3VycmVudFBvaW50c1swXS54IC0gX3N0YXJ0UG9pbnQueDtcblx0XHRcdFx0fVxuXHRcdFx0XHRcblx0XHRcdFx0aWYoIE1hdGguYWJzKGRlbHRhLnkpID49IERJUkVDVElPTl9DSEVDS19PRkZTRVQpIHtcblx0XHRcdFx0XHRkZWx0YS55IC09IF9jdXJyZW50UG9pbnRzWzBdLnkgLSBfc3RhcnRQb2ludC55O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdF9jdXJyUG9pbnQueCA9IHAueDtcblx0XHRcdF9jdXJyUG9pbnQueSA9IHAueTtcblxuXHRcdFx0Ly8gZG8gbm90aGluZyBpZiBwb2ludGVycyBwb3NpdGlvbiBoYXNuJ3QgY2hhbmdlZFxuXHRcdFx0aWYoZGVsdGEueCA9PT0gMCAmJiBkZWx0YS55ID09PSAwKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0aWYoX2RpcmVjdGlvbiA9PT0gJ3YnICYmIF9vcHRpb25zLmNsb3NlT25WZXJ0aWNhbERyYWcpIHtcblx0XHRcdFx0aWYoIV9jYW5QYW4oKSkge1xuXHRcdFx0XHRcdF9jdXJyUGFuRGlzdC55ICs9IGRlbHRhLnk7XG5cdFx0XHRcdFx0X3Bhbk9mZnNldC55ICs9IGRlbHRhLnk7XG5cblx0XHRcdFx0XHR2YXIgb3BhY2l0eVJhdGlvID0gX2NhbGN1bGF0ZVZlcnRpY2FsRHJhZ09wYWNpdHlSYXRpbygpO1xuXG5cdFx0XHRcdFx0X3ZlcnRpY2FsRHJhZ0luaXRpYXRlZCA9IHRydWU7XG5cdFx0XHRcdFx0X3Nob3V0KCdvblZlcnRpY2FsRHJhZycsIG9wYWNpdHlSYXRpbyk7XG5cblx0XHRcdFx0XHRfYXBwbHlCZ09wYWNpdHkob3BhY2l0eVJhdGlvKTtcblx0XHRcdFx0XHRfYXBwbHlDdXJyZW50Wm9vbVBhbigpO1xuXHRcdFx0XHRcdHJldHVybiA7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0X3B1c2hQb3NQb2ludChfZ2V0Q3VycmVudFRpbWUoKSwgcC54LCBwLnkpO1xuXG5cdFx0XHRfbW92ZWQgPSB0cnVlO1xuXHRcdFx0X2N1cnJQYW5Cb3VuZHMgPSBzZWxmLmN1cnJJdGVtLmJvdW5kcztcblx0XHRcdFxuXHRcdFx0dmFyIG1haW5TY3JvbGxDaGFuZ2VkID0gX3Bhbk9yTW92ZU1haW5TY3JvbGwoJ3gnLCBkZWx0YSk7XG5cdFx0XHRpZighbWFpblNjcm9sbENoYW5nZWQpIHtcblx0XHRcdFx0X3Bhbk9yTW92ZU1haW5TY3JvbGwoJ3knLCBkZWx0YSk7XG5cblx0XHRcdFx0X3JvdW5kUG9pbnQoX3Bhbk9mZnNldCk7XG5cdFx0XHRcdF9hcHBseUN1cnJlbnRab29tUGFuKCk7XG5cdFx0XHR9XG5cblx0XHR9XG5cblx0fSxcblx0XG5cdC8vIFBvaW50ZXJ1cC9wb2ludGVyY2FuY2VsL3RvdWNoZW5kL3RvdWNoY2FuY2VsL21vdXNldXAgZXZlbnQgaGFuZGxlclxuXHRfb25EcmFnUmVsZWFzZSA9IGZ1bmN0aW9uKGUpIHtcblxuXHRcdGlmKF9mZWF0dXJlcy5pc09sZEFuZHJvaWQgKSB7XG5cblx0XHRcdGlmKF9vbGRBbmRyb2lkVG91Y2hFbmRUaW1lb3V0ICYmIGUudHlwZSA9PT0gJ21vdXNldXAnKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gb24gQW5kcm9pZCAodjQuMSwgNC4yLCA0LjMgJiBwb3NzaWJseSBvbGRlcikgXG5cdFx0XHQvLyBnaG9zdCBtb3VzZWRvd24vdXAgZXZlbnQgaXNuJ3QgcHJldmVudGFibGUgdmlhIGUucHJldmVudERlZmF1bHQsXG5cdFx0XHQvLyB3aGljaCBjYXVzZXMgZmFrZSBtb3VzZWRvd24gZXZlbnRcblx0XHRcdC8vIHNvIHdlIGJsb2NrIG1vdXNlZG93bi91cCBmb3IgNjAwbXNcblx0XHRcdGlmKCBlLnR5cGUuaW5kZXhPZigndG91Y2gnKSA+IC0xICkge1xuXHRcdFx0XHRjbGVhclRpbWVvdXQoX29sZEFuZHJvaWRUb3VjaEVuZFRpbWVvdXQpO1xuXHRcdFx0XHRfb2xkQW5kcm9pZFRvdWNoRW5kVGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0X29sZEFuZHJvaWRUb3VjaEVuZFRpbWVvdXQgPSAwO1xuXHRcdFx0XHR9LCA2MDApO1xuXHRcdFx0fVxuXHRcdFx0XG5cdFx0fVxuXG5cdFx0X3Nob3V0KCdwb2ludGVyVXAnKTtcblxuXHRcdGlmKF9wcmV2ZW50RGVmYXVsdEV2ZW50QmVoYXZpb3VyKGUsIGZhbHNlKSkge1xuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdH1cblxuXHRcdHZhciByZWxlYXNlUG9pbnQ7XG5cblx0XHRpZihfcG9pbnRlckV2ZW50RW5hYmxlZCkge1xuXHRcdFx0dmFyIHBvaW50ZXJJbmRleCA9IGZyYW1ld29yay5hcnJheVNlYXJjaChfY3VyclBvaW50ZXJzLCBlLnBvaW50ZXJJZCwgJ2lkJyk7XG5cdFx0XHRcblx0XHRcdGlmKHBvaW50ZXJJbmRleCA+IC0xKSB7XG5cdFx0XHRcdHJlbGVhc2VQb2ludCA9IF9jdXJyUG9pbnRlcnMuc3BsaWNlKHBvaW50ZXJJbmRleCwgMSlbMF07XG5cblx0XHRcdFx0aWYobmF2aWdhdG9yLnBvaW50ZXJFbmFibGVkKSB7XG5cdFx0XHRcdFx0cmVsZWFzZVBvaW50LnR5cGUgPSBlLnBvaW50ZXJUeXBlIHx8ICdtb3VzZSc7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0dmFyIE1TUE9JTlRFUl9UWVBFUyA9IHtcblx0XHRcdFx0XHRcdDQ6ICdtb3VzZScsIC8vIGV2ZW50Lk1TUE9JTlRFUl9UWVBFX01PVVNFXG5cdFx0XHRcdFx0XHQyOiAndG91Y2gnLCAvLyBldmVudC5NU1BPSU5URVJfVFlQRV9UT1VDSCBcblx0XHRcdFx0XHRcdDM6ICdwZW4nIC8vIGV2ZW50Lk1TUE9JTlRFUl9UWVBFX1BFTlxuXHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0cmVsZWFzZVBvaW50LnR5cGUgPSBNU1BPSU5URVJfVFlQRVNbZS5wb2ludGVyVHlwZV07XG5cblx0XHRcdFx0XHRpZighcmVsZWFzZVBvaW50LnR5cGUpIHtcblx0XHRcdFx0XHRcdHJlbGVhc2VQb2ludC50eXBlID0gZS5wb2ludGVyVHlwZSB8fCAnbW91c2UnO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0dmFyIHRvdWNoTGlzdCA9IF9nZXRUb3VjaFBvaW50cyhlKSxcblx0XHRcdGdlc3R1cmVUeXBlLFxuXHRcdFx0bnVtUG9pbnRzID0gdG91Y2hMaXN0Lmxlbmd0aDtcblxuXHRcdGlmKGUudHlwZSA9PT0gJ21vdXNldXAnKSB7XG5cdFx0XHRudW1Qb2ludHMgPSAwO1xuXHRcdH1cblxuXHRcdC8vIERvIG5vdGhpbmcgaWYgdGhlcmUgd2VyZSAzIHRvdWNoIHBvaW50cyBvciBtb3JlXG5cdFx0aWYobnVtUG9pbnRzID09PSAyKSB7XG5cdFx0XHRfY3VycmVudFBvaW50cyA9IG51bGw7XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9XG5cblx0XHQvLyBpZiBzZWNvbmQgcG9pbnRlciByZWxlYXNlZFxuXHRcdGlmKG51bVBvaW50cyA9PT0gMSkge1xuXHRcdFx0X2VxdWFsaXplUG9pbnRzKF9zdGFydFBvaW50LCB0b3VjaExpc3RbMF0pO1xuXHRcdH1cdFx0XHRcdFxuXG5cblx0XHQvLyBwb2ludGVyIGhhc24ndCBtb3ZlZCwgc2VuZCBcInRhcCByZWxlYXNlXCIgcG9pbnRcblx0XHRpZihudW1Qb2ludHMgPT09IDAgJiYgIV9kaXJlY3Rpb24gJiYgIV9tYWluU2Nyb2xsQW5pbWF0aW5nKSB7XG5cdFx0XHRpZighcmVsZWFzZVBvaW50KSB7XG5cdFx0XHRcdGlmKGUudHlwZSA9PT0gJ21vdXNldXAnKSB7XG5cdFx0XHRcdFx0cmVsZWFzZVBvaW50ID0ge3g6IGUucGFnZVgsIHk6IGUucGFnZVksIHR5cGU6J21vdXNlJ307XG5cdFx0XHRcdH0gZWxzZSBpZihlLmNoYW5nZWRUb3VjaGVzICYmIGUuY2hhbmdlZFRvdWNoZXNbMF0pIHtcblx0XHRcdFx0XHRyZWxlYXNlUG9pbnQgPSB7eDogZS5jaGFuZ2VkVG91Y2hlc1swXS5wYWdlWCwgeTogZS5jaGFuZ2VkVG91Y2hlc1swXS5wYWdlWSwgdHlwZTondG91Y2gnfTtcblx0XHRcdFx0fVx0XHRcblx0XHRcdH1cblxuXHRcdFx0X3Nob3V0KCd0b3VjaFJlbGVhc2UnLCBlLCByZWxlYXNlUG9pbnQpO1xuXHRcdH1cblxuXHRcdC8vIERpZmZlcmVuY2UgaW4gdGltZSBiZXR3ZWVuIHJlbGVhc2luZyBvZiB0d28gbGFzdCB0b3VjaCBwb2ludHMgKHpvb20gZ2VzdHVyZSlcblx0XHR2YXIgcmVsZWFzZVRpbWVEaWZmID0gLTE7XG5cblx0XHQvLyBHZXN0dXJlIGNvbXBsZXRlZCwgbm8gcG9pbnRlcnMgbGVmdFxuXHRcdGlmKG51bVBvaW50cyA9PT0gMCkge1xuXHRcdFx0X2lzRHJhZ2dpbmcgPSBmYWxzZTtcblx0XHRcdGZyYW1ld29yay51bmJpbmQod2luZG93LCBfdXBNb3ZlRXZlbnRzLCBzZWxmKTtcblxuXHRcdFx0X3N0b3BEcmFnVXBkYXRlTG9vcCgpO1xuXG5cdFx0XHRpZihfaXNab29taW5nKSB7XG5cdFx0XHRcdC8vIFR3byBwb2ludHMgcmVsZWFzZWQgYXQgdGhlIHNhbWUgdGltZVxuXHRcdFx0XHRyZWxlYXNlVGltZURpZmYgPSAwO1xuXHRcdFx0fSBlbHNlIGlmKF9sYXN0UmVsZWFzZVRpbWUgIT09IC0xKSB7XG5cdFx0XHRcdHJlbGVhc2VUaW1lRGlmZiA9IF9nZXRDdXJyZW50VGltZSgpIC0gX2xhc3RSZWxlYXNlVGltZTtcblx0XHRcdH1cblx0XHR9XG5cdFx0X2xhc3RSZWxlYXNlVGltZSA9IG51bVBvaW50cyA9PT0gMSA/IF9nZXRDdXJyZW50VGltZSgpIDogLTE7XG5cdFx0XG5cdFx0aWYocmVsZWFzZVRpbWVEaWZmICE9PSAtMSAmJiByZWxlYXNlVGltZURpZmYgPCAxNTApIHtcblx0XHRcdGdlc3R1cmVUeXBlID0gJ3pvb20nO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRnZXN0dXJlVHlwZSA9ICdzd2lwZSc7XG5cdFx0fVxuXG5cdFx0aWYoX2lzWm9vbWluZyAmJiBudW1Qb2ludHMgPCAyKSB7XG5cdFx0XHRfaXNab29taW5nID0gZmFsc2U7XG5cblx0XHRcdC8vIE9ubHkgc2Vjb25kIHBvaW50IHJlbGVhc2VkXG5cdFx0XHRpZihudW1Qb2ludHMgPT09IDEpIHtcblx0XHRcdFx0Z2VzdHVyZVR5cGUgPSAnem9vbVBvaW50ZXJVcCc7XG5cdFx0XHR9XG5cdFx0XHRfc2hvdXQoJ3pvb21HZXN0dXJlRW5kZWQnKTtcblx0XHR9XG5cblx0XHRfY3VycmVudFBvaW50cyA9IG51bGw7XG5cdFx0aWYoIV9tb3ZlZCAmJiAhX3pvb21TdGFydGVkICYmICFfbWFpblNjcm9sbEFuaW1hdGluZyAmJiAhX3ZlcnRpY2FsRHJhZ0luaXRpYXRlZCkge1xuXHRcdFx0Ly8gbm90aGluZyB0byBhbmltYXRlXG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHRcblx0XHRfc3RvcEFsbEFuaW1hdGlvbnMoKTtcblxuXHRcdFxuXHRcdGlmKCFfcmVsZWFzZUFuaW1EYXRhKSB7XG5cdFx0XHRfcmVsZWFzZUFuaW1EYXRhID0gX2luaXREcmFnUmVsZWFzZUFuaW1hdGlvbkRhdGEoKTtcblx0XHR9XG5cdFx0XG5cdFx0X3JlbGVhc2VBbmltRGF0YS5jYWxjdWxhdGVTd2lwZVNwZWVkKCd4Jyk7XG5cblxuXHRcdGlmKF92ZXJ0aWNhbERyYWdJbml0aWF0ZWQpIHtcblxuXHRcdFx0dmFyIG9wYWNpdHlSYXRpbyA9IF9jYWxjdWxhdGVWZXJ0aWNhbERyYWdPcGFjaXR5UmF0aW8oKTtcblxuXHRcdFx0aWYob3BhY2l0eVJhdGlvIDwgX29wdGlvbnMudmVydGljYWxEcmFnUmFuZ2UpIHtcblx0XHRcdFx0c2VsZi5jbG9zZSgpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dmFyIGluaXRhbFBhblkgPSBfcGFuT2Zmc2V0LnksXG5cdFx0XHRcdFx0aW5pdGlhbEJnT3BhY2l0eSA9IF9iZ09wYWNpdHk7XG5cblx0XHRcdFx0X2FuaW1hdGVQcm9wKCd2ZXJ0aWNhbERyYWcnLCAwLCAxLCAzMDAsIGZyYW1ld29yay5lYXNpbmcuY3ViaWMub3V0LCBmdW5jdGlvbihub3cpIHtcblx0XHRcdFx0XHRcblx0XHRcdFx0XHRfcGFuT2Zmc2V0LnkgPSAoc2VsZi5jdXJySXRlbS5pbml0aWFsUG9zaXRpb24ueSAtIGluaXRhbFBhblkpICogbm93ICsgaW5pdGFsUGFuWTtcblxuXHRcdFx0XHRcdF9hcHBseUJnT3BhY2l0eSggICgxIC0gaW5pdGlhbEJnT3BhY2l0eSkgKiBub3cgKyBpbml0aWFsQmdPcGFjaXR5ICk7XG5cdFx0XHRcdFx0X2FwcGx5Q3VycmVudFpvb21QYW4oKTtcblx0XHRcdFx0fSk7XG5cblx0XHRcdFx0X3Nob3V0KCdvblZlcnRpY2FsRHJhZycsIDEpO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cblx0XHQvLyBtYWluIHNjcm9sbCBcblx0XHRpZiggIChfbWFpblNjcm9sbFNoaWZ0ZWQgfHwgX21haW5TY3JvbGxBbmltYXRpbmcpICYmIG51bVBvaW50cyA9PT0gMCkge1xuXHRcdFx0dmFyIGl0ZW1DaGFuZ2VkID0gX2ZpbmlzaFN3aXBlTWFpblNjcm9sbEdlc3R1cmUoZ2VzdHVyZVR5cGUsIF9yZWxlYXNlQW5pbURhdGEpO1xuXHRcdFx0aWYoaXRlbUNoYW5nZWQpIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXHRcdFx0Z2VzdHVyZVR5cGUgPSAnem9vbVBvaW50ZXJVcCc7XG5cdFx0fVxuXG5cdFx0Ly8gcHJldmVudCB6b29tL3BhbiBhbmltYXRpb24gd2hlbiBtYWluIHNjcm9sbCBhbmltYXRpb24gcnVuc1xuXHRcdGlmKF9tYWluU2Nyb2xsQW5pbWF0aW5nKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHRcdFxuXHRcdC8vIENvbXBsZXRlIHNpbXBsZSB6b29tIGdlc3R1cmUgKHJlc2V0IHpvb20gbGV2ZWwgaWYgaXQncyBvdXQgb2YgdGhlIGJvdW5kcykgIFxuXHRcdGlmKGdlc3R1cmVUeXBlICE9PSAnc3dpcGUnKSB7XG5cdFx0XHRfY29tcGxldGVab29tR2VzdHVyZSgpO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0XG5cdFx0Ly8gQ29tcGxldGUgcGFuIGdlc3R1cmUgaWYgbWFpbiBzY3JvbGwgaXMgbm90IHNoaWZ0ZWQsIGFuZCBpdCdzIHBvc3NpYmxlIHRvIHBhbiBjdXJyZW50IGltYWdlXG5cdFx0aWYoIV9tYWluU2Nyb2xsU2hpZnRlZCAmJiBfY3Vyclpvb21MZXZlbCA+IHNlbGYuY3Vyckl0ZW0uZml0UmF0aW8pIHtcblx0XHRcdF9jb21wbGV0ZVBhbkdlc3R1cmUoX3JlbGVhc2VBbmltRGF0YSk7XG5cdFx0fVxuXHR9LFxuXG5cblx0Ly8gUmV0dXJucyBvYmplY3Qgd2l0aCBkYXRhIGFib3V0IGdlc3R1cmVcblx0Ly8gSXQncyBjcmVhdGVkIG9ubHkgb25jZSBhbmQgdGhlbiByZXVzZWRcblx0X2luaXREcmFnUmVsZWFzZUFuaW1hdGlvbkRhdGEgID0gZnVuY3Rpb24oKSB7XG5cdFx0Ly8gdGVtcCBsb2NhbCB2YXJzXG5cdFx0dmFyIGxhc3RGbGlja0R1cmF0aW9uLFxuXHRcdFx0dGVtcFJlbGVhc2VQb3M7XG5cblx0XHQvLyBzID0gdGhpc1xuXHRcdHZhciBzID0ge1xuXHRcdFx0bGFzdEZsaWNrT2Zmc2V0OiB7fSxcblx0XHRcdGxhc3RGbGlja0Rpc3Q6IHt9LFxuXHRcdFx0bGFzdEZsaWNrU3BlZWQ6IHt9LFxuXHRcdFx0c2xvd0Rvd25SYXRpbzogIHt9LFxuXHRcdFx0c2xvd0Rvd25SYXRpb1JldmVyc2U6ICB7fSxcblx0XHRcdHNwZWVkRGVjZWxlcmF0aW9uUmF0aW86ICB7fSxcblx0XHRcdHNwZWVkRGVjZWxlcmF0aW9uUmF0aW9BYnM6ICB7fSxcblx0XHRcdGRpc3RhbmNlT2Zmc2V0OiAge30sXG5cdFx0XHRiYWNrQW5pbURlc3RpbmF0aW9uOiB7fSxcblx0XHRcdGJhY2tBbmltU3RhcnRlZDoge30sXG5cdFx0XHRjYWxjdWxhdGVTd2lwZVNwZWVkOiBmdW5jdGlvbihheGlzKSB7XG5cdFx0XHRcdFxuXG5cdFx0XHRcdGlmKCBfcG9zUG9pbnRzLmxlbmd0aCA+IDEpIHtcblx0XHRcdFx0XHRsYXN0RmxpY2tEdXJhdGlvbiA9IF9nZXRDdXJyZW50VGltZSgpIC0gX2dlc3R1cmVDaGVja1NwZWVkVGltZSArIDUwO1xuXHRcdFx0XHRcdHRlbXBSZWxlYXNlUG9zID0gX3Bvc1BvaW50c1tfcG9zUG9pbnRzLmxlbmd0aC0yXVtheGlzXTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRsYXN0RmxpY2tEdXJhdGlvbiA9IF9nZXRDdXJyZW50VGltZSgpIC0gX2dlc3R1cmVTdGFydFRpbWU7IC8vIHRvdGFsIGdlc3R1cmUgZHVyYXRpb25cblx0XHRcdFx0XHR0ZW1wUmVsZWFzZVBvcyA9IF9zdGFydFBvaW50W2F4aXNdO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHMubGFzdEZsaWNrT2Zmc2V0W2F4aXNdID0gX2N1cnJQb2ludFtheGlzXSAtIHRlbXBSZWxlYXNlUG9zO1xuXHRcdFx0XHRzLmxhc3RGbGlja0Rpc3RbYXhpc10gPSBNYXRoLmFicyhzLmxhc3RGbGlja09mZnNldFtheGlzXSk7XG5cdFx0XHRcdGlmKHMubGFzdEZsaWNrRGlzdFtheGlzXSA+IDIwKSB7XG5cdFx0XHRcdFx0cy5sYXN0RmxpY2tTcGVlZFtheGlzXSA9IHMubGFzdEZsaWNrT2Zmc2V0W2F4aXNdIC8gbGFzdEZsaWNrRHVyYXRpb247XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0cy5sYXN0RmxpY2tTcGVlZFtheGlzXSA9IDA7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYoIE1hdGguYWJzKHMubGFzdEZsaWNrU3BlZWRbYXhpc10pIDwgMC4xICkge1xuXHRcdFx0XHRcdHMubGFzdEZsaWNrU3BlZWRbYXhpc10gPSAwO1xuXHRcdFx0XHR9XG5cdFx0XHRcdFxuXHRcdFx0XHRzLnNsb3dEb3duUmF0aW9bYXhpc10gPSAwLjk1O1xuXHRcdFx0XHRzLnNsb3dEb3duUmF0aW9SZXZlcnNlW2F4aXNdID0gMSAtIHMuc2xvd0Rvd25SYXRpb1theGlzXTtcblx0XHRcdFx0cy5zcGVlZERlY2VsZXJhdGlvblJhdGlvW2F4aXNdID0gMTtcblx0XHRcdH0sXG5cblx0XHRcdGNhbGN1bGF0ZU92ZXJCb3VuZHNBbmltT2Zmc2V0OiBmdW5jdGlvbihheGlzLCBzcGVlZCkge1xuXHRcdFx0XHRpZighcy5iYWNrQW5pbVN0YXJ0ZWRbYXhpc10pIHtcblxuXHRcdFx0XHRcdGlmKF9wYW5PZmZzZXRbYXhpc10gPiBfY3VyclBhbkJvdW5kcy5taW5bYXhpc10pIHtcblx0XHRcdFx0XHRcdHMuYmFja0FuaW1EZXN0aW5hdGlvbltheGlzXSA9IF9jdXJyUGFuQm91bmRzLm1pbltheGlzXTtcblx0XHRcdFx0XHRcdFxuXHRcdFx0XHRcdH0gZWxzZSBpZihfcGFuT2Zmc2V0W2F4aXNdIDwgX2N1cnJQYW5Cb3VuZHMubWF4W2F4aXNdKSB7XG5cdFx0XHRcdFx0XHRzLmJhY2tBbmltRGVzdGluYXRpb25bYXhpc10gPSBfY3VyclBhbkJvdW5kcy5tYXhbYXhpc107XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0aWYocy5iYWNrQW5pbURlc3RpbmF0aW9uW2F4aXNdICE9PSB1bmRlZmluZWQpIHtcblx0XHRcdFx0XHRcdHMuc2xvd0Rvd25SYXRpb1theGlzXSA9IDAuNztcblx0XHRcdFx0XHRcdHMuc2xvd0Rvd25SYXRpb1JldmVyc2VbYXhpc10gPSAxIC0gcy5zbG93RG93blJhdGlvW2F4aXNdO1xuXHRcdFx0XHRcdFx0aWYocy5zcGVlZERlY2VsZXJhdGlvblJhdGlvQWJzW2F4aXNdIDwgMC4wNSkge1xuXG5cdFx0XHRcdFx0XHRcdHMubGFzdEZsaWNrU3BlZWRbYXhpc10gPSAwO1xuXHRcdFx0XHRcdFx0XHRzLmJhY2tBbmltU3RhcnRlZFtheGlzXSA9IHRydWU7XG5cblx0XHRcdFx0XHRcdFx0X2FuaW1hdGVQcm9wKCdib3VuY2Vab29tUGFuJytheGlzLF9wYW5PZmZzZXRbYXhpc10sIFxuXHRcdFx0XHRcdFx0XHRcdHMuYmFja0FuaW1EZXN0aW5hdGlvbltheGlzXSwgXG5cdFx0XHRcdFx0XHRcdFx0c3BlZWQgfHwgMzAwLCBcblx0XHRcdFx0XHRcdFx0XHRmcmFtZXdvcmsuZWFzaW5nLnNpbmUub3V0LCBcblx0XHRcdFx0XHRcdFx0XHRmdW5jdGlvbihwb3MpIHtcblx0XHRcdFx0XHRcdFx0XHRcdF9wYW5PZmZzZXRbYXhpc10gPSBwb3M7XG5cdFx0XHRcdFx0XHRcdFx0XHRfYXBwbHlDdXJyZW50Wm9vbVBhbigpO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0KTtcblxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSxcblxuXHRcdFx0Ly8gUmVkdWNlcyB0aGUgc3BlZWQgYnkgc2xvd0Rvd25SYXRpbyAocGVyIDEwbXMpXG5cdFx0XHRjYWxjdWxhdGVBbmltT2Zmc2V0OiBmdW5jdGlvbihheGlzKSB7XG5cdFx0XHRcdGlmKCFzLmJhY2tBbmltU3RhcnRlZFtheGlzXSkge1xuXHRcdFx0XHRcdHMuc3BlZWREZWNlbGVyYXRpb25SYXRpb1theGlzXSA9IHMuc3BlZWREZWNlbGVyYXRpb25SYXRpb1theGlzXSAqIChzLnNsb3dEb3duUmF0aW9bYXhpc10gKyBcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHMuc2xvd0Rvd25SYXRpb1JldmVyc2VbYXhpc10gLSBcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHMuc2xvd0Rvd25SYXRpb1JldmVyc2VbYXhpc10gKiBzLnRpbWVEaWZmIC8gMTApO1xuXG5cdFx0XHRcdFx0cy5zcGVlZERlY2VsZXJhdGlvblJhdGlvQWJzW2F4aXNdID0gTWF0aC5hYnMocy5sYXN0RmxpY2tTcGVlZFtheGlzXSAqIHMuc3BlZWREZWNlbGVyYXRpb25SYXRpb1theGlzXSk7XG5cdFx0XHRcdFx0cy5kaXN0YW5jZU9mZnNldFtheGlzXSA9IHMubGFzdEZsaWNrU3BlZWRbYXhpc10gKiBzLnNwZWVkRGVjZWxlcmF0aW9uUmF0aW9bYXhpc10gKiBzLnRpbWVEaWZmO1xuXHRcdFx0XHRcdF9wYW5PZmZzZXRbYXhpc10gKz0gcy5kaXN0YW5jZU9mZnNldFtheGlzXTtcblxuXHRcdFx0XHR9XG5cdFx0XHR9LFxuXG5cdFx0XHRwYW5BbmltTG9vcDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggX2FuaW1hdGlvbnMuem9vbVBhbiApIHtcblx0XHRcdFx0XHRfYW5pbWF0aW9ucy56b29tUGFuLnJhZiA9IF9yZXF1ZXN0QUYocy5wYW5BbmltTG9vcCk7XG5cblx0XHRcdFx0XHRzLm5vdyA9IF9nZXRDdXJyZW50VGltZSgpO1xuXHRcdFx0XHRcdHMudGltZURpZmYgPSBzLm5vdyAtIHMubGFzdE5vdztcblx0XHRcdFx0XHRzLmxhc3ROb3cgPSBzLm5vdztcblx0XHRcdFx0XHRcblx0XHRcdFx0XHRzLmNhbGN1bGF0ZUFuaW1PZmZzZXQoJ3gnKTtcblx0XHRcdFx0XHRzLmNhbGN1bGF0ZUFuaW1PZmZzZXQoJ3knKTtcblxuXHRcdFx0XHRcdF9hcHBseUN1cnJlbnRab29tUGFuKCk7XG5cdFx0XHRcdFx0XG5cdFx0XHRcdFx0cy5jYWxjdWxhdGVPdmVyQm91bmRzQW5pbU9mZnNldCgneCcpO1xuXHRcdFx0XHRcdHMuY2FsY3VsYXRlT3ZlckJvdW5kc0FuaW1PZmZzZXQoJ3knKTtcblxuXG5cdFx0XHRcdFx0aWYgKHMuc3BlZWREZWNlbGVyYXRpb25SYXRpb0Ficy54IDwgMC4wNSAmJiBzLnNwZWVkRGVjZWxlcmF0aW9uUmF0aW9BYnMueSA8IDAuMDUpIHtcblxuXHRcdFx0XHRcdFx0Ly8gcm91bmQgcGFuIHBvc2l0aW9uXG5cdFx0XHRcdFx0XHRfcGFuT2Zmc2V0LnggPSBNYXRoLnJvdW5kKF9wYW5PZmZzZXQueCk7XG5cdFx0XHRcdFx0XHRfcGFuT2Zmc2V0LnkgPSBNYXRoLnJvdW5kKF9wYW5PZmZzZXQueSk7XG5cdFx0XHRcdFx0XHRfYXBwbHlDdXJyZW50Wm9vbVBhbigpO1xuXHRcdFx0XHRcdFx0XG5cdFx0XHRcdFx0XHRfc3RvcEFuaW1hdGlvbignem9vbVBhbicpO1xuXHRcdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHR9XG5cdFx0fTtcblx0XHRyZXR1cm4gcztcblx0fSxcblxuXHRfY29tcGxldGVQYW5HZXN0dXJlID0gZnVuY3Rpb24oYW5pbURhdGEpIHtcblx0XHQvLyBjYWxjdWxhdGUgc3dpcGUgc3BlZWQgZm9yIFkgYXhpcyAocGFhbm5pbmcpXG5cdFx0YW5pbURhdGEuY2FsY3VsYXRlU3dpcGVTcGVlZCgneScpO1xuXG5cdFx0X2N1cnJQYW5Cb3VuZHMgPSBzZWxmLmN1cnJJdGVtLmJvdW5kcztcblx0XHRcblx0XHRhbmltRGF0YS5iYWNrQW5pbURlc3RpbmF0aW9uID0ge307XG5cdFx0YW5pbURhdGEuYmFja0FuaW1TdGFydGVkID0ge307XG5cblx0XHQvLyBBdm9pZCBhY2NlbGVyYXRpb24gYW5pbWF0aW9uIGlmIHNwZWVkIGlzIHRvbyBsb3dcblx0XHRpZihNYXRoLmFicyhhbmltRGF0YS5sYXN0RmxpY2tTcGVlZC54KSA8PSAwLjA1ICYmIE1hdGguYWJzKGFuaW1EYXRhLmxhc3RGbGlja1NwZWVkLnkpIDw9IDAuMDUgKSB7XG5cdFx0XHRhbmltRGF0YS5zcGVlZERlY2VsZXJhdGlvblJhdGlvQWJzLnggPSBhbmltRGF0YS5zcGVlZERlY2VsZXJhdGlvblJhdGlvQWJzLnkgPSAwO1xuXG5cdFx0XHQvLyBSdW4gcGFuIGRyYWcgcmVsZWFzZSBhbmltYXRpb24uIEUuZy4gaWYgeW91IGRyYWcgaW1hZ2UgYW5kIHJlbGVhc2UgZmluZ2VyIHdpdGhvdXQgbW9tZW50dW0uXG5cdFx0XHRhbmltRGF0YS5jYWxjdWxhdGVPdmVyQm91bmRzQW5pbU9mZnNldCgneCcpO1xuXHRcdFx0YW5pbURhdGEuY2FsY3VsYXRlT3ZlckJvdW5kc0FuaW1PZmZzZXQoJ3knKTtcblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH1cblxuXHRcdC8vIEFuaW1hdGlvbiBsb29wIHRoYXQgY29udHJvbHMgdGhlIGFjY2VsZXJhdGlvbiBhZnRlciBwYW4gZ2VzdHVyZSBlbmRzXG5cdFx0X3JlZ2lzdGVyU3RhcnRBbmltYXRpb24oJ3pvb21QYW4nKTtcblx0XHRhbmltRGF0YS5sYXN0Tm93ID0gX2dldEN1cnJlbnRUaW1lKCk7XG5cdFx0YW5pbURhdGEucGFuQW5pbUxvb3AoKTtcblx0fSxcblxuXG5cdF9maW5pc2hTd2lwZU1haW5TY3JvbGxHZXN0dXJlID0gZnVuY3Rpb24oZ2VzdHVyZVR5cGUsIF9yZWxlYXNlQW5pbURhdGEpIHtcblx0XHR2YXIgaXRlbUNoYW5nZWQ7XG5cdFx0aWYoIV9tYWluU2Nyb2xsQW5pbWF0aW5nKSB7XG5cdFx0XHRfY3Vyclpvb21lZEl0ZW1JbmRleCA9IF9jdXJyZW50SXRlbUluZGV4O1xuXHRcdH1cblxuXG5cdFx0XG5cdFx0dmFyIGl0ZW1zRGlmZjtcblxuXHRcdGlmKGdlc3R1cmVUeXBlID09PSAnc3dpcGUnKSB7XG5cdFx0XHR2YXIgdG90YWxTaGlmdERpc3QgPSBfY3VyclBvaW50LnggLSBfc3RhcnRQb2ludC54LFxuXHRcdFx0XHRpc0Zhc3RMYXN0RmxpY2sgPSBfcmVsZWFzZUFuaW1EYXRhLmxhc3RGbGlja0Rpc3QueCA8IDEwO1xuXG5cdFx0XHQvLyBpZiBjb250YWluZXIgaXMgc2hpZnRlZCBmb3IgbW9yZSB0aGFuIE1JTl9TV0lQRV9ESVNUQU5DRSwgXG5cdFx0XHQvLyBhbmQgbGFzdCBmbGljayBnZXN0dXJlIHdhcyBpbiByaWdodCBkaXJlY3Rpb25cblx0XHRcdGlmKHRvdGFsU2hpZnREaXN0ID4gTUlOX1NXSVBFX0RJU1RBTkNFICYmIFxuXHRcdFx0XHQoaXNGYXN0TGFzdEZsaWNrIHx8IF9yZWxlYXNlQW5pbURhdGEubGFzdEZsaWNrT2Zmc2V0LnggPiAyMCkgKSB7XG5cdFx0XHRcdC8vIGdvIHRvIHByZXYgaXRlbVxuXHRcdFx0XHRpdGVtc0RpZmYgPSAtMTtcblx0XHRcdH0gZWxzZSBpZih0b3RhbFNoaWZ0RGlzdCA8IC1NSU5fU1dJUEVfRElTVEFOQ0UgJiYgXG5cdFx0XHRcdChpc0Zhc3RMYXN0RmxpY2sgfHwgX3JlbGVhc2VBbmltRGF0YS5sYXN0RmxpY2tPZmZzZXQueCA8IC0yMCkgKSB7XG5cdFx0XHRcdC8vIGdvIHRvIG5leHQgaXRlbVxuXHRcdFx0XHRpdGVtc0RpZmYgPSAxO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHZhciBuZXh0Q2lyY2xlO1xuXG5cdFx0aWYoaXRlbXNEaWZmKSB7XG5cdFx0XHRcblx0XHRcdF9jdXJyZW50SXRlbUluZGV4ICs9IGl0ZW1zRGlmZjtcblxuXHRcdFx0aWYoX2N1cnJlbnRJdGVtSW5kZXggPCAwKSB7XG5cdFx0XHRcdF9jdXJyZW50SXRlbUluZGV4ID0gX29wdGlvbnMubG9vcCA/IF9nZXROdW1JdGVtcygpLTEgOiAwO1xuXHRcdFx0XHRuZXh0Q2lyY2xlID0gdHJ1ZTtcblx0XHRcdH0gZWxzZSBpZihfY3VycmVudEl0ZW1JbmRleCA+PSBfZ2V0TnVtSXRlbXMoKSkge1xuXHRcdFx0XHRfY3VycmVudEl0ZW1JbmRleCA9IF9vcHRpb25zLmxvb3AgPyAwIDogX2dldE51bUl0ZW1zKCktMTtcblx0XHRcdFx0bmV4dENpcmNsZSA9IHRydWU7XG5cdFx0XHR9XG5cblx0XHRcdGlmKCFuZXh0Q2lyY2xlIHx8IF9vcHRpb25zLmxvb3ApIHtcblx0XHRcdFx0X2luZGV4RGlmZiArPSBpdGVtc0RpZmY7XG5cdFx0XHRcdF9jdXJyUG9zaXRpb25JbmRleCAtPSBpdGVtc0RpZmY7XG5cdFx0XHRcdGl0ZW1DaGFuZ2VkID0gdHJ1ZTtcblx0XHRcdH1cblx0XHRcdFxuXG5cdFx0XHRcblx0XHR9XG5cblx0XHR2YXIgYW5pbWF0ZVRvWCA9IF9zbGlkZVNpemUueCAqIF9jdXJyUG9zaXRpb25JbmRleDtcblx0XHR2YXIgYW5pbWF0ZVRvRGlzdCA9IE1hdGguYWJzKCBhbmltYXRlVG9YIC0gX21haW5TY3JvbGxQb3MueCApO1xuXHRcdHZhciBmaW5pc2hBbmltRHVyYXRpb247XG5cblxuXHRcdGlmKCFpdGVtQ2hhbmdlZCAmJiBhbmltYXRlVG9YID4gX21haW5TY3JvbGxQb3MueCAhPT0gX3JlbGVhc2VBbmltRGF0YS5sYXN0RmxpY2tTcGVlZC54ID4gMCkge1xuXHRcdFx0Ly8gXCJyZXR1cm4gdG8gY3VycmVudFwiIGR1cmF0aW9uLCBlLmcuIHdoZW4gZHJhZ2dpbmcgZnJvbSBzbGlkZSAwIHRvIC0xXG5cdFx0XHRmaW5pc2hBbmltRHVyYXRpb24gPSAzMzM7IFxuXHRcdH0gZWxzZSB7XG5cdFx0XHRmaW5pc2hBbmltRHVyYXRpb24gPSBNYXRoLmFicyhfcmVsZWFzZUFuaW1EYXRhLmxhc3RGbGlja1NwZWVkLngpID4gMCA/IFxuXHRcdFx0XHRcdFx0XHRcdFx0YW5pbWF0ZVRvRGlzdCAvIE1hdGguYWJzKF9yZWxlYXNlQW5pbURhdGEubGFzdEZsaWNrU3BlZWQueCkgOiBcblx0XHRcdFx0XHRcdFx0XHRcdDMzMztcblxuXHRcdFx0ZmluaXNoQW5pbUR1cmF0aW9uID0gTWF0aC5taW4oZmluaXNoQW5pbUR1cmF0aW9uLCA0MDApO1xuXHRcdFx0ZmluaXNoQW5pbUR1cmF0aW9uID0gTWF0aC5tYXgoZmluaXNoQW5pbUR1cmF0aW9uLCAyNTApO1xuXHRcdH1cblxuXHRcdGlmKF9jdXJyWm9vbWVkSXRlbUluZGV4ID09PSBfY3VycmVudEl0ZW1JbmRleCkge1xuXHRcdFx0aXRlbUNoYW5nZWQgPSBmYWxzZTtcblx0XHR9XG5cdFx0XG5cdFx0X21haW5TY3JvbGxBbmltYXRpbmcgPSB0cnVlO1xuXHRcdFxuXHRcdF9zaG91dCgnbWFpblNjcm9sbEFuaW1TdGFydCcpO1xuXG5cdFx0X2FuaW1hdGVQcm9wKCdtYWluU2Nyb2xsJywgX21haW5TY3JvbGxQb3MueCwgYW5pbWF0ZVRvWCwgZmluaXNoQW5pbUR1cmF0aW9uLCBmcmFtZXdvcmsuZWFzaW5nLmN1YmljLm91dCwgXG5cdFx0XHRfbW92ZU1haW5TY3JvbGwsXG5cdFx0XHRmdW5jdGlvbigpIHtcblx0XHRcdFx0X3N0b3BBbGxBbmltYXRpb25zKCk7XG5cdFx0XHRcdF9tYWluU2Nyb2xsQW5pbWF0aW5nID0gZmFsc2U7XG5cdFx0XHRcdF9jdXJyWm9vbWVkSXRlbUluZGV4ID0gLTE7XG5cdFx0XHRcdFxuXHRcdFx0XHRpZihpdGVtQ2hhbmdlZCB8fCBfY3Vyclpvb21lZEl0ZW1JbmRleCAhPT0gX2N1cnJlbnRJdGVtSW5kZXgpIHtcblx0XHRcdFx0XHRzZWxmLnVwZGF0ZUN1cnJJdGVtKCk7XG5cdFx0XHRcdH1cblx0XHRcdFx0XG5cdFx0XHRcdF9zaG91dCgnbWFpblNjcm9sbEFuaW1Db21wbGV0ZScpO1xuXHRcdFx0fVxuXHRcdCk7XG5cblx0XHRpZihpdGVtQ2hhbmdlZCkge1xuXHRcdFx0c2VsZi51cGRhdGVDdXJySXRlbSh0cnVlKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gaXRlbUNoYW5nZWQ7XG5cdH0sXG5cblx0X2NhbGN1bGF0ZVpvb21MZXZlbCA9IGZ1bmN0aW9uKHRvdWNoZXNEaXN0YW5jZSkge1xuXHRcdHJldHVybiAgMSAvIF9zdGFydFBvaW50c0Rpc3RhbmNlICogdG91Y2hlc0Rpc3RhbmNlICogX3N0YXJ0Wm9vbUxldmVsO1xuXHR9LFxuXG5cdC8vIFJlc2V0cyB6b29tIGlmIGl0J3Mgb3V0IG9mIGJvdW5kc1xuXHRfY29tcGxldGVab29tR2VzdHVyZSA9IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBkZXN0Wm9vbUxldmVsID0gX2N1cnJab29tTGV2ZWwsXG5cdFx0XHRtaW5ab29tTGV2ZWwgPSBfZ2V0TWluWm9vbUxldmVsKCksXG5cdFx0XHRtYXhab29tTGV2ZWwgPSBfZ2V0TWF4Wm9vbUxldmVsKCk7XG5cblx0XHRpZiAoIF9jdXJyWm9vbUxldmVsIDwgbWluWm9vbUxldmVsICkge1xuXHRcdFx0ZGVzdFpvb21MZXZlbCA9IG1pblpvb21MZXZlbDtcblx0XHR9IGVsc2UgaWYgKCBfY3Vyclpvb21MZXZlbCA+IG1heFpvb21MZXZlbCApIHtcblx0XHRcdGRlc3Rab29tTGV2ZWwgPSBtYXhab29tTGV2ZWw7XG5cdFx0fVxuXG5cdFx0dmFyIGRlc3RPcGFjaXR5ID0gMSxcblx0XHRcdG9uVXBkYXRlLFxuXHRcdFx0aW5pdGlhbE9wYWNpdHkgPSBfYmdPcGFjaXR5O1xuXG5cdFx0aWYoX29wYWNpdHlDaGFuZ2VkICYmICFfaXNab29taW5nSW4gJiYgIV93YXNPdmVySW5pdGlhbFpvb20gJiYgX2N1cnJab29tTGV2ZWwgPCBtaW5ab29tTGV2ZWwpIHtcblx0XHRcdC8vX2Nsb3NlZEJ5U2Nyb2xsID0gdHJ1ZTtcblx0XHRcdHNlbGYuY2xvc2UoKTtcblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH1cblxuXHRcdGlmKF9vcGFjaXR5Q2hhbmdlZCkge1xuXHRcdFx0b25VcGRhdGUgPSBmdW5jdGlvbihub3cpIHtcblx0XHRcdFx0X2FwcGx5QmdPcGFjaXR5KCAgKGRlc3RPcGFjaXR5IC0gaW5pdGlhbE9wYWNpdHkpICogbm93ICsgaW5pdGlhbE9wYWNpdHkgKTtcblx0XHRcdH07XG5cdFx0fVxuXG5cdFx0c2VsZi56b29tVG8oZGVzdFpvb21MZXZlbCwgMCwgMjAwLCAgZnJhbWV3b3JrLmVhc2luZy5jdWJpYy5vdXQsIG9uVXBkYXRlKTtcblx0XHRyZXR1cm4gdHJ1ZTtcblx0fTtcblxuXG5fcmVnaXN0ZXJNb2R1bGUoJ0dlc3R1cmVzJywge1xuXHRwdWJsaWNNZXRob2RzOiB7XG5cblx0XHRpbml0R2VzdHVyZXM6IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBoZWxwZXIgZnVuY3Rpb24gdGhhdCBidWlsZHMgdG91Y2gvcG9pbnRlci9tb3VzZSBldmVudHNcblx0XHRcdHZhciBhZGRFdmVudE5hbWVzID0gZnVuY3Rpb24ocHJlZiwgZG93biwgbW92ZSwgdXAsIGNhbmNlbCkge1xuXHRcdFx0XHRfZHJhZ1N0YXJ0RXZlbnQgPSBwcmVmICsgZG93bjtcblx0XHRcdFx0X2RyYWdNb3ZlRXZlbnQgPSBwcmVmICsgbW92ZTtcblx0XHRcdFx0X2RyYWdFbmRFdmVudCA9IHByZWYgKyB1cDtcblx0XHRcdFx0aWYoY2FuY2VsKSB7XG5cdFx0XHRcdFx0X2RyYWdDYW5jZWxFdmVudCA9IHByZWYgKyBjYW5jZWw7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0X2RyYWdDYW5jZWxFdmVudCA9ICcnO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cdFx0XHRfcG9pbnRlckV2ZW50RW5hYmxlZCA9IF9mZWF0dXJlcy5wb2ludGVyRXZlbnQ7XG5cdFx0XHRpZihfcG9pbnRlckV2ZW50RW5hYmxlZCAmJiBfZmVhdHVyZXMudG91Y2gpIHtcblx0XHRcdFx0Ly8gd2UgZG9uJ3QgbmVlZCB0b3VjaCBldmVudHMsIGlmIGJyb3dzZXIgc3VwcG9ydHMgcG9pbnRlciBldmVudHNcblx0XHRcdFx0X2ZlYXR1cmVzLnRvdWNoID0gZmFsc2U7XG5cdFx0XHR9XG5cblx0XHRcdGlmKF9wb2ludGVyRXZlbnRFbmFibGVkKSB7XG5cdFx0XHRcdGlmKG5hdmlnYXRvci5wb2ludGVyRW5hYmxlZCkge1xuXHRcdFx0XHRcdGFkZEV2ZW50TmFtZXMoJ3BvaW50ZXInLCAnZG93bicsICdtb3ZlJywgJ3VwJywgJ2NhbmNlbCcpO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdC8vIElFMTAgcG9pbnRlciBldmVudHMgYXJlIGNhc2Utc2Vuc2l0aXZlXG5cdFx0XHRcdFx0YWRkRXZlbnROYW1lcygnTVNQb2ludGVyJywgJ0Rvd24nLCAnTW92ZScsICdVcCcsICdDYW5jZWwnKTtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIGlmKF9mZWF0dXJlcy50b3VjaCkge1xuXHRcdFx0XHRhZGRFdmVudE5hbWVzKCd0b3VjaCcsICdzdGFydCcsICdtb3ZlJywgJ2VuZCcsICdjYW5jZWwnKTtcblx0XHRcdFx0X2xpa2VseVRvdWNoRGV2aWNlID0gdHJ1ZTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGFkZEV2ZW50TmFtZXMoJ21vdXNlJywgJ2Rvd24nLCAnbW92ZScsICd1cCcpO1x0XG5cdFx0XHR9XG5cblx0XHRcdF91cE1vdmVFdmVudHMgPSBfZHJhZ01vdmVFdmVudCArICcgJyArIF9kcmFnRW5kRXZlbnQgICsgJyAnICsgIF9kcmFnQ2FuY2VsRXZlbnQ7XG5cdFx0XHRfZG93bkV2ZW50cyA9IF9kcmFnU3RhcnRFdmVudDtcblxuXHRcdFx0aWYoX3BvaW50ZXJFdmVudEVuYWJsZWQgJiYgIV9saWtlbHlUb3VjaERldmljZSkge1xuXHRcdFx0XHRfbGlrZWx5VG91Y2hEZXZpY2UgPSAobmF2aWdhdG9yLm1heFRvdWNoUG9pbnRzID4gMSkgfHwgKG5hdmlnYXRvci5tc01heFRvdWNoUG9pbnRzID4gMSk7XG5cdFx0XHR9XG5cdFx0XHQvLyBtYWtlIHZhcmlhYmxlIHB1YmxpY1xuXHRcdFx0c2VsZi5saWtlbHlUb3VjaERldmljZSA9IF9saWtlbHlUb3VjaERldmljZTsgXG5cdFx0XHRcblx0XHRcdF9nbG9iYWxFdmVudEhhbmRsZXJzW19kcmFnU3RhcnRFdmVudF0gPSBfb25EcmFnU3RhcnQ7XG5cdFx0XHRfZ2xvYmFsRXZlbnRIYW5kbGVyc1tfZHJhZ01vdmVFdmVudF0gPSBfb25EcmFnTW92ZTtcblx0XHRcdF9nbG9iYWxFdmVudEhhbmRsZXJzW19kcmFnRW5kRXZlbnRdID0gX29uRHJhZ1JlbGVhc2U7IC8vIHRoZSBLcmFrZW5cblxuXHRcdFx0aWYoX2RyYWdDYW5jZWxFdmVudCkge1xuXHRcdFx0XHRfZ2xvYmFsRXZlbnRIYW5kbGVyc1tfZHJhZ0NhbmNlbEV2ZW50XSA9IF9nbG9iYWxFdmVudEhhbmRsZXJzW19kcmFnRW5kRXZlbnRdO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBCaW5kIG1vdXNlIGV2ZW50cyBvbiBkZXZpY2Ugd2l0aCBkZXRlY3RlZCBoYXJkd2FyZSB0b3VjaCBzdXBwb3J0LCBpbiBjYXNlIGl0IHN1cHBvcnRzIG11bHRpcGxlIHR5cGVzIG9mIGlucHV0LlxuXHRcdFx0aWYoX2ZlYXR1cmVzLnRvdWNoKSB7XG5cdFx0XHRcdF9kb3duRXZlbnRzICs9ICcgbW91c2Vkb3duJztcblx0XHRcdFx0X3VwTW92ZUV2ZW50cyArPSAnIG1vdXNlbW92ZSBtb3VzZXVwJztcblx0XHRcdFx0X2dsb2JhbEV2ZW50SGFuZGxlcnMubW91c2Vkb3duID0gX2dsb2JhbEV2ZW50SGFuZGxlcnNbX2RyYWdTdGFydEV2ZW50XTtcblx0XHRcdFx0X2dsb2JhbEV2ZW50SGFuZGxlcnMubW91c2Vtb3ZlID0gX2dsb2JhbEV2ZW50SGFuZGxlcnNbX2RyYWdNb3ZlRXZlbnRdO1xuXHRcdFx0XHRfZ2xvYmFsRXZlbnRIYW5kbGVycy5tb3VzZXVwID0gX2dsb2JhbEV2ZW50SGFuZGxlcnNbX2RyYWdFbmRFdmVudF07XG5cdFx0XHR9XG5cblx0XHRcdGlmKCFfbGlrZWx5VG91Y2hEZXZpY2UpIHtcblx0XHRcdFx0Ly8gZG9uJ3QgYWxsb3cgcGFuIHRvIG5leHQgc2xpZGUgZnJvbSB6b29tZWQgc3RhdGUgb24gRGVza3RvcFxuXHRcdFx0XHRfb3B0aW9ucy5hbGxvd1BhblRvTmV4dCA9IGZhbHNlO1xuXHRcdFx0fVxuXHRcdH1cblxuXHR9XG59KTtcblxuXG4vKj4+Z2VzdHVyZXMqL1xuXG4vKj4+c2hvdy1oaWRlLXRyYW5zaXRpb24qL1xuLyoqXG4gKiBzaG93LWhpZGUtdHJhbnNpdGlvbi5qczpcbiAqXG4gKiBNYW5hZ2VzIGluaXRpYWwgb3BlbmluZyBvciBjbG9zaW5nIHRyYW5zaXRpb24uXG4gKlxuICogSWYgeW91J3JlIG5vdCBwbGFubmluZyB0byB1c2UgdHJhbnNpdGlvbiBmb3IgZ2FsbGVyeSBhdCBhbGwsXG4gKiB5b3UgbWF5IHNldCBvcHRpb25zIGhpZGVBbmltYXRpb25EdXJhdGlvbiBhbmQgc2hvd0FuaW1hdGlvbkR1cmF0aW9uIHRvIDAsXG4gKiBhbmQganVzdCBkZWxldGUgc3RhcnRBbmltYXRpb24gZnVuY3Rpb24uXG4gKiBcbiAqL1xuXG5cbnZhciBfc2hvd09ySGlkZVRpbWVvdXQsXG5cdF9zaG93T3JIaWRlID0gZnVuY3Rpb24oaXRlbSwgaW1nLCBvdXQsIGNvbXBsZXRlRm4pIHtcblxuXHRcdGlmKF9zaG93T3JIaWRlVGltZW91dCkge1xuXHRcdFx0Y2xlYXJUaW1lb3V0KF9zaG93T3JIaWRlVGltZW91dCk7XG5cdFx0fVxuXG5cdFx0X2luaXRpYWxab29tUnVubmluZyA9IHRydWU7XG5cdFx0X2luaXRpYWxDb250ZW50U2V0ID0gdHJ1ZTtcblx0XHRcblx0XHQvLyBkaW1lbnNpb25zIG9mIHNtYWxsIHRodW1ibmFpbCB7eDoseTosdzp9LlxuXHRcdC8vIEhlaWdodCBpcyBvcHRpb25hbCwgYXMgY2FsY3VsYXRlZCBiYXNlZCBvbiBsYXJnZSBpbWFnZS5cblx0XHR2YXIgdGh1bWJCb3VuZHM7IFxuXHRcdGlmKGl0ZW0uaW5pdGlhbExheW91dCkge1xuXHRcdFx0dGh1bWJCb3VuZHMgPSBpdGVtLmluaXRpYWxMYXlvdXQ7XG5cdFx0XHRpdGVtLmluaXRpYWxMYXlvdXQgPSBudWxsO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0aHVtYkJvdW5kcyA9IF9vcHRpb25zLmdldFRodW1iQm91bmRzRm4gJiYgX29wdGlvbnMuZ2V0VGh1bWJCb3VuZHNGbihfY3VycmVudEl0ZW1JbmRleCk7XG5cdFx0fVxuXG5cdFx0dmFyIGR1cmF0aW9uID0gb3V0ID8gX29wdGlvbnMuaGlkZUFuaW1hdGlvbkR1cmF0aW9uIDogX29wdGlvbnMuc2hvd0FuaW1hdGlvbkR1cmF0aW9uO1xuXG5cdFx0dmFyIG9uQ29tcGxldGUgPSBmdW5jdGlvbigpIHtcblx0XHRcdF9zdG9wQW5pbWF0aW9uKCdpbml0aWFsWm9vbScpO1xuXHRcdFx0aWYoIW91dCkge1xuXHRcdFx0XHRfYXBwbHlCZ09wYWNpdHkoMSk7XG5cdFx0XHRcdGlmKGltZykge1xuXHRcdFx0XHRcdGltZy5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcblx0XHRcdFx0fVxuXHRcdFx0XHRmcmFtZXdvcmsuYWRkQ2xhc3ModGVtcGxhdGUsICdwc3dwLS1hbmltYXRlZC1pbicpO1xuXHRcdFx0XHRfc2hvdXQoJ2luaXRpYWxab29tJyArIChvdXQgPyAnT3V0RW5kJyA6ICdJbkVuZCcpKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHNlbGYudGVtcGxhdGUucmVtb3ZlQXR0cmlidXRlKCdzdHlsZScpO1xuXHRcdFx0XHRzZWxmLmJnLnJlbW92ZUF0dHJpYnV0ZSgnc3R5bGUnKTtcblx0XHRcdH1cblxuXHRcdFx0aWYoY29tcGxldGVGbikge1xuXHRcdFx0XHRjb21wbGV0ZUZuKCk7XG5cdFx0XHR9XG5cdFx0XHRfaW5pdGlhbFpvb21SdW5uaW5nID0gZmFsc2U7XG5cdFx0fTtcblxuXHRcdC8vIGlmIGJvdW5kcyBhcmVuJ3QgcHJvdmlkZWQsIGp1c3Qgb3BlbiBnYWxsZXJ5IHdpdGhvdXQgYW5pbWF0aW9uXG5cdFx0aWYoIWR1cmF0aW9uIHx8ICF0aHVtYkJvdW5kcyB8fCB0aHVtYkJvdW5kcy54ID09PSB1bmRlZmluZWQpIHtcblxuXHRcdFx0X3Nob3V0KCdpbml0aWFsWm9vbScgKyAob3V0ID8gJ091dCcgOiAnSW4nKSApO1xuXG5cdFx0XHRfY3Vyclpvb21MZXZlbCA9IGl0ZW0uaW5pdGlhbFpvb21MZXZlbDtcblx0XHRcdF9lcXVhbGl6ZVBvaW50cyhfcGFuT2Zmc2V0LCAgaXRlbS5pbml0aWFsUG9zaXRpb24gKTtcblx0XHRcdF9hcHBseUN1cnJlbnRab29tUGFuKCk7XG5cblx0XHRcdHRlbXBsYXRlLnN0eWxlLm9wYWNpdHkgPSBvdXQgPyAwIDogMTtcblx0XHRcdF9hcHBseUJnT3BhY2l0eSgxKTtcblxuXHRcdFx0aWYoZHVyYXRpb24pIHtcblx0XHRcdFx0c2V0VGltZW91dChmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRvbkNvbXBsZXRlKCk7XG5cdFx0XHRcdH0sIGR1cmF0aW9uKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdG9uQ29tcGxldGUoKTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdHZhciBzdGFydEFuaW1hdGlvbiA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGNsb3NlV2l0aFJhZiA9IF9jbG9zZWRCeVNjcm9sbCxcblx0XHRcdFx0ZmFkZUV2ZXJ5dGhpbmcgPSAhc2VsZi5jdXJySXRlbS5zcmMgfHwgc2VsZi5jdXJySXRlbS5sb2FkRXJyb3IgfHwgX29wdGlvbnMuc2hvd0hpZGVPcGFjaXR5O1xuXHRcdFx0XG5cdFx0XHQvLyBhcHBseSBody1hY2NlbGVyYXRpb24gdG8gaW1hZ2Vcblx0XHRcdGlmKGl0ZW0ubWluaUltZykge1xuXHRcdFx0XHRpdGVtLm1pbmlJbWcuc3R5bGUud2Via2l0QmFja2ZhY2VWaXNpYmlsaXR5ID0gJ2hpZGRlbic7XG5cdFx0XHR9XG5cblx0XHRcdGlmKCFvdXQpIHtcblx0XHRcdFx0X2N1cnJab29tTGV2ZWwgPSB0aHVtYkJvdW5kcy53IC8gaXRlbS53O1xuXHRcdFx0XHRfcGFuT2Zmc2V0LnggPSB0aHVtYkJvdW5kcy54O1xuXHRcdFx0XHRfcGFuT2Zmc2V0LnkgPSB0aHVtYkJvdW5kcy55IC0gX2luaXRhbFdpbmRvd1Njcm9sbFk7XG5cblx0XHRcdFx0c2VsZltmYWRlRXZlcnl0aGluZyA/ICd0ZW1wbGF0ZScgOiAnYmcnXS5zdHlsZS5vcGFjaXR5ID0gMC4wMDE7XG5cdFx0XHRcdF9hcHBseUN1cnJlbnRab29tUGFuKCk7XG5cdFx0XHR9XG5cblx0XHRcdF9yZWdpc3RlclN0YXJ0QW5pbWF0aW9uKCdpbml0aWFsWm9vbScpO1xuXHRcdFx0XG5cdFx0XHRpZihvdXQgJiYgIWNsb3NlV2l0aFJhZikge1xuXHRcdFx0XHRmcmFtZXdvcmsucmVtb3ZlQ2xhc3ModGVtcGxhdGUsICdwc3dwLS1hbmltYXRlZC1pbicpO1xuXHRcdFx0fVxuXG5cdFx0XHRpZihmYWRlRXZlcnl0aGluZykge1xuXHRcdFx0XHRpZihvdXQpIHtcblx0XHRcdFx0XHRmcmFtZXdvcmtbIChjbG9zZVdpdGhSYWYgPyAncmVtb3ZlJyA6ICdhZGQnKSArICdDbGFzcycgXSh0ZW1wbGF0ZSwgJ3Bzd3AtLWFuaW1hdGVfb3BhY2l0eScpO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRmcmFtZXdvcmsuYWRkQ2xhc3ModGVtcGxhdGUsICdwc3dwLS1hbmltYXRlX29wYWNpdHknKTtcblx0XHRcdFx0XHR9LCAzMCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0X3Nob3dPckhpZGVUaW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbigpIHtcblxuXHRcdFx0XHRfc2hvdXQoJ2luaXRpYWxab29tJyArIChvdXQgPyAnT3V0JyA6ICdJbicpICk7XG5cdFx0XHRcdFxuXG5cdFx0XHRcdGlmKCFvdXQpIHtcblxuXHRcdFx0XHRcdC8vIFwiaW5cIiBhbmltYXRpb24gYWx3YXlzIHVzZXMgQ1NTIHRyYW5zaXRpb25zIChpbnN0ZWFkIG9mIHJBRikuXG5cdFx0XHRcdFx0Ly8gQ1NTIHRyYW5zaXRpb24gd29yayBmYXN0ZXIgaGVyZSwgXG5cdFx0XHRcdFx0Ly8gYXMgZGV2ZWxvcGVyIG1heSBhbHNvIHdhbnQgdG8gYW5pbWF0ZSBvdGhlciB0aGluZ3MsIFxuXHRcdFx0XHRcdC8vIGxpa2UgdWkgb24gdG9wIG9mIHNsaWRpbmcgYXJlYSwgd2hpY2ggY2FuIGJlIGFuaW1hdGVkIGp1c3QgdmlhIENTU1xuXHRcdFx0XHRcdFxuXHRcdFx0XHRcdF9jdXJyWm9vbUxldmVsID0gaXRlbS5pbml0aWFsWm9vbUxldmVsO1xuXHRcdFx0XHRcdF9lcXVhbGl6ZVBvaW50cyhfcGFuT2Zmc2V0LCAgaXRlbS5pbml0aWFsUG9zaXRpb24gKTtcblx0XHRcdFx0XHRfYXBwbHlDdXJyZW50Wm9vbVBhbigpO1xuXHRcdFx0XHRcdF9hcHBseUJnT3BhY2l0eSgxKTtcblxuXHRcdFx0XHRcdGlmKGZhZGVFdmVyeXRoaW5nKSB7XG5cdFx0XHRcdFx0XHR0ZW1wbGF0ZS5zdHlsZS5vcGFjaXR5ID0gMTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0X2FwcGx5QmdPcGFjaXR5KDEpO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdF9zaG93T3JIaWRlVGltZW91dCA9IHNldFRpbWVvdXQob25Db21wbGV0ZSwgZHVyYXRpb24gKyAyMCk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0XHQvLyBcIm91dFwiIGFuaW1hdGlvbiB1c2VzIHJBRiBvbmx5IHdoZW4gUGhvdG9Td2lwZSBpcyBjbG9zZWQgYnkgYnJvd3NlciBzY3JvbGwsIHRvIHJlY2FsY3VsYXRlIHBvc2l0aW9uXG5cdFx0XHRcdFx0dmFyIGRlc3Rab29tTGV2ZWwgPSB0aHVtYkJvdW5kcy53IC8gaXRlbS53LFxuXHRcdFx0XHRcdFx0aW5pdGlhbFBhbk9mZnNldCA9IHtcblx0XHRcdFx0XHRcdFx0eDogX3Bhbk9mZnNldC54LFxuXHRcdFx0XHRcdFx0XHR5OiBfcGFuT2Zmc2V0Lnlcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRpbml0aWFsWm9vbUxldmVsID0gX2N1cnJab29tTGV2ZWwsXG5cdFx0XHRcdFx0XHRpbml0YWxCZ09wYWNpdHkgPSBfYmdPcGFjaXR5LFxuXHRcdFx0XHRcdFx0b25VcGRhdGUgPSBmdW5jdGlvbihub3cpIHtcblx0XHRcdFx0XHRcdFx0XG5cdFx0XHRcdFx0XHRcdGlmKG5vdyA9PT0gMSkge1xuXHRcdFx0XHRcdFx0XHRcdF9jdXJyWm9vbUxldmVsID0gZGVzdFpvb21MZXZlbDtcblx0XHRcdFx0XHRcdFx0XHRfcGFuT2Zmc2V0LnggPSB0aHVtYkJvdW5kcy54O1xuXHRcdFx0XHRcdFx0XHRcdF9wYW5PZmZzZXQueSA9IHRodW1iQm91bmRzLnkgIC0gX2N1cnJlbnRXaW5kb3dTY3JvbGxZO1xuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdF9jdXJyWm9vbUxldmVsID0gKGRlc3Rab29tTGV2ZWwgLSBpbml0aWFsWm9vbUxldmVsKSAqIG5vdyArIGluaXRpYWxab29tTGV2ZWw7XG5cdFx0XHRcdFx0XHRcdFx0X3Bhbk9mZnNldC54ID0gKHRodW1iQm91bmRzLnggLSBpbml0aWFsUGFuT2Zmc2V0LngpICogbm93ICsgaW5pdGlhbFBhbk9mZnNldC54O1xuXHRcdFx0XHRcdFx0XHRcdF9wYW5PZmZzZXQueSA9ICh0aHVtYkJvdW5kcy55IC0gX2N1cnJlbnRXaW5kb3dTY3JvbGxZIC0gaW5pdGlhbFBhbk9mZnNldC55KSAqIG5vdyArIGluaXRpYWxQYW5PZmZzZXQueTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcblx0XHRcdFx0XHRcdFx0X2FwcGx5Q3VycmVudFpvb21QYW4oKTtcblx0XHRcdFx0XHRcdFx0aWYoZmFkZUV2ZXJ5dGhpbmcpIHtcblx0XHRcdFx0XHRcdFx0XHR0ZW1wbGF0ZS5zdHlsZS5vcGFjaXR5ID0gMSAtIG5vdztcblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHRfYXBwbHlCZ09wYWNpdHkoIGluaXRhbEJnT3BhY2l0eSAtIG5vdyAqIGluaXRhbEJnT3BhY2l0eSApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9O1xuXG5cdFx0XHRcdFx0aWYoY2xvc2VXaXRoUmFmKSB7XG5cdFx0XHRcdFx0XHRfYW5pbWF0ZVByb3AoJ2luaXRpYWxab29tJywgMCwgMSwgZHVyYXRpb24sIGZyYW1ld29yay5lYXNpbmcuY3ViaWMub3V0LCBvblVwZGF0ZSwgb25Db21wbGV0ZSk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdG9uVXBkYXRlKDEpO1xuXHRcdFx0XHRcdFx0X3Nob3dPckhpZGVUaW1lb3V0ID0gc2V0VGltZW91dChvbkNvbXBsZXRlLCBkdXJhdGlvbiArIDIwKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFxuXHRcdFx0fSwgb3V0ID8gMjUgOiA5MCk7IC8vIE1haW4gcHVycG9zZSBvZiB0aGlzIGRlbGF5IGlzIHRvIGdpdmUgYnJvd3NlciB0aW1lIHRvIHBhaW50IGFuZFxuXHRcdFx0XHRcdC8vIGNyZWF0ZSBjb21wb3NpdGUgbGF5ZXJzIG9mIFBob3RvU3dpcGUgVUkgcGFydHMgKGJhY2tncm91bmQsIGNvbnRyb2xzLCBjYXB0aW9uLCBhcnJvd3MpLlxuXHRcdFx0XHRcdC8vIFdoaWNoIGF2b2lkcyBsYWcgYXQgdGhlIGJlZ2lubmluZyBvZiBzY2FsZSB0cmFuc2l0aW9uLlxuXHRcdH07XG5cdFx0c3RhcnRBbmltYXRpb24oKTtcblxuXHRcdFxuXHR9O1xuXG4vKj4+c2hvdy1oaWRlLXRyYW5zaXRpb24qL1xuXG4vKj4+aXRlbXMtY29udHJvbGxlciovXG4vKipcbipcbiogQ29udHJvbGxlciBtYW5hZ2VzIGdhbGxlcnkgaXRlbXMsIHRoZWlyIGRpbWVuc2lvbnMsIGFuZCB0aGVpciBjb250ZW50LlxuKiBcbiovXG5cbnZhciBfaXRlbXMsXG5cdF90ZW1wUGFuQXJlYVNpemUgPSB7fSxcblx0X2ltYWdlc1RvQXBwZW5kUG9vbCA9IFtdLFxuXHRfaW5pdGlhbENvbnRlbnRTZXQsXG5cdF9pbml0aWFsWm9vbVJ1bm5pbmcsXG5cdF9jb250cm9sbGVyRGVmYXVsdE9wdGlvbnMgPSB7XG5cdFx0aW5kZXg6IDAsXG5cdFx0ZXJyb3JNc2c6ICc8ZGl2IGNsYXNzPVwicHN3cF9fZXJyb3ItbXNnXCI+PGEgaHJlZj1cIiV1cmwlXCIgdGFyZ2V0PVwiX2JsYW5rXCI+VGhlIGltYWdlPC9hPiBjb3VsZCBub3QgYmUgbG9hZGVkLjwvZGl2PicsXG5cdFx0Zm9yY2VQcm9ncmVzc2l2ZUxvYWRpbmc6IGZhbHNlLCAvLyBUT0RPXG5cdFx0cHJlbG9hZDogWzEsMV0sXG5cdFx0Z2V0TnVtSXRlbXNGbjogZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4gX2l0ZW1zLmxlbmd0aDtcblx0XHR9XG5cdH07XG5cblxudmFyIF9nZXRJdGVtQXQsXG5cdF9nZXROdW1JdGVtcyxcblx0X2luaXRpYWxJc0xvb3AsXG5cdF9nZXRaZXJvQm91bmRzID0gZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHtcblx0XHRcdGNlbnRlcjp7eDowLHk6MH0sIFxuXHRcdFx0bWF4Ont4OjAseTowfSwgXG5cdFx0XHRtaW46e3g6MCx5OjB9XG5cdFx0fTtcblx0fSxcblx0X2NhbGN1bGF0ZVNpbmdsZUl0ZW1QYW5Cb3VuZHMgPSBmdW5jdGlvbihpdGVtLCByZWFsUGFuRWxlbWVudFcsIHJlYWxQYW5FbGVtZW50SCApIHtcblx0XHR2YXIgYm91bmRzID0gaXRlbS5ib3VuZHM7XG5cblx0XHQvLyBwb3NpdGlvbiBvZiBlbGVtZW50IHdoZW4gaXQncyBjZW50ZXJlZFxuXHRcdGJvdW5kcy5jZW50ZXIueCA9IE1hdGgucm91bmQoKF90ZW1wUGFuQXJlYVNpemUueCAtIHJlYWxQYW5FbGVtZW50VykgLyAyKTtcblx0XHRib3VuZHMuY2VudGVyLnkgPSBNYXRoLnJvdW5kKChfdGVtcFBhbkFyZWFTaXplLnkgLSByZWFsUGFuRWxlbWVudEgpIC8gMikgKyBpdGVtLnZHYXAudG9wO1xuXG5cdFx0Ly8gbWF4aW11bSBwYW4gcG9zaXRpb25cblx0XHRib3VuZHMubWF4LnggPSAocmVhbFBhbkVsZW1lbnRXID4gX3RlbXBQYW5BcmVhU2l6ZS54KSA/IFxuXHRcdFx0XHRcdFx0XHRNYXRoLnJvdW5kKF90ZW1wUGFuQXJlYVNpemUueCAtIHJlYWxQYW5FbGVtZW50VykgOiBcblx0XHRcdFx0XHRcdFx0Ym91bmRzLmNlbnRlci54O1xuXHRcdFxuXHRcdGJvdW5kcy5tYXgueSA9IChyZWFsUGFuRWxlbWVudEggPiBfdGVtcFBhbkFyZWFTaXplLnkpID8gXG5cdFx0XHRcdFx0XHRcdE1hdGgucm91bmQoX3RlbXBQYW5BcmVhU2l6ZS55IC0gcmVhbFBhbkVsZW1lbnRIKSArIGl0ZW0udkdhcC50b3AgOiBcblx0XHRcdFx0XHRcdFx0Ym91bmRzLmNlbnRlci55O1xuXHRcdFxuXHRcdC8vIG1pbmltdW0gcGFuIHBvc2l0aW9uXG5cdFx0Ym91bmRzLm1pbi54ID0gKHJlYWxQYW5FbGVtZW50VyA+IF90ZW1wUGFuQXJlYVNpemUueCkgPyAwIDogYm91bmRzLmNlbnRlci54O1xuXHRcdGJvdW5kcy5taW4ueSA9IChyZWFsUGFuRWxlbWVudEggPiBfdGVtcFBhbkFyZWFTaXplLnkpID8gaXRlbS52R2FwLnRvcCA6IGJvdW5kcy5jZW50ZXIueTtcblx0fSxcblx0X2NhbGN1bGF0ZUl0ZW1TaXplID0gZnVuY3Rpb24oaXRlbSwgdmlld3BvcnRTaXplLCB6b29tTGV2ZWwpIHtcblxuXHRcdGlmIChpdGVtLnNyYyAmJiAhaXRlbS5sb2FkRXJyb3IpIHtcblx0XHRcdHZhciBpc0luaXRpYWwgPSAhem9vbUxldmVsO1xuXHRcdFx0XG5cdFx0XHRpZihpc0luaXRpYWwpIHtcblx0XHRcdFx0aWYoIWl0ZW0udkdhcCkge1xuXHRcdFx0XHRcdGl0ZW0udkdhcCA9IHt0b3A6MCxib3R0b206MH07XG5cdFx0XHRcdH1cblx0XHRcdFx0Ly8gYWxsb3dzIG92ZXJyaWRpbmcgdmVydGljYWwgbWFyZ2luIGZvciBpbmRpdmlkdWFsIGl0ZW1zXG5cdFx0XHRcdF9zaG91dCgncGFyc2VWZXJ0aWNhbE1hcmdpbicsIGl0ZW0pO1xuXHRcdFx0fVxuXG5cblx0XHRcdF90ZW1wUGFuQXJlYVNpemUueCA9IHZpZXdwb3J0U2l6ZS54O1xuXHRcdFx0X3RlbXBQYW5BcmVhU2l6ZS55ID0gdmlld3BvcnRTaXplLnkgLSBpdGVtLnZHYXAudG9wIC0gaXRlbS52R2FwLmJvdHRvbTtcblxuXHRcdFx0aWYgKGlzSW5pdGlhbCkge1xuXHRcdFx0XHR2YXIgaFJhdGlvID0gX3RlbXBQYW5BcmVhU2l6ZS54IC8gaXRlbS53O1xuXHRcdFx0XHR2YXIgdlJhdGlvID0gX3RlbXBQYW5BcmVhU2l6ZS55IC8gaXRlbS5oO1xuXG5cdFx0XHRcdGl0ZW0uZml0UmF0aW8gPSBoUmF0aW8gPCB2UmF0aW8gPyBoUmF0aW8gOiB2UmF0aW87XG5cdFx0XHRcdC8vaXRlbS5maWxsUmF0aW8gPSBoUmF0aW8gPiB2UmF0aW8gPyBoUmF0aW8gOiB2UmF0aW87XG5cblx0XHRcdFx0dmFyIHNjYWxlTW9kZSA9IF9vcHRpb25zLnNjYWxlTW9kZTtcblxuXHRcdFx0XHRpZiAoc2NhbGVNb2RlID09PSAnb3JpZycpIHtcblx0XHRcdFx0XHR6b29tTGV2ZWwgPSAxO1xuXHRcdFx0XHR9IGVsc2UgaWYgKHNjYWxlTW9kZSA9PT0gJ2ZpdCcpIHtcblx0XHRcdFx0XHR6b29tTGV2ZWwgPSBpdGVtLmZpdFJhdGlvO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKHpvb21MZXZlbCA+IDEpIHtcblx0XHRcdFx0XHR6b29tTGV2ZWwgPSAxO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aXRlbS5pbml0aWFsWm9vbUxldmVsID0gem9vbUxldmVsO1xuXHRcdFx0XHRcblx0XHRcdFx0aWYoIWl0ZW0uYm91bmRzKSB7XG5cdFx0XHRcdFx0Ly8gcmV1c2UgYm91bmRzIG9iamVjdFxuXHRcdFx0XHRcdGl0ZW0uYm91bmRzID0gX2dldFplcm9Cb3VuZHMoKTsgXG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0aWYoIXpvb21MZXZlbCkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdF9jYWxjdWxhdGVTaW5nbGVJdGVtUGFuQm91bmRzKGl0ZW0sIGl0ZW0udyAqIHpvb21MZXZlbCwgaXRlbS5oICogem9vbUxldmVsKTtcblxuXHRcdFx0aWYgKGlzSW5pdGlhbCAmJiB6b29tTGV2ZWwgPT09IGl0ZW0uaW5pdGlhbFpvb21MZXZlbCkge1xuXHRcdFx0XHRpdGVtLmluaXRpYWxQb3NpdGlvbiA9IGl0ZW0uYm91bmRzLmNlbnRlcjtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGl0ZW0uYm91bmRzO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRpdGVtLncgPSBpdGVtLmggPSAwO1xuXHRcdFx0aXRlbS5pbml0aWFsWm9vbUxldmVsID0gaXRlbS5maXRSYXRpbyA9IDE7XG5cdFx0XHRpdGVtLmJvdW5kcyA9IF9nZXRaZXJvQm91bmRzKCk7XG5cdFx0XHRpdGVtLmluaXRpYWxQb3NpdGlvbiA9IGl0ZW0uYm91bmRzLmNlbnRlcjtcblxuXHRcdFx0Ly8gaWYgaXQncyBub3QgaW1hZ2UsIHdlIHJldHVybiB6ZXJvIGJvdW5kcyAoY29udGVudCBpcyBub3Qgem9vbWFibGUpXG5cdFx0XHRyZXR1cm4gaXRlbS5ib3VuZHM7XG5cdFx0fVxuXHRcdFxuXHR9LFxuXG5cdFxuXG5cblx0X2FwcGVuZEltYWdlID0gZnVuY3Rpb24oaW5kZXgsIGl0ZW0sIGJhc2VEaXYsIGltZywgcHJldmVudEFuaW1hdGlvbiwga2VlcFBsYWNlaG9sZGVyKSB7XG5cdFx0XG5cblx0XHRpZihpdGVtLmxvYWRFcnJvcikge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmKGltZykge1xuXG5cdFx0XHRpdGVtLmltYWdlQXBwZW5kZWQgPSB0cnVlO1xuXHRcdFx0X3NldEltYWdlU2l6ZShpdGVtLCBpbWcsIChpdGVtID09PSBzZWxmLmN1cnJJdGVtICYmIF9yZW5kZXJNYXhSZXNvbHV0aW9uKSApO1xuXHRcdFx0XG5cdFx0XHRiYXNlRGl2LmFwcGVuZENoaWxkKGltZyk7XG5cblx0XHRcdGlmKGtlZXBQbGFjZWhvbGRlcikge1xuXHRcdFx0XHRzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGlmKGl0ZW0gJiYgaXRlbS5sb2FkZWQgJiYgaXRlbS5wbGFjZWhvbGRlcikge1xuXHRcdFx0XHRcdFx0aXRlbS5wbGFjZWhvbGRlci5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuXHRcdFx0XHRcdFx0aXRlbS5wbGFjZWhvbGRlciA9IG51bGw7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9LCA1MDApO1xuXHRcdFx0fVxuXHRcdH1cblx0fSxcblx0XG5cblxuXHRfcHJlbG9hZEltYWdlID0gZnVuY3Rpb24oaXRlbSkge1xuXHRcdGl0ZW0ubG9hZGluZyA9IHRydWU7XG5cdFx0aXRlbS5sb2FkZWQgPSBmYWxzZTtcblx0XHR2YXIgaW1nID0gaXRlbS5pbWcgPSBmcmFtZXdvcmsuY3JlYXRlRWwoJ3Bzd3BfX2ltZycsICdpbWcnKTtcblx0XHR2YXIgb25Db21wbGV0ZSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0aXRlbS5sb2FkaW5nID0gZmFsc2U7XG5cdFx0XHRpdGVtLmxvYWRlZCA9IHRydWU7XG5cblx0XHRcdGlmKGl0ZW0ubG9hZENvbXBsZXRlKSB7XG5cdFx0XHRcdGl0ZW0ubG9hZENvbXBsZXRlKGl0ZW0pO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0aXRlbS5pbWcgPSBudWxsOyAvLyBubyBuZWVkIHRvIHN0b3JlIGltYWdlIG9iamVjdFxuXHRcdFx0fVxuXHRcdFx0aW1nLm9ubG9hZCA9IGltZy5vbmVycm9yID0gbnVsbDtcblx0XHRcdGltZyA9IG51bGw7XG5cdFx0fTtcblx0XHRpbWcub25sb2FkID0gb25Db21wbGV0ZTtcblx0XHRpbWcub25lcnJvciA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0aXRlbS5sb2FkRXJyb3IgPSB0cnVlO1xuXHRcdFx0b25Db21wbGV0ZSgpO1xuXHRcdH07XHRcdFxuXG5cdFx0aW1nLnNyYyA9IGl0ZW0uc3JjOy8vICsgJz9hPScgKyBNYXRoLnJhbmRvbSgpO1xuXG5cdFx0cmV0dXJuIGltZztcblx0fSxcblx0X2NoZWNrRm9yRXJyb3IgPSBmdW5jdGlvbihpdGVtLCBjbGVhblVwKSB7XG5cdFx0aWYoaXRlbS5zcmMgJiYgaXRlbS5sb2FkRXJyb3IgJiYgaXRlbS5jb250YWluZXIpIHtcblxuXHRcdFx0aWYoY2xlYW5VcCkge1xuXHRcdFx0XHRpdGVtLmNvbnRhaW5lci5pbm5lckhUTUwgPSAnJztcblx0XHRcdH1cblxuXHRcdFx0aXRlbS5jb250YWluZXIuaW5uZXJIVE1MID0gX29wdGlvbnMuZXJyb3JNc2cucmVwbGFjZSgnJXVybCUnLCAgaXRlbS5zcmMgKTtcblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XG5cdFx0fVxuXHR9LFxuXHRfc2V0SW1hZ2VTaXplID0gZnVuY3Rpb24oaXRlbSwgaW1nLCBtYXhSZXMpIHtcblx0XHRpZighaXRlbS5zcmMpIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRpZighaW1nKSB7XG5cdFx0XHRpbWcgPSBpdGVtLmNvbnRhaW5lci5sYXN0Q2hpbGQ7XG5cdFx0fVxuXG5cdFx0dmFyIHcgPSBtYXhSZXMgPyBpdGVtLncgOiBNYXRoLnJvdW5kKGl0ZW0udyAqIGl0ZW0uZml0UmF0aW8pLFxuXHRcdFx0aCA9IG1heFJlcyA/IGl0ZW0uaCA6IE1hdGgucm91bmQoaXRlbS5oICogaXRlbS5maXRSYXRpbyk7XG5cdFx0XG5cdFx0aWYoaXRlbS5wbGFjZWhvbGRlciAmJiAhaXRlbS5sb2FkZWQpIHtcblx0XHRcdGl0ZW0ucGxhY2Vob2xkZXIuc3R5bGUud2lkdGggPSB3ICsgJ3B4Jztcblx0XHRcdGl0ZW0ucGxhY2Vob2xkZXIuc3R5bGUuaGVpZ2h0ID0gaCArICdweCc7XG5cdFx0fVxuXG5cdFx0aW1nLnN0eWxlLndpZHRoID0gdyArICdweCc7XG5cdFx0aW1nLnN0eWxlLmhlaWdodCA9IGggKyAncHgnO1xuXHR9LFxuXHRfYXBwZW5kSW1hZ2VzUG9vbCA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0aWYoX2ltYWdlc1RvQXBwZW5kUG9vbC5sZW5ndGgpIHtcblx0XHRcdHZhciBwb29sSXRlbTtcblxuXHRcdFx0Zm9yKHZhciBpID0gMDsgaSA8IF9pbWFnZXNUb0FwcGVuZFBvb2wubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0cG9vbEl0ZW0gPSBfaW1hZ2VzVG9BcHBlbmRQb29sW2ldO1xuXHRcdFx0XHRpZiggcG9vbEl0ZW0uaG9sZGVyLmluZGV4ID09PSBwb29sSXRlbS5pbmRleCApIHtcblx0XHRcdFx0XHRfYXBwZW5kSW1hZ2UocG9vbEl0ZW0uaW5kZXgsIHBvb2xJdGVtLml0ZW0sIHBvb2xJdGVtLmJhc2VEaXYsIHBvb2xJdGVtLmltZywgZmFsc2UsIHBvb2xJdGVtLmNsZWFyUGxhY2Vob2xkZXIpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRfaW1hZ2VzVG9BcHBlbmRQb29sID0gW107XG5cdFx0fVxuXHR9O1xuXHRcblxuXG5fcmVnaXN0ZXJNb2R1bGUoJ0NvbnRyb2xsZXInLCB7XG5cblx0cHVibGljTWV0aG9kczoge1xuXG5cdFx0bGF6eUxvYWRJdGVtOiBmdW5jdGlvbihpbmRleCkge1xuXHRcdFx0aW5kZXggPSBfZ2V0TG9vcGVkSWQoaW5kZXgpO1xuXHRcdFx0dmFyIGl0ZW0gPSBfZ2V0SXRlbUF0KGluZGV4KTtcblxuXHRcdFx0aWYoIWl0ZW0gfHwgKChpdGVtLmxvYWRlZCB8fCBpdGVtLmxvYWRpbmcpICYmICFfaXRlbXNOZWVkVXBkYXRlKSkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdF9zaG91dCgnZ2V0dGluZ0RhdGEnLCBpbmRleCwgaXRlbSk7XG5cblx0XHRcdGlmICghaXRlbS5zcmMpIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHRfcHJlbG9hZEltYWdlKGl0ZW0pO1xuXHRcdH0sXG5cdFx0aW5pdENvbnRyb2xsZXI6IGZ1bmN0aW9uKCkge1xuXHRcdFx0ZnJhbWV3b3JrLmV4dGVuZChfb3B0aW9ucywgX2NvbnRyb2xsZXJEZWZhdWx0T3B0aW9ucywgdHJ1ZSk7XG5cdFx0XHRzZWxmLml0ZW1zID0gX2l0ZW1zID0gaXRlbXM7XG5cdFx0XHRfZ2V0SXRlbUF0ID0gc2VsZi5nZXRJdGVtQXQ7XG5cdFx0XHRfZ2V0TnVtSXRlbXMgPSBfb3B0aW9ucy5nZXROdW1JdGVtc0ZuOyAvL3NlbGYuZ2V0TnVtSXRlbXM7XG5cblxuXG5cdFx0XHRfaW5pdGlhbElzTG9vcCA9IF9vcHRpb25zLmxvb3A7XG5cdFx0XHRpZihfZ2V0TnVtSXRlbXMoKSA8IDMpIHtcblx0XHRcdFx0X29wdGlvbnMubG9vcCA9IGZhbHNlOyAvLyBkaXNhYmxlIGxvb3AgaWYgbGVzcyB0aGVuIDMgaXRlbXNcblx0XHRcdH1cblxuXHRcdFx0X2xpc3RlbignYmVmb3JlQ2hhbmdlJywgZnVuY3Rpb24oZGlmZikge1xuXG5cdFx0XHRcdHZhciBwID0gX29wdGlvbnMucHJlbG9hZCxcblx0XHRcdFx0XHRpc05leHQgPSBkaWZmID09PSBudWxsID8gdHJ1ZSA6IChkaWZmID49IDApLFxuXHRcdFx0XHRcdHByZWxvYWRCZWZvcmUgPSBNYXRoLm1pbihwWzBdLCBfZ2V0TnVtSXRlbXMoKSApLFxuXHRcdFx0XHRcdHByZWxvYWRBZnRlciA9IE1hdGgubWluKHBbMV0sIF9nZXROdW1JdGVtcygpICksXG5cdFx0XHRcdFx0aTtcblxuXG5cdFx0XHRcdGZvcihpID0gMTsgaSA8PSAoaXNOZXh0ID8gcHJlbG9hZEFmdGVyIDogcHJlbG9hZEJlZm9yZSk7IGkrKykge1xuXHRcdFx0XHRcdHNlbGYubGF6eUxvYWRJdGVtKF9jdXJyZW50SXRlbUluZGV4K2kpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGZvcihpID0gMTsgaSA8PSAoaXNOZXh0ID8gcHJlbG9hZEJlZm9yZSA6IHByZWxvYWRBZnRlcik7IGkrKykge1xuXHRcdFx0XHRcdHNlbGYubGF6eUxvYWRJdGVtKF9jdXJyZW50SXRlbUluZGV4LWkpO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblxuXHRcdFx0X2xpc3RlbignaW5pdGlhbExheW91dCcsIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRzZWxmLmN1cnJJdGVtLmluaXRpYWxMYXlvdXQgPSBfb3B0aW9ucy5nZXRUaHVtYkJvdW5kc0ZuICYmIF9vcHRpb25zLmdldFRodW1iQm91bmRzRm4oX2N1cnJlbnRJdGVtSW5kZXgpO1xuXHRcdFx0fSk7XG5cblx0XHRcdF9saXN0ZW4oJ21haW5TY3JvbGxBbmltQ29tcGxldGUnLCBfYXBwZW5kSW1hZ2VzUG9vbCk7XG5cdFx0XHRfbGlzdGVuKCdpbml0aWFsWm9vbUluRW5kJywgX2FwcGVuZEltYWdlc1Bvb2wpO1xuXG5cblxuXHRcdFx0X2xpc3RlbignZGVzdHJveScsIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHR2YXIgaXRlbTtcblx0XHRcdFx0Zm9yKHZhciBpID0gMDsgaSA8IF9pdGVtcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRcdGl0ZW0gPSBfaXRlbXNbaV07XG5cdFx0XHRcdFx0Ly8gcmVtb3ZlIHJlZmVyZW5jZSB0byBET00gZWxlbWVudHMsIGZvciBHQ1xuXHRcdFx0XHRcdGlmKGl0ZW0uY29udGFpbmVyKSB7XG5cdFx0XHRcdFx0XHRpdGVtLmNvbnRhaW5lciA9IG51bGw7IFxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZihpdGVtLnBsYWNlaG9sZGVyKSB7XG5cdFx0XHRcdFx0XHRpdGVtLnBsYWNlaG9sZGVyID0gbnVsbDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYoaXRlbS5pbWcpIHtcblx0XHRcdFx0XHRcdGl0ZW0uaW1nID0gbnVsbDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYoaXRlbS5wcmVsb2FkZXIpIHtcblx0XHRcdFx0XHRcdGl0ZW0ucHJlbG9hZGVyID0gbnVsbDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYoaXRlbS5sb2FkRXJyb3IpIHtcblx0XHRcdFx0XHRcdGl0ZW0ubG9hZGVkID0gaXRlbS5sb2FkRXJyb3IgPSBmYWxzZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0X2ltYWdlc1RvQXBwZW5kUG9vbCA9IG51bGw7XG5cdFx0XHR9KTtcblx0XHR9LFxuXG5cblx0XHRnZXRJdGVtQXQ6IGZ1bmN0aW9uKGluZGV4KSB7XG5cdFx0XHRpZiAoaW5kZXggPj0gMCkge1xuXHRcdFx0XHRyZXR1cm4gX2l0ZW1zW2luZGV4XSAhPT0gdW5kZWZpbmVkID8gX2l0ZW1zW2luZGV4XSA6IGZhbHNlO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH0sXG5cblx0XHRhbGxvd1Byb2dyZXNzaXZlSW1nOiBmdW5jdGlvbigpIHtcblx0XHRcdC8vIDEuIFByb2dyZXNzaXZlIGltYWdlIGxvYWRpbmcgaXNuJ3Qgd29ya2luZyBvbiB3ZWJraXQvYmxpbmsgXG5cdFx0XHQvLyAgICB3aGVuIGh3LWFjY2VsZXJhdGlvbiAoZS5nLiB0cmFuc2xhdGVaKSBpcyBhcHBsaWVkIHRvIElNRyBlbGVtZW50LlxuXHRcdFx0Ly8gICAgVGhhdCdzIHdoeSBpbiBQaG90b1N3aXBlIHBhcmVudCBlbGVtZW50IGdldHMgem9vbSB0cmFuc2Zvcm0sIG5vdCBpbWFnZSBpdHNlbGYuXG5cdFx0XHQvLyAgICBcblx0XHRcdC8vIDIuIFByb2dyZXNzaXZlIGltYWdlIGxvYWRpbmcgc29tZXRpbWVzIGJsaW5rcyBpbiB3ZWJraXQvYmxpbmsgd2hlbiBhcHBseWluZyBhbmltYXRpb24gdG8gcGFyZW50IGVsZW1lbnQuXG5cdFx0XHQvLyAgICBUaGF0J3Mgd2h5IGl0J3MgZGlzYWJsZWQgb24gdG91Y2ggZGV2aWNlcyAobWFpbmx5IGJlY2F1c2Ugb2Ygc3dpcGUgdHJhbnNpdGlvbilcblx0XHRcdC8vICAgIFxuXHRcdFx0Ly8gMy4gUHJvZ3Jlc3NpdmUgaW1hZ2UgbG9hZGluZyBzb21ldGltZXMgZG9lc24ndCB3b3JrIGluIElFICh1cCB0byAxMSkuXG5cblx0XHRcdC8vIERvbid0IGFsbG93IHByb2dyZXNzaXZlIGxvYWRpbmcgb24gbm9uLWxhcmdlIHRvdWNoIGRldmljZXNcblx0XHRcdHJldHVybiBfb3B0aW9ucy5mb3JjZVByb2dyZXNzaXZlTG9hZGluZyB8fCAhX2xpa2VseVRvdWNoRGV2aWNlIHx8IF9vcHRpb25zLm1vdXNlVXNlZCB8fCBzY3JlZW4ud2lkdGggPiAxMjAwOyBcblx0XHRcdC8vIDEyMDAgLSB0byBlbGltaW5hdGUgdG91Y2ggZGV2aWNlcyB3aXRoIGxhcmdlIHNjcmVlbiAobGlrZSBDaHJvbWVib29rIFBpeGVsKVxuXHRcdH0sXG5cblx0XHRzZXRDb250ZW50OiBmdW5jdGlvbihob2xkZXIsIGluZGV4KSB7XG5cblx0XHRcdGlmKF9vcHRpb25zLmxvb3ApIHtcblx0XHRcdFx0aW5kZXggPSBfZ2V0TG9vcGVkSWQoaW5kZXgpO1xuXHRcdFx0fVxuXG5cdFx0XHR2YXIgcHJldkl0ZW0gPSBzZWxmLmdldEl0ZW1BdChob2xkZXIuaW5kZXgpO1xuXHRcdFx0aWYocHJldkl0ZW0pIHtcblx0XHRcdFx0cHJldkl0ZW0uY29udGFpbmVyID0gbnVsbDtcblx0XHRcdH1cblx0XG5cdFx0XHR2YXIgaXRlbSA9IHNlbGYuZ2V0SXRlbUF0KGluZGV4KSxcblx0XHRcdFx0aW1nO1xuXHRcdFx0XG5cdFx0XHRpZighaXRlbSkge1xuXHRcdFx0XHRob2xkZXIuZWwuaW5uZXJIVE1MID0gJyc7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gYWxsb3cgdG8gb3ZlcnJpZGUgZGF0YVxuXHRcdFx0X3Nob3V0KCdnZXR0aW5nRGF0YScsIGluZGV4LCBpdGVtKTtcblxuXHRcdFx0aG9sZGVyLmluZGV4ID0gaW5kZXg7XG5cdFx0XHRob2xkZXIuaXRlbSA9IGl0ZW07XG5cblx0XHRcdC8vIGJhc2UgY29udGFpbmVyIERJViBpcyBjcmVhdGVkIG9ubHkgb25jZSBmb3IgZWFjaCBvZiAzIGhvbGRlcnNcblx0XHRcdHZhciBiYXNlRGl2ID0gaXRlbS5jb250YWluZXIgPSBmcmFtZXdvcmsuY3JlYXRlRWwoJ3Bzd3BfX3pvb20td3JhcCcpOyBcblxuXHRcdFx0XG5cblx0XHRcdGlmKCFpdGVtLnNyYyAmJiBpdGVtLmh0bWwpIHtcblx0XHRcdFx0aWYoaXRlbS5odG1sLnRhZ05hbWUpIHtcblx0XHRcdFx0XHRiYXNlRGl2LmFwcGVuZENoaWxkKGl0ZW0uaHRtbCk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0YmFzZURpdi5pbm5lckhUTUwgPSBpdGVtLmh0bWw7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0X2NoZWNrRm9yRXJyb3IoaXRlbSk7XG5cblx0XHRcdF9jYWxjdWxhdGVJdGVtU2l6ZShpdGVtLCBfdmlld3BvcnRTaXplKTtcblx0XHRcdFxuXHRcdFx0aWYoaXRlbS5zcmMgJiYgIWl0ZW0ubG9hZEVycm9yICYmICFpdGVtLmxvYWRlZCkge1xuXG5cdFx0XHRcdGl0ZW0ubG9hZENvbXBsZXRlID0gZnVuY3Rpb24oaXRlbSkge1xuXG5cdFx0XHRcdFx0Ly8gZ2FsbGVyeSBjbG9zZWQgYmVmb3JlIGltYWdlIGZpbmlzaGVkIGxvYWRpbmdcblx0XHRcdFx0XHRpZighX2lzT3Blbikge1xuXHRcdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIGNoZWNrIGlmIGhvbGRlciBoYXNuJ3QgY2hhbmdlZCB3aGlsZSBpbWFnZSB3YXMgbG9hZGluZ1xuXHRcdFx0XHRcdGlmKGhvbGRlciAmJiBob2xkZXIuaW5kZXggPT09IGluZGV4ICkge1xuXHRcdFx0XHRcdFx0aWYoIF9jaGVja0ZvckVycm9yKGl0ZW0sIHRydWUpICkge1xuXHRcdFx0XHRcdFx0XHRpdGVtLmxvYWRDb21wbGV0ZSA9IGl0ZW0uaW1nID0gbnVsbDtcblx0XHRcdFx0XHRcdFx0X2NhbGN1bGF0ZUl0ZW1TaXplKGl0ZW0sIF92aWV3cG9ydFNpemUpO1xuXHRcdFx0XHRcdFx0XHRfYXBwbHlab29tUGFuVG9JdGVtKGl0ZW0pO1xuXG5cdFx0XHRcdFx0XHRcdGlmKGhvbGRlci5pbmRleCA9PT0gX2N1cnJlbnRJdGVtSW5kZXgpIHtcblx0XHRcdFx0XHRcdFx0XHQvLyByZWNhbGN1bGF0ZSBkaW1lbnNpb25zXG5cdFx0XHRcdFx0XHRcdFx0c2VsZi51cGRhdGVDdXJyWm9vbUl0ZW0oKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRpZiggIWl0ZW0uaW1hZ2VBcHBlbmRlZCApIHtcblx0XHRcdFx0XHRcdFx0aWYoX2ZlYXR1cmVzLnRyYW5zZm9ybSAmJiAoX21haW5TY3JvbGxBbmltYXRpbmcgfHwgX2luaXRpYWxab29tUnVubmluZykgKSB7XG5cdFx0XHRcdFx0XHRcdFx0X2ltYWdlc1RvQXBwZW5kUG9vbC5wdXNoKHtcblx0XHRcdFx0XHRcdFx0XHRcdGl0ZW06aXRlbSxcblx0XHRcdFx0XHRcdFx0XHRcdGJhc2VEaXY6YmFzZURpdixcblx0XHRcdFx0XHRcdFx0XHRcdGltZzppdGVtLmltZyxcblx0XHRcdFx0XHRcdFx0XHRcdGluZGV4OmluZGV4LFxuXHRcdFx0XHRcdFx0XHRcdFx0aG9sZGVyOmhvbGRlcixcblx0XHRcdFx0XHRcdFx0XHRcdGNsZWFyUGxhY2Vob2xkZXI6dHJ1ZVxuXHRcdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdF9hcHBlbmRJbWFnZShpbmRleCwgaXRlbSwgYmFzZURpdiwgaXRlbS5pbWcsIF9tYWluU2Nyb2xsQW5pbWF0aW5nIHx8IF9pbml0aWFsWm9vbVJ1bm5pbmcsIHRydWUpO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHQvLyByZW1vdmUgcHJlbG9hZGVyICYgbWluaS1pbWdcblx0XHRcdFx0XHRcdFx0aWYoIV9pbml0aWFsWm9vbVJ1bm5pbmcgJiYgaXRlbS5wbGFjZWhvbGRlcikge1xuXHRcdFx0XHRcdFx0XHRcdGl0ZW0ucGxhY2Vob2xkZXIuc3R5bGUuZGlzcGxheSA9ICdub25lJztcblx0XHRcdFx0XHRcdFx0XHRpdGVtLnBsYWNlaG9sZGVyID0gbnVsbDtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGl0ZW0ubG9hZENvbXBsZXRlID0gbnVsbDtcblx0XHRcdFx0XHRpdGVtLmltZyA9IG51bGw7IC8vIG5vIG5lZWQgdG8gc3RvcmUgaW1hZ2UgZWxlbWVudCBhZnRlciBpdCdzIGFkZGVkXG5cblx0XHRcdFx0XHRfc2hvdXQoJ2ltYWdlTG9hZENvbXBsZXRlJywgaW5kZXgsIGl0ZW0pO1xuXHRcdFx0XHR9O1xuXG5cdFx0XHRcdGlmKGZyYW1ld29yay5mZWF0dXJlcy50cmFuc2Zvcm0pIHtcblx0XHRcdFx0XHRcblx0XHRcdFx0XHR2YXIgcGxhY2Vob2xkZXJDbGFzc05hbWUgPSAncHN3cF9faW1nIHBzd3BfX2ltZy0tcGxhY2Vob2xkZXInOyBcblx0XHRcdFx0XHRwbGFjZWhvbGRlckNsYXNzTmFtZSArPSAoaXRlbS5tc3JjID8gJycgOiAnIHBzd3BfX2ltZy0tcGxhY2Vob2xkZXItLWJsYW5rJyk7XG5cblx0XHRcdFx0XHR2YXIgcGxhY2Vob2xkZXIgPSBmcmFtZXdvcmsuY3JlYXRlRWwocGxhY2Vob2xkZXJDbGFzc05hbWUsIGl0ZW0ubXNyYyA/ICdpbWcnIDogJycpO1xuXHRcdFx0XHRcdGlmKGl0ZW0ubXNyYykge1xuXHRcdFx0XHRcdFx0cGxhY2Vob2xkZXIuc3JjID0gaXRlbS5tc3JjO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcblx0XHRcdFx0XHRfc2V0SW1hZ2VTaXplKGl0ZW0sIHBsYWNlaG9sZGVyKTtcblxuXHRcdFx0XHRcdGJhc2VEaXYuYXBwZW5kQ2hpbGQocGxhY2Vob2xkZXIpO1xuXHRcdFx0XHRcdGl0ZW0ucGxhY2Vob2xkZXIgPSBwbGFjZWhvbGRlcjtcblxuXHRcdFx0XHR9XG5cdFx0XHRcdFxuXG5cdFx0XHRcdFxuXG5cdFx0XHRcdGlmKCFpdGVtLmxvYWRpbmcpIHtcblx0XHRcdFx0XHRfcHJlbG9hZEltYWdlKGl0ZW0pO1xuXHRcdFx0XHR9XG5cblxuXHRcdFx0XHRpZiggc2VsZi5hbGxvd1Byb2dyZXNzaXZlSW1nKCkgKSB7XG5cdFx0XHRcdFx0Ly8ganVzdCBhcHBlbmQgaW1hZ2Vcblx0XHRcdFx0XHRpZighX2luaXRpYWxDb250ZW50U2V0ICYmIF9mZWF0dXJlcy50cmFuc2Zvcm0pIHtcblx0XHRcdFx0XHRcdF9pbWFnZXNUb0FwcGVuZFBvb2wucHVzaCh7XG5cdFx0XHRcdFx0XHRcdGl0ZW06aXRlbSwgXG5cdFx0XHRcdFx0XHRcdGJhc2VEaXY6YmFzZURpdiwgXG5cdFx0XHRcdFx0XHRcdGltZzppdGVtLmltZywgXG5cdFx0XHRcdFx0XHRcdGluZGV4OmluZGV4LCBcblx0XHRcdFx0XHRcdFx0aG9sZGVyOmhvbGRlclxuXHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdF9hcHBlbmRJbWFnZShpbmRleCwgaXRlbSwgYmFzZURpdiwgaXRlbS5pbWcsIHRydWUsIHRydWUpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRcblx0XHRcdH0gZWxzZSBpZihpdGVtLnNyYyAmJiAhaXRlbS5sb2FkRXJyb3IpIHtcblx0XHRcdFx0Ly8gaW1hZ2Ugb2JqZWN0IGlzIGNyZWF0ZWQgZXZlcnkgdGltZSwgZHVlIHRvIGJ1Z3Mgb2YgaW1hZ2UgbG9hZGluZyAmIGRlbGF5IHdoZW4gc3dpdGNoaW5nIGltYWdlc1xuXHRcdFx0XHRpbWcgPSBmcmFtZXdvcmsuY3JlYXRlRWwoJ3Bzd3BfX2ltZycsICdpbWcnKTtcblx0XHRcdFx0aW1nLnN0eWxlLm9wYWNpdHkgPSAxO1xuXHRcdFx0XHRpbWcuc3JjID0gaXRlbS5zcmM7XG5cdFx0XHRcdF9zZXRJbWFnZVNpemUoaXRlbSwgaW1nKTtcblx0XHRcdFx0X2FwcGVuZEltYWdlKGluZGV4LCBpdGVtLCBiYXNlRGl2LCBpbWcsIHRydWUpO1xuXHRcdFx0fVxuXHRcdFx0XG5cblx0XHRcdGlmKCFfaW5pdGlhbENvbnRlbnRTZXQgJiYgaW5kZXggPT09IF9jdXJyZW50SXRlbUluZGV4KSB7XG5cdFx0XHRcdF9jdXJyWm9vbUVsZW1lbnRTdHlsZSA9IGJhc2VEaXYuc3R5bGU7XG5cdFx0XHRcdF9zaG93T3JIaWRlKGl0ZW0sIChpbWcgfHxpdGVtLmltZykgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdF9hcHBseVpvb21QYW5Ub0l0ZW0oaXRlbSk7XG5cdFx0XHR9XG5cblx0XHRcdGhvbGRlci5lbC5pbm5lckhUTUwgPSAnJztcblx0XHRcdGhvbGRlci5lbC5hcHBlbmRDaGlsZChiYXNlRGl2KTtcblx0XHR9LFxuXG5cdFx0Y2xlYW5TbGlkZTogZnVuY3Rpb24oIGl0ZW0gKSB7XG5cdFx0XHRpZihpdGVtLmltZyApIHtcblx0XHRcdFx0aXRlbS5pbWcub25sb2FkID0gaXRlbS5pbWcub25lcnJvciA9IG51bGw7XG5cdFx0XHR9XG5cdFx0XHRpdGVtLmxvYWRlZCA9IGl0ZW0ubG9hZGluZyA9IGl0ZW0uaW1nID0gaXRlbS5pbWFnZUFwcGVuZGVkID0gZmFsc2U7XG5cdFx0fVxuXG5cdH1cbn0pO1xuXG4vKj4+aXRlbXMtY29udHJvbGxlciovXG5cbi8qPj50YXAqL1xuLyoqXG4gKiB0YXAuanM6XG4gKlxuICogRGlzcGxhdGNoZXMgdGFwIGFuZCBkb3VibGUtdGFwIGV2ZW50cy5cbiAqIFxuICovXG5cbnZhciB0YXBUaW1lcixcblx0dGFwUmVsZWFzZVBvaW50ID0ge30sXG5cdF9kaXNwYXRjaFRhcEV2ZW50ID0gZnVuY3Rpb24ob3JpZ0V2ZW50LCByZWxlYXNlUG9pbnQsIHBvaW50ZXJUeXBlKSB7XHRcdFxuXHRcdHZhciBlID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoICdDdXN0b21FdmVudCcgKSxcblx0XHRcdGVEZXRhaWwgPSB7XG5cdFx0XHRcdG9yaWdFdmVudDpvcmlnRXZlbnQsIFxuXHRcdFx0XHR0YXJnZXQ6b3JpZ0V2ZW50LnRhcmdldCwgXG5cdFx0XHRcdHJlbGVhc2VQb2ludDogcmVsZWFzZVBvaW50LCBcblx0XHRcdFx0cG9pbnRlclR5cGU6cG9pbnRlclR5cGUgfHwgJ3RvdWNoJ1xuXHRcdFx0fTtcblxuXHRcdGUuaW5pdEN1c3RvbUV2ZW50KCAncHN3cFRhcCcsIHRydWUsIHRydWUsIGVEZXRhaWwgKTtcblx0XHRvcmlnRXZlbnQudGFyZ2V0LmRpc3BhdGNoRXZlbnQoZSk7XG5cdH07XG5cbl9yZWdpc3Rlck1vZHVsZSgnVGFwJywge1xuXHRwdWJsaWNNZXRob2RzOiB7XG5cdFx0aW5pdFRhcDogZnVuY3Rpb24oKSB7XG5cdFx0XHRfbGlzdGVuKCdmaXJzdFRvdWNoU3RhcnQnLCBzZWxmLm9uVGFwU3RhcnQpO1xuXHRcdFx0X2xpc3RlbigndG91Y2hSZWxlYXNlJywgc2VsZi5vblRhcFJlbGVhc2UpO1xuXHRcdFx0X2xpc3RlbignZGVzdHJveScsIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHR0YXBSZWxlYXNlUG9pbnQgPSB7fTtcblx0XHRcdFx0dGFwVGltZXIgPSBudWxsO1xuXHRcdFx0fSk7XG5cdFx0fSxcblx0XHRvblRhcFN0YXJ0OiBmdW5jdGlvbih0b3VjaExpc3QpIHtcblx0XHRcdGlmKHRvdWNoTGlzdC5sZW5ndGggPiAxKSB7XG5cdFx0XHRcdGNsZWFyVGltZW91dCh0YXBUaW1lcik7XG5cdFx0XHRcdHRhcFRpbWVyID0gbnVsbDtcblx0XHRcdH1cblx0XHR9LFxuXHRcdG9uVGFwUmVsZWFzZTogZnVuY3Rpb24oZSwgcmVsZWFzZVBvaW50KSB7XG5cdFx0XHRpZighcmVsZWFzZVBvaW50KSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0aWYoIV9tb3ZlZCAmJiAhX2lzTXVsdGl0b3VjaCAmJiAhX251bUFuaW1hdGlvbnMpIHtcblx0XHRcdFx0dmFyIHAwID0gcmVsZWFzZVBvaW50O1xuXHRcdFx0XHRpZih0YXBUaW1lcikge1xuXHRcdFx0XHRcdGNsZWFyVGltZW91dCh0YXBUaW1lcik7XG5cdFx0XHRcdFx0dGFwVGltZXIgPSBudWxsO1xuXG5cdFx0XHRcdFx0Ly8gQ2hlY2sgaWYgdGFwZWQgb24gdGhlIHNhbWUgcGxhY2Vcblx0XHRcdFx0XHRpZiAoIF9pc05lYXJieVBvaW50cyhwMCwgdGFwUmVsZWFzZVBvaW50KSApIHtcblx0XHRcdFx0XHRcdF9zaG91dCgnZG91YmxlVGFwJywgcDApO1xuXHRcdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmKHJlbGVhc2VQb2ludC50eXBlID09PSAnbW91c2UnKSB7XG5cdFx0XHRcdFx0X2Rpc3BhdGNoVGFwRXZlbnQoZSwgcmVsZWFzZVBvaW50LCAnbW91c2UnKTtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblxuXHRcdFx0XHR2YXIgY2xpY2tlZFRhZ05hbWUgPSBlLnRhcmdldC50YWdOYW1lLnRvVXBwZXJDYXNlKCk7XG5cdFx0XHRcdC8vIGF2b2lkIGRvdWJsZSB0YXAgZGVsYXkgb24gYnV0dG9ucyBhbmQgZWxlbWVudHMgdGhhdCBoYXZlIGNsYXNzIHBzd3BfX3NpbmdsZS10YXBcblx0XHRcdFx0aWYoY2xpY2tlZFRhZ05hbWUgPT09ICdCVVRUT04nIHx8IGZyYW1ld29yay5oYXNDbGFzcyhlLnRhcmdldCwgJ3Bzd3BfX3NpbmdsZS10YXAnKSApIHtcblx0XHRcdFx0XHRfZGlzcGF0Y2hUYXBFdmVudChlLCByZWxlYXNlUG9pbnQpO1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdF9lcXVhbGl6ZVBvaW50cyh0YXBSZWxlYXNlUG9pbnQsIHAwKTtcblxuXHRcdFx0XHR0YXBUaW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0X2Rpc3BhdGNoVGFwRXZlbnQoZSwgcmVsZWFzZVBvaW50KTtcblx0XHRcdFx0XHR0YXBUaW1lciA9IG51bGw7XG5cdFx0XHRcdH0sIDMwMCk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59KTtcblxuLyo+PnRhcCovXG5cbi8qPj5kZXNrdG9wLXpvb20qL1xuLyoqXG4gKlxuICogZGVza3RvcC16b29tLmpzOlxuICpcbiAqIC0gQmluZHMgbW91c2V3aGVlbCBldmVudCBmb3IgcGFuaW5nIHpvb21lZCBpbWFnZS5cbiAqIC0gTWFuYWdlcyBcImRyYWdnaW5nXCIsIFwiem9vbWVkLWluXCIsIFwiem9vbS1vdXRcIiBjbGFzc2VzLlxuICogICAod2hpY2ggYXJlIHVzZWQgZm9yIGN1cnNvcnMgYW5kIHpvb20gaWNvbilcbiAqIC0gQWRkcyB0b2dnbGVEZXNrdG9wWm9vbSBmdW5jdGlvbi5cbiAqIFxuICovXG5cbnZhciBfd2hlZWxEZWx0YTtcblx0XG5fcmVnaXN0ZXJNb2R1bGUoJ0Rlc2t0b3Bab29tJywge1xuXG5cdHB1YmxpY01ldGhvZHM6IHtcblxuXHRcdGluaXREZXNrdG9wWm9vbTogZnVuY3Rpb24oKSB7XG5cblx0XHRcdGlmKF9vbGRJRSkge1xuXHRcdFx0XHQvLyBubyB6b29tIGZvciBvbGQgSUUgKDw9OClcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHRpZihfbGlrZWx5VG91Y2hEZXZpY2UpIHtcblx0XHRcdFx0Ly8gaWYgZGV0ZWN0ZWQgaGFyZHdhcmUgdG91Y2ggc3VwcG9ydCwgd2Ugd2FpdCB1bnRpbCBtb3VzZSBpcyB1c2VkLFxuXHRcdFx0XHQvLyBhbmQgb25seSB0aGVuIGFwcGx5IGRlc2t0b3Atem9vbSBmZWF0dXJlc1xuXHRcdFx0XHRfbGlzdGVuKCdtb3VzZVVzZWQnLCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRzZWxmLnNldHVwRGVza3RvcFpvb20oKTtcblx0XHRcdFx0fSk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRzZWxmLnNldHVwRGVza3RvcFpvb20odHJ1ZSk7XG5cdFx0XHR9XG5cblx0XHR9LFxuXG5cdFx0c2V0dXBEZXNrdG9wWm9vbTogZnVuY3Rpb24ob25Jbml0KSB7XG5cblx0XHRcdF93aGVlbERlbHRhID0ge307XG5cblx0XHRcdHZhciBldmVudHMgPSAnd2hlZWwgbW91c2V3aGVlbCBET01Nb3VzZVNjcm9sbCc7XG5cdFx0XHRcblx0XHRcdF9saXN0ZW4oJ2JpbmRFdmVudHMnLCBmdW5jdGlvbigpIHtcblx0XHRcdFx0ZnJhbWV3b3JrLmJpbmQodGVtcGxhdGUsIGV2ZW50cywgIHNlbGYuaGFuZGxlTW91c2VXaGVlbCk7XG5cdFx0XHR9KTtcblxuXHRcdFx0X2xpc3RlbigndW5iaW5kRXZlbnRzJywgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmKF93aGVlbERlbHRhKSB7XG5cdFx0XHRcdFx0ZnJhbWV3b3JrLnVuYmluZCh0ZW1wbGF0ZSwgZXZlbnRzLCBzZWxmLmhhbmRsZU1vdXNlV2hlZWwpO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblxuXHRcdFx0c2VsZi5tb3VzZVpvb21lZEluID0gZmFsc2U7XG5cblx0XHRcdHZhciBoYXNEcmFnZ2luZ0NsYXNzLFxuXHRcdFx0XHR1cGRhdGVab29tYWJsZSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGlmKHNlbGYubW91c2Vab29tZWRJbikge1xuXHRcdFx0XHRcdFx0ZnJhbWV3b3JrLnJlbW92ZUNsYXNzKHRlbXBsYXRlLCAncHN3cC0tem9vbWVkLWluJyk7XG5cdFx0XHRcdFx0XHRzZWxmLm1vdXNlWm9vbWVkSW4gPSBmYWxzZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYoX2N1cnJab29tTGV2ZWwgPCAxKSB7XG5cdFx0XHRcdFx0XHRmcmFtZXdvcmsuYWRkQ2xhc3ModGVtcGxhdGUsICdwc3dwLS16b29tLWFsbG93ZWQnKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0ZnJhbWV3b3JrLnJlbW92ZUNsYXNzKHRlbXBsYXRlLCAncHN3cC0tem9vbS1hbGxvd2VkJyk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJlbW92ZURyYWdnaW5nQ2xhc3MoKTtcblx0XHRcdFx0fSxcblx0XHRcdFx0cmVtb3ZlRHJhZ2dpbmdDbGFzcyA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGlmKGhhc0RyYWdnaW5nQ2xhc3MpIHtcblx0XHRcdFx0XHRcdGZyYW1ld29yay5yZW1vdmVDbGFzcyh0ZW1wbGF0ZSwgJ3Bzd3AtLWRyYWdnaW5nJyk7XG5cdFx0XHRcdFx0XHRoYXNEcmFnZ2luZ0NsYXNzID0gZmFsc2U7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9O1xuXG5cdFx0XHRfbGlzdGVuKCdyZXNpemUnICwgdXBkYXRlWm9vbWFibGUpO1xuXHRcdFx0X2xpc3RlbignYWZ0ZXJDaGFuZ2UnICwgdXBkYXRlWm9vbWFibGUpO1xuXHRcdFx0X2xpc3RlbigncG9pbnRlckRvd24nLCBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYoc2VsZi5tb3VzZVpvb21lZEluKSB7XG5cdFx0XHRcdFx0aGFzRHJhZ2dpbmdDbGFzcyA9IHRydWU7XG5cdFx0XHRcdFx0ZnJhbWV3b3JrLmFkZENsYXNzKHRlbXBsYXRlLCAncHN3cC0tZHJhZ2dpbmcnKTtcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cdFx0XHRfbGlzdGVuKCdwb2ludGVyVXAnLCByZW1vdmVEcmFnZ2luZ0NsYXNzKTtcblxuXHRcdFx0aWYoIW9uSW5pdCkge1xuXHRcdFx0XHR1cGRhdGVab29tYWJsZSgpO1xuXHRcdFx0fVxuXHRcdFx0XG5cdFx0fSxcblxuXHRcdGhhbmRsZU1vdXNlV2hlZWw6IGZ1bmN0aW9uKGUpIHtcblxuXHRcdFx0aWYoX2N1cnJab29tTGV2ZWwgPD0gc2VsZi5jdXJySXRlbS5maXRSYXRpbykge1xuXHRcdFx0XHRpZiggX29wdGlvbnMubW9kYWwgKSB7XG5cblx0XHRcdFx0XHRpZiAoIV9vcHRpb25zLmNsb3NlT25TY3JvbGwgfHwgX251bUFuaW1hdGlvbnMgfHwgX2lzRHJhZ2dpbmcpIHtcblx0XHRcdFx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0XHR9IGVsc2UgaWYoX3RyYW5zZm9ybUtleSAmJiBNYXRoLmFicyhlLmRlbHRhWSkgPiAyKSB7XG5cdFx0XHRcdFx0XHQvLyBjbG9zZSBQaG90b1N3aXBlXG5cdFx0XHRcdFx0XHQvLyBpZiBicm93c2VyIHN1cHBvcnRzIHRyYW5zZm9ybXMgJiBzY3JvbGwgY2hhbmdlZCBlbm91Z2hcblx0XHRcdFx0XHRcdF9jbG9zZWRCeVNjcm9sbCA9IHRydWU7XG5cdFx0XHRcdFx0XHRzZWxmLmNsb3NlKCk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHR9XG5cblx0XHRcdC8vIGFsbG93IGp1c3Qgb25lIGV2ZW50IHRvIGZpcmVcblx0XHRcdGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cblx0XHRcdC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0V2ZW50cy93aGVlbFxuXHRcdFx0X3doZWVsRGVsdGEueCA9IDA7XG5cblx0XHRcdGlmKCdkZWx0YVgnIGluIGUpIHtcblx0XHRcdFx0aWYoZS5kZWx0YU1vZGUgPT09IDEgLyogRE9NX0RFTFRBX0xJTkUgKi8pIHtcblx0XHRcdFx0XHQvLyAxOCAtIGF2ZXJhZ2UgbGluZSBoZWlnaHRcblx0XHRcdFx0XHRfd2hlZWxEZWx0YS54ID0gZS5kZWx0YVggKiAxODtcblx0XHRcdFx0XHRfd2hlZWxEZWx0YS55ID0gZS5kZWx0YVkgKiAxODtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRfd2hlZWxEZWx0YS54ID0gZS5kZWx0YVg7XG5cdFx0XHRcdFx0X3doZWVsRGVsdGEueSA9IGUuZGVsdGFZO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2UgaWYoJ3doZWVsRGVsdGEnIGluIGUpIHtcblx0XHRcdFx0aWYoZS53aGVlbERlbHRhWCkge1xuXHRcdFx0XHRcdF93aGVlbERlbHRhLnggPSAtMC4xNiAqIGUud2hlZWxEZWx0YVg7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYoZS53aGVlbERlbHRhWSkge1xuXHRcdFx0XHRcdF93aGVlbERlbHRhLnkgPSAtMC4xNiAqIGUud2hlZWxEZWx0YVk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0X3doZWVsRGVsdGEueSA9IC0wLjE2ICogZS53aGVlbERlbHRhO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2UgaWYoJ2RldGFpbCcgaW4gZSkge1xuXHRcdFx0XHRfd2hlZWxEZWx0YS55ID0gZS5kZXRhaWw7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdF9jYWxjdWxhdGVQYW5Cb3VuZHMoX2N1cnJab29tTGV2ZWwsIHRydWUpO1xuXG5cdFx0XHR2YXIgbmV3UGFuWCA9IF9wYW5PZmZzZXQueCAtIF93aGVlbERlbHRhLngsXG5cdFx0XHRcdG5ld1BhblkgPSBfcGFuT2Zmc2V0LnkgLSBfd2hlZWxEZWx0YS55O1xuXG5cdFx0XHQvLyBvbmx5IHByZXZlbnQgc2Nyb2xsaW5nIGluIG5vbm1vZGFsIG1vZGUgd2hlbiBub3QgYXQgZWRnZXNcblx0XHRcdGlmIChfb3B0aW9ucy5tb2RhbCB8fFxuXHRcdFx0XHQoXG5cdFx0XHRcdG5ld1BhblggPD0gX2N1cnJQYW5Cb3VuZHMubWluLnggJiYgbmV3UGFuWCA+PSBfY3VyclBhbkJvdW5kcy5tYXgueCAmJlxuXHRcdFx0XHRuZXdQYW5ZIDw9IF9jdXJyUGFuQm91bmRzLm1pbi55ICYmIG5ld1BhblkgPj0gX2N1cnJQYW5Cb3VuZHMubWF4Lnlcblx0XHRcdFx0KSApIHtcblx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBUT0RPOiB1c2UgckFGIGluc3RlYWQgb2YgbW91c2V3aGVlbD9cblx0XHRcdHNlbGYucGFuVG8obmV3UGFuWCwgbmV3UGFuWSk7XG5cdFx0fSxcblxuXHRcdHRvZ2dsZURlc2t0b3Bab29tOiBmdW5jdGlvbihjZW50ZXJQb2ludCkge1xuXHRcdFx0Y2VudGVyUG9pbnQgPSBjZW50ZXJQb2ludCB8fCB7eDpfdmlld3BvcnRTaXplLngvMiArIF9vZmZzZXQueCwgeTpfdmlld3BvcnRTaXplLnkvMiArIF9vZmZzZXQueSB9O1xuXG5cdFx0XHR2YXIgZG91YmxlVGFwWm9vbUxldmVsID0gX29wdGlvbnMuZ2V0RG91YmxlVGFwWm9vbSh0cnVlLCBzZWxmLmN1cnJJdGVtKTtcblx0XHRcdHZhciB6b29tT3V0ID0gX2N1cnJab29tTGV2ZWwgPT09IGRvdWJsZVRhcFpvb21MZXZlbDtcblx0XHRcdFxuXHRcdFx0c2VsZi5tb3VzZVpvb21lZEluID0gIXpvb21PdXQ7XG5cblx0XHRcdHNlbGYuem9vbVRvKHpvb21PdXQgPyBzZWxmLmN1cnJJdGVtLmluaXRpYWxab29tTGV2ZWwgOiBkb3VibGVUYXBab29tTGV2ZWwsIGNlbnRlclBvaW50LCAzMzMpO1xuXHRcdFx0ZnJhbWV3b3JrWyAoIXpvb21PdXQgPyAnYWRkJyA6ICdyZW1vdmUnKSArICdDbGFzcyddKHRlbXBsYXRlLCAncHN3cC0tem9vbWVkLWluJyk7XG5cdFx0fVxuXG5cdH1cbn0pO1xuXG5cbi8qPj5kZXNrdG9wLXpvb20qL1xuXG4vKj4+aGlzdG9yeSovXG4vKipcbiAqXG4gKiBoaXN0b3J5LmpzOlxuICpcbiAqIC0gQmFjayBidXR0b24gdG8gY2xvc2UgZ2FsbGVyeS5cbiAqIFxuICogLSBVbmlxdWUgVVJMIGZvciBlYWNoIHNsaWRlOiBleGFtcGxlLmNvbS8mcGlkPTEmZ2lkPTNcbiAqICAgKHdoZXJlIFBJRCBpcyBwaWN0dXJlIGluZGV4LCBhbmQgR0lEIGFuZCBnYWxsZXJ5IGluZGV4KVxuICogICBcbiAqIC0gU3dpdGNoIFVSTCB3aGVuIHNsaWRlcyBjaGFuZ2UuXG4gKiBcbiAqL1xuXG5cbnZhciBfaGlzdG9yeURlZmF1bHRPcHRpb25zID0ge1xuXHRoaXN0b3J5OiB0cnVlLFxuXHRnYWxsZXJ5VUlEOiAxXG59O1xuXG52YXIgX2hpc3RvcnlVcGRhdGVUaW1lb3V0LFxuXHRfaGFzaENoYW5nZVRpbWVvdXQsXG5cdF9oYXNoQW5pbUNoZWNrVGltZW91dCxcblx0X2hhc2hDaGFuZ2VkQnlTY3JpcHQsXG5cdF9oYXNoQ2hhbmdlZEJ5SGlzdG9yeSxcblx0X2hhc2hSZXNldGVkLFxuXHRfaW5pdGlhbEhhc2gsXG5cdF9oaXN0b3J5Q2hhbmdlZCxcblx0X2Nsb3NlZEZyb21VUkwsXG5cdF91cmxDaGFuZ2VkT25jZSxcblx0X3dpbmRvd0xvYyxcblxuXHRfc3VwcG9ydHNQdXNoU3RhdGUsXG5cblx0X2dldEhhc2ggPSBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gX3dpbmRvd0xvYy5oYXNoLnN1YnN0cmluZygxKTtcblx0fSxcblx0X2NsZWFuSGlzdG9yeVRpbWVvdXRzID0gZnVuY3Rpb24oKSB7XG5cblx0XHRpZihfaGlzdG9yeVVwZGF0ZVRpbWVvdXQpIHtcblx0XHRcdGNsZWFyVGltZW91dChfaGlzdG9yeVVwZGF0ZVRpbWVvdXQpO1xuXHRcdH1cblxuXHRcdGlmKF9oYXNoQW5pbUNoZWNrVGltZW91dCkge1xuXHRcdFx0Y2xlYXJUaW1lb3V0KF9oYXNoQW5pbUNoZWNrVGltZW91dCk7XG5cdFx0fVxuXHR9LFxuXG5cdC8vIHBpZCAtIFBpY3R1cmUgaW5kZXhcblx0Ly8gZ2lkIC0gR2FsbGVyeSBpbmRleFxuXHRfcGFyc2VJdGVtSW5kZXhGcm9tVVJMID0gZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGhhc2ggPSBfZ2V0SGFzaCgpLFxuXHRcdFx0cGFyYW1zID0ge307XG5cblx0XHRpZihoYXNoLmxlbmd0aCA8IDUpIHsgLy8gcGlkPTFcblx0XHRcdHJldHVybiBwYXJhbXM7XG5cdFx0fVxuXG5cdFx0dmFyIGksIHZhcnMgPSBoYXNoLnNwbGl0KCcmJyk7XG5cdFx0Zm9yIChpID0gMDsgaSA8IHZhcnMubGVuZ3RoOyBpKyspIHtcblx0XHRcdGlmKCF2YXJzW2ldKSB7XG5cdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0fVxuXHRcdFx0dmFyIHBhaXIgPSB2YXJzW2ldLnNwbGl0KCc9Jyk7XHRcblx0XHRcdGlmKHBhaXIubGVuZ3RoIDwgMikge1xuXHRcdFx0XHRjb250aW51ZTtcblx0XHRcdH1cblx0XHRcdHBhcmFtc1twYWlyWzBdXSA9IHBhaXJbMV07XG5cdFx0fVxuXHRcdGlmKF9vcHRpb25zLmdhbGxlcnlQSURzKSB7XG5cdFx0XHQvLyBkZXRlY3QgY3VzdG9tIHBpZCBpbiBoYXNoIGFuZCBzZWFyY2ggZm9yIGl0IGFtb25nIHRoZSBpdGVtcyBjb2xsZWN0aW9uXG5cdFx0XHR2YXIgc2VhcmNoZm9yID0gcGFyYW1zLnBpZDtcblx0XHRcdHBhcmFtcy5waWQgPSAwOyAvLyBpZiBjdXN0b20gcGlkIGNhbm5vdCBiZSBmb3VuZCwgZmFsbGJhY2sgdG8gdGhlIGZpcnN0IGl0ZW1cblx0XHRcdGZvcihpID0gMDsgaSA8IF9pdGVtcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZihfaXRlbXNbaV0ucGlkID09PSBzZWFyY2hmb3IpIHtcblx0XHRcdFx0XHRwYXJhbXMucGlkID0gaTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHRwYXJhbXMucGlkID0gcGFyc2VJbnQocGFyYW1zLnBpZCwxMCktMTtcblx0XHR9XG5cdFx0aWYoIHBhcmFtcy5waWQgPCAwICkge1xuXHRcdFx0cGFyYW1zLnBpZCA9IDA7XG5cdFx0fVxuXHRcdHJldHVybiBwYXJhbXM7XG5cdH0sXG5cdF91cGRhdGVIYXNoID0gZnVuY3Rpb24oKSB7XG5cblx0XHRpZihfaGFzaEFuaW1DaGVja1RpbWVvdXQpIHtcblx0XHRcdGNsZWFyVGltZW91dChfaGFzaEFuaW1DaGVja1RpbWVvdXQpO1xuXHRcdH1cblxuXG5cdFx0aWYoX251bUFuaW1hdGlvbnMgfHwgX2lzRHJhZ2dpbmcpIHtcblx0XHRcdC8vIGNoYW5naW5nIGJyb3dzZXIgVVJMIGZvcmNlcyBsYXlvdXQvcGFpbnQgaW4gc29tZSBicm93c2Vycywgd2hpY2ggY2F1c2VzIG5vdGljYWJsZSBsYWcgZHVyaW5nIGFuaW1hdGlvblxuXHRcdFx0Ly8gdGhhdCdzIHdoeSB3ZSB1cGRhdGUgaGFzaCBvbmx5IHdoZW4gbm8gYW5pbWF0aW9ucyBydW5uaW5nXG5cdFx0XHRfaGFzaEFuaW1DaGVja1RpbWVvdXQgPSBzZXRUaW1lb3V0KF91cGRhdGVIYXNoLCA1MDApO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0XHRcblx0XHRpZihfaGFzaENoYW5nZWRCeVNjcmlwdCkge1xuXHRcdFx0Y2xlYXJUaW1lb3V0KF9oYXNoQ2hhbmdlVGltZW91dCk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdF9oYXNoQ2hhbmdlZEJ5U2NyaXB0ID0gdHJ1ZTtcblx0XHR9XG5cblxuXHRcdHZhciBwaWQgPSAoX2N1cnJlbnRJdGVtSW5kZXggKyAxKTtcblx0XHR2YXIgaXRlbSA9IF9nZXRJdGVtQXQoIF9jdXJyZW50SXRlbUluZGV4ICk7XG5cdFx0aWYoaXRlbS5oYXNPd25Qcm9wZXJ0eSgncGlkJykpIHtcblx0XHRcdC8vIGNhcnJ5IGZvcndhcmQgYW55IGN1c3RvbSBwaWQgYXNzaWduZWQgdG8gdGhlIGl0ZW1cblx0XHRcdHBpZCA9IGl0ZW0ucGlkO1xuXHRcdH1cblx0XHR2YXIgbmV3SGFzaCA9IF9pbml0aWFsSGFzaCArICcmJyAgKyAgJ2dpZD0nICsgX29wdGlvbnMuZ2FsbGVyeVVJRCArICcmJyArICdwaWQ9JyArIHBpZDtcblxuXHRcdGlmKCFfaGlzdG9yeUNoYW5nZWQpIHtcblx0XHRcdGlmKF93aW5kb3dMb2MuaGFzaC5pbmRleE9mKG5ld0hhc2gpID09PSAtMSkge1xuXHRcdFx0XHRfdXJsQ2hhbmdlZE9uY2UgPSB0cnVlO1xuXHRcdFx0fVxuXHRcdFx0Ly8gZmlyc3QgdGltZSAtIGFkZCBuZXcgaGlzb3J5IHJlY29yZCwgdGhlbiBqdXN0IHJlcGxhY2Vcblx0XHR9XG5cblx0XHR2YXIgbmV3VVJMID0gX3dpbmRvd0xvYy5ocmVmLnNwbGl0KCcjJylbMF0gKyAnIycgKyAgbmV3SGFzaDtcblxuXHRcdGlmKCBfc3VwcG9ydHNQdXNoU3RhdGUgKSB7XG5cblx0XHRcdGlmKCcjJyArIG5ld0hhc2ggIT09IHdpbmRvdy5sb2NhdGlvbi5oYXNoKSB7XG5cdFx0XHRcdGhpc3RvcnlbX2hpc3RvcnlDaGFuZ2VkID8gJ3JlcGxhY2VTdGF0ZScgOiAncHVzaFN0YXRlJ10oJycsIGRvY3VtZW50LnRpdGxlLCBuZXdVUkwpO1xuXHRcdFx0fVxuXG5cdFx0fSBlbHNlIHtcblx0XHRcdGlmKF9oaXN0b3J5Q2hhbmdlZCkge1xuXHRcdFx0XHRfd2luZG93TG9jLnJlcGxhY2UoIG5ld1VSTCApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0X3dpbmRvd0xvYy5oYXNoID0gbmV3SGFzaDtcblx0XHRcdH1cblx0XHR9XG5cdFx0XG5cdFx0XG5cblx0XHRfaGlzdG9yeUNoYW5nZWQgPSB0cnVlO1xuXHRcdF9oYXNoQ2hhbmdlVGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG5cdFx0XHRfaGFzaENoYW5nZWRCeVNjcmlwdCA9IGZhbHNlO1xuXHRcdH0sIDYwKTtcblx0fTtcblxuXG5cblx0XG5cbl9yZWdpc3Rlck1vZHVsZSgnSGlzdG9yeScsIHtcblxuXHRcblxuXHRwdWJsaWNNZXRob2RzOiB7XG5cdFx0aW5pdEhpc3Rvcnk6IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRmcmFtZXdvcmsuZXh0ZW5kKF9vcHRpb25zLCBfaGlzdG9yeURlZmF1bHRPcHRpb25zLCB0cnVlKTtcblxuXHRcdFx0aWYoICFfb3B0aW9ucy5oaXN0b3J5ICkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblxuXHRcdFx0X3dpbmRvd0xvYyA9IHdpbmRvdy5sb2NhdGlvbjtcblx0XHRcdF91cmxDaGFuZ2VkT25jZSA9IGZhbHNlO1xuXHRcdFx0X2Nsb3NlZEZyb21VUkwgPSBmYWxzZTtcblx0XHRcdF9oaXN0b3J5Q2hhbmdlZCA9IGZhbHNlO1xuXHRcdFx0X2luaXRpYWxIYXNoID0gX2dldEhhc2goKTtcblx0XHRcdF9zdXBwb3J0c1B1c2hTdGF0ZSA9ICgncHVzaFN0YXRlJyBpbiBoaXN0b3J5KTtcblxuXG5cdFx0XHRpZihfaW5pdGlhbEhhc2guaW5kZXhPZignZ2lkPScpID4gLTEpIHtcblx0XHRcdFx0X2luaXRpYWxIYXNoID0gX2luaXRpYWxIYXNoLnNwbGl0KCcmZ2lkPScpWzBdO1xuXHRcdFx0XHRfaW5pdGlhbEhhc2ggPSBfaW5pdGlhbEhhc2guc3BsaXQoJz9naWQ9JylbMF07XG5cdFx0XHR9XG5cdFx0XHRcblxuXHRcdFx0X2xpc3RlbignYWZ0ZXJDaGFuZ2UnLCBzZWxmLnVwZGF0ZVVSTCk7XG5cdFx0XHRfbGlzdGVuKCd1bmJpbmRFdmVudHMnLCBmdW5jdGlvbigpIHtcblx0XHRcdFx0ZnJhbWV3b3JrLnVuYmluZCh3aW5kb3csICdoYXNoY2hhbmdlJywgc2VsZi5vbkhhc2hDaGFuZ2UpO1xuXHRcdFx0fSk7XG5cblxuXHRcdFx0dmFyIHJldHVyblRvT3JpZ2luYWwgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0X2hhc2hSZXNldGVkID0gdHJ1ZTtcblx0XHRcdFx0aWYoIV9jbG9zZWRGcm9tVVJMKSB7XG5cblx0XHRcdFx0XHRpZihfdXJsQ2hhbmdlZE9uY2UpIHtcblx0XHRcdFx0XHRcdGhpc3RvcnkuYmFjaygpO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0XHRcdGlmKF9pbml0aWFsSGFzaCkge1xuXHRcdFx0XHRcdFx0XHRfd2luZG93TG9jLmhhc2ggPSBfaW5pdGlhbEhhc2g7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRpZiAoX3N1cHBvcnRzUHVzaFN0YXRlKSB7XG5cblx0XHRcdFx0XHRcdFx0XHQvLyByZW1vdmUgaGFzaCBmcm9tIHVybCB3aXRob3V0IHJlZnJlc2hpbmcgaXQgb3Igc2Nyb2xsaW5nIHRvIHRvcFxuXHRcdFx0XHRcdFx0XHRcdGhpc3RvcnkucHVzaFN0YXRlKCcnLCBkb2N1bWVudC50aXRsZSwgIF93aW5kb3dMb2MucGF0aG5hbWUgKyBfd2luZG93TG9jLnNlYXJjaCApO1xuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdF93aW5kb3dMb2MuaGFzaCA9ICcnO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFxuXHRcdFx0XHR9XG5cblx0XHRcdFx0X2NsZWFuSGlzdG9yeVRpbWVvdXRzKCk7XG5cdFx0XHR9O1xuXG5cblx0XHRcdF9saXN0ZW4oJ3VuYmluZEV2ZW50cycsIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZihfY2xvc2VkQnlTY3JvbGwpIHtcblx0XHRcdFx0XHQvLyBpZiBQaG90b1N3aXBlIGlzIGNsb3NlZCBieSBzY3JvbGwsIHdlIGdvIFwiYmFja1wiIGJlZm9yZSB0aGUgY2xvc2luZyBhbmltYXRpb24gc3RhcnRzXG5cdFx0XHRcdFx0Ly8gdGhpcyBpcyBkb25lIHRvIGtlZXAgdGhlIHNjcm9sbCBwb3NpdGlvblxuXHRcdFx0XHRcdHJldHVyblRvT3JpZ2luYWwoKTtcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cdFx0XHRfbGlzdGVuKCdkZXN0cm95JywgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmKCFfaGFzaFJlc2V0ZWQpIHtcblx0XHRcdFx0XHRyZXR1cm5Ub09yaWdpbmFsKCk7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdFx0X2xpc3RlbignZmlyc3RVcGRhdGUnLCBmdW5jdGlvbigpIHtcblx0XHRcdFx0X2N1cnJlbnRJdGVtSW5kZXggPSBfcGFyc2VJdGVtSW5kZXhGcm9tVVJMKCkucGlkO1xuXHRcdFx0fSk7XG5cblx0XHRcdFxuXG5cdFx0XHRcblx0XHRcdHZhciBpbmRleCA9IF9pbml0aWFsSGFzaC5pbmRleE9mKCdwaWQ9Jyk7XG5cdFx0XHRpZihpbmRleCA+IC0xKSB7XG5cdFx0XHRcdF9pbml0aWFsSGFzaCA9IF9pbml0aWFsSGFzaC5zdWJzdHJpbmcoMCwgaW5kZXgpO1xuXHRcdFx0XHRpZihfaW5pdGlhbEhhc2guc2xpY2UoLTEpID09PSAnJicpIHtcblx0XHRcdFx0XHRfaW5pdGlhbEhhc2ggPSBfaW5pdGlhbEhhc2guc2xpY2UoMCwgLTEpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRcblxuXHRcdFx0c2V0VGltZW91dChmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYoX2lzT3BlbikgeyAvLyBoYXNuJ3QgZGVzdHJveWVkIHlldFxuXHRcdFx0XHRcdGZyYW1ld29yay5iaW5kKHdpbmRvdywgJ2hhc2hjaGFuZ2UnLCBzZWxmLm9uSGFzaENoYW5nZSk7XG5cdFx0XHRcdH1cblx0XHRcdH0sIDQwKTtcblx0XHRcdFxuXHRcdH0sXG5cdFx0b25IYXNoQ2hhbmdlOiBmdW5jdGlvbigpIHtcblxuXHRcdFx0aWYoX2dldEhhc2goKSA9PT0gX2luaXRpYWxIYXNoKSB7XG5cblx0XHRcdFx0X2Nsb3NlZEZyb21VUkwgPSB0cnVlO1xuXHRcdFx0XHRzZWxmLmNsb3NlKCk7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblx0XHRcdGlmKCFfaGFzaENoYW5nZWRCeVNjcmlwdCkge1xuXG5cdFx0XHRcdF9oYXNoQ2hhbmdlZEJ5SGlzdG9yeSA9IHRydWU7XG5cdFx0XHRcdHNlbGYuZ29UbyggX3BhcnNlSXRlbUluZGV4RnJvbVVSTCgpLnBpZCApO1xuXHRcdFx0XHRfaGFzaENoYW5nZWRCeUhpc3RvcnkgPSBmYWxzZTtcblx0XHRcdH1cblx0XHRcdFxuXHRcdH0sXG5cdFx0dXBkYXRlVVJMOiBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gRGVsYXkgdGhlIHVwZGF0ZSBvZiBVUkwsIHRvIGF2b2lkIGxhZyBkdXJpbmcgdHJhbnNpdGlvbiwgXG5cdFx0XHQvLyBhbmQgdG8gbm90IHRvIHRyaWdnZXIgYWN0aW9ucyBsaWtlIFwicmVmcmVzaCBwYWdlIHNvdW5kXCIgb3IgXCJibGlua2luZyBmYXZpY29uXCIgdG8gb2Z0ZW5cblx0XHRcdFxuXHRcdFx0X2NsZWFuSGlzdG9yeVRpbWVvdXRzKCk7XG5cdFx0XHRcblxuXHRcdFx0aWYoX2hhc2hDaGFuZ2VkQnlIaXN0b3J5KSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0aWYoIV9oaXN0b3J5Q2hhbmdlZCkge1xuXHRcdFx0XHRfdXBkYXRlSGFzaCgpOyAvLyBmaXJzdCB0aW1lXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRfaGlzdG9yeVVwZGF0ZVRpbWVvdXQgPSBzZXRUaW1lb3V0KF91cGRhdGVIYXNoLCA4MDApO1xuXHRcdFx0fVxuXHRcdH1cblx0XG5cdH1cbn0pO1xuXG5cbi8qPj5oaXN0b3J5Ki9cblx0ZnJhbWV3b3JrLmV4dGVuZChzZWxmLCBwdWJsaWNNZXRob2RzKTsgfTtcblx0cmV0dXJuIFBob3RvU3dpcGU7XG59KTsiLCIvKiFcbldheXBvaW50cyAtIDQuMC4wXG5Db3B5cmlnaHQgwqkgMjAxMS0yMDE1IENhbGViIFRyb3VnaHRvblxuTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuaHR0cHM6Ly9naXRodWIuY29tL2ltYWtld2VidGhpbmdzL3dheXBvaW50cy9ibG9nL21hc3Rlci9saWNlbnNlcy50eHRcbiovXG4oZnVuY3Rpb24oKSB7XG4gICd1c2Ugc3RyaWN0J1xuXG4gIHZhciBrZXlDb3VudGVyID0gMFxuICB2YXIgYWxsV2F5cG9pbnRzID0ge31cblxuICAvKiBodHRwOi8vaW1ha2V3ZWJ0aGluZ3MuY29tL3dheXBvaW50cy9hcGkvd2F5cG9pbnQgKi9cbiAgZnVuY3Rpb24gV2F5cG9pbnQob3B0aW9ucykge1xuICAgIGlmICghb3B0aW9ucykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyBvcHRpb25zIHBhc3NlZCB0byBXYXlwb2ludCBjb25zdHJ1Y3RvcicpXG4gICAgfVxuICAgIGlmICghb3B0aW9ucy5lbGVtZW50KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIGVsZW1lbnQgb3B0aW9uIHBhc3NlZCB0byBXYXlwb2ludCBjb25zdHJ1Y3RvcicpXG4gICAgfVxuICAgIGlmICghb3B0aW9ucy5oYW5kbGVyKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIGhhbmRsZXIgb3B0aW9uIHBhc3NlZCB0byBXYXlwb2ludCBjb25zdHJ1Y3RvcicpXG4gICAgfVxuXG4gICAgdGhpcy5rZXkgPSAnd2F5cG9pbnQtJyArIGtleUNvdW50ZXJcbiAgICB0aGlzLm9wdGlvbnMgPSBXYXlwb2ludC5BZGFwdGVyLmV4dGVuZCh7fSwgV2F5cG9pbnQuZGVmYXVsdHMsIG9wdGlvbnMpXG4gICAgdGhpcy5lbGVtZW50ID0gdGhpcy5vcHRpb25zLmVsZW1lbnRcbiAgICB0aGlzLmFkYXB0ZXIgPSBuZXcgV2F5cG9pbnQuQWRhcHRlcih0aGlzLmVsZW1lbnQpXG4gICAgdGhpcy5jYWxsYmFjayA9IG9wdGlvbnMuaGFuZGxlclxuICAgIHRoaXMuYXhpcyA9IHRoaXMub3B0aW9ucy5ob3Jpem9udGFsID8gJ2hvcml6b250YWwnIDogJ3ZlcnRpY2FsJ1xuICAgIHRoaXMuZW5hYmxlZCA9IHRoaXMub3B0aW9ucy5lbmFibGVkXG4gICAgdGhpcy50cmlnZ2VyUG9pbnQgPSBudWxsXG4gICAgdGhpcy5ncm91cCA9IFdheXBvaW50Lkdyb3VwLmZpbmRPckNyZWF0ZSh7XG4gICAgICBuYW1lOiB0aGlzLm9wdGlvbnMuZ3JvdXAsXG4gICAgICBheGlzOiB0aGlzLmF4aXNcbiAgICB9KVxuICAgIHRoaXMuY29udGV4dCA9IFdheXBvaW50LkNvbnRleHQuZmluZE9yQ3JlYXRlQnlFbGVtZW50KHRoaXMub3B0aW9ucy5jb250ZXh0KVxuXG4gICAgaWYgKFdheXBvaW50Lm9mZnNldEFsaWFzZXNbdGhpcy5vcHRpb25zLm9mZnNldF0pIHtcbiAgICAgIHRoaXMub3B0aW9ucy5vZmZzZXQgPSBXYXlwb2ludC5vZmZzZXRBbGlhc2VzW3RoaXMub3B0aW9ucy5vZmZzZXRdXG4gICAgfVxuICAgIHRoaXMuZ3JvdXAuYWRkKHRoaXMpXG4gICAgdGhpcy5jb250ZXh0LmFkZCh0aGlzKVxuICAgIGFsbFdheXBvaW50c1t0aGlzLmtleV0gPSB0aGlzXG4gICAga2V5Q291bnRlciArPSAxXG4gIH1cblxuICAvKiBQcml2YXRlICovXG4gIFdheXBvaW50LnByb3RvdHlwZS5xdWV1ZVRyaWdnZXIgPSBmdW5jdGlvbihkaXJlY3Rpb24pIHtcbiAgICB0aGlzLmdyb3VwLnF1ZXVlVHJpZ2dlcih0aGlzLCBkaXJlY3Rpb24pXG4gIH1cblxuICAvKiBQcml2YXRlICovXG4gIFdheXBvaW50LnByb3RvdHlwZS50cmlnZ2VyID0gZnVuY3Rpb24oYXJncykge1xuICAgIGlmICghdGhpcy5lbmFibGVkKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgaWYgKHRoaXMuY2FsbGJhY2spIHtcbiAgICAgIHRoaXMuY2FsbGJhY2suYXBwbHkodGhpcywgYXJncylcbiAgICB9XG4gIH1cblxuICAvKiBQdWJsaWMgKi9cbiAgLyogaHR0cDovL2ltYWtld2VidGhpbmdzLmNvbS93YXlwb2ludHMvYXBpL2Rlc3Ryb3kgKi9cbiAgV2F5cG9pbnQucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbigpIHtcbiAgICB0aGlzLmNvbnRleHQucmVtb3ZlKHRoaXMpXG4gICAgdGhpcy5ncm91cC5yZW1vdmUodGhpcylcbiAgICBkZWxldGUgYWxsV2F5cG9pbnRzW3RoaXMua2V5XVxuICB9XG5cbiAgLyogUHVibGljICovXG4gIC8qIGh0dHA6Ly9pbWFrZXdlYnRoaW5ncy5jb20vd2F5cG9pbnRzL2FwaS9kaXNhYmxlICovXG4gIFdheXBvaW50LnByb3RvdHlwZS5kaXNhYmxlID0gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5lbmFibGVkID0gZmFsc2VcbiAgICByZXR1cm4gdGhpc1xuICB9XG5cbiAgLyogUHVibGljICovXG4gIC8qIGh0dHA6Ly9pbWFrZXdlYnRoaW5ncy5jb20vd2F5cG9pbnRzL2FwaS9lbmFibGUgKi9cbiAgV2F5cG9pbnQucHJvdG90eXBlLmVuYWJsZSA9IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuY29udGV4dC5yZWZyZXNoKClcbiAgICB0aGlzLmVuYWJsZWQgPSB0cnVlXG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG4gIC8qIFB1YmxpYyAqL1xuICAvKiBodHRwOi8vaW1ha2V3ZWJ0aGluZ3MuY29tL3dheXBvaW50cy9hcGkvbmV4dCAqL1xuICBXYXlwb2ludC5wcm90b3R5cGUubmV4dCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLmdyb3VwLm5leHQodGhpcylcbiAgfVxuXG4gIC8qIFB1YmxpYyAqL1xuICAvKiBodHRwOi8vaW1ha2V3ZWJ0aGluZ3MuY29tL3dheXBvaW50cy9hcGkvcHJldmlvdXMgKi9cbiAgV2F5cG9pbnQucHJvdG90eXBlLnByZXZpb3VzID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuZ3JvdXAucHJldmlvdXModGhpcylcbiAgfVxuXG4gIC8qIFByaXZhdGUgKi9cbiAgV2F5cG9pbnQuaW52b2tlQWxsID0gZnVuY3Rpb24obWV0aG9kKSB7XG4gICAgdmFyIGFsbFdheXBvaW50c0FycmF5ID0gW11cbiAgICBmb3IgKHZhciB3YXlwb2ludEtleSBpbiBhbGxXYXlwb2ludHMpIHtcbiAgICAgIGFsbFdheXBvaW50c0FycmF5LnB1c2goYWxsV2F5cG9pbnRzW3dheXBvaW50S2V5XSlcbiAgICB9XG4gICAgZm9yICh2YXIgaSA9IDAsIGVuZCA9IGFsbFdheXBvaW50c0FycmF5Lmxlbmd0aDsgaSA8IGVuZDsgaSsrKSB7XG4gICAgICBhbGxXYXlwb2ludHNBcnJheVtpXVttZXRob2RdKClcbiAgICB9XG4gIH1cblxuICAvKiBQdWJsaWMgKi9cbiAgLyogaHR0cDovL2ltYWtld2VidGhpbmdzLmNvbS93YXlwb2ludHMvYXBpL2Rlc3Ryb3ktYWxsICovXG4gIFdheXBvaW50LmRlc3Ryb3lBbGwgPSBmdW5jdGlvbigpIHtcbiAgICBXYXlwb2ludC5pbnZva2VBbGwoJ2Rlc3Ryb3knKVxuICB9XG5cbiAgLyogUHVibGljICovXG4gIC8qIGh0dHA6Ly9pbWFrZXdlYnRoaW5ncy5jb20vd2F5cG9pbnRzL2FwaS9kaXNhYmxlLWFsbCAqL1xuICBXYXlwb2ludC5kaXNhYmxlQWxsID0gZnVuY3Rpb24oKSB7XG4gICAgV2F5cG9pbnQuaW52b2tlQWxsKCdkaXNhYmxlJylcbiAgfVxuXG4gIC8qIFB1YmxpYyAqL1xuICAvKiBodHRwOi8vaW1ha2V3ZWJ0aGluZ3MuY29tL3dheXBvaW50cy9hcGkvZW5hYmxlLWFsbCAqL1xuICBXYXlwb2ludC5lbmFibGVBbGwgPSBmdW5jdGlvbigpIHtcbiAgICBXYXlwb2ludC5pbnZva2VBbGwoJ2VuYWJsZScpXG4gIH1cblxuICAvKiBQdWJsaWMgKi9cbiAgLyogaHR0cDovL2ltYWtld2VidGhpbmdzLmNvbS93YXlwb2ludHMvYXBpL3JlZnJlc2gtYWxsICovXG4gIFdheXBvaW50LnJlZnJlc2hBbGwgPSBmdW5jdGlvbigpIHtcbiAgICBXYXlwb2ludC5Db250ZXh0LnJlZnJlc2hBbGwoKVxuICB9XG5cbiAgLyogUHVibGljICovXG4gIC8qIGh0dHA6Ly9pbWFrZXdlYnRoaW5ncy5jb20vd2F5cG9pbnRzL2FwaS92aWV3cG9ydC1oZWlnaHQgKi9cbiAgV2F5cG9pbnQudmlld3BvcnRIZWlnaHQgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gd2luZG93LmlubmVySGVpZ2h0IHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHRcbiAgfVxuXG4gIC8qIFB1YmxpYyAqL1xuICAvKiBodHRwOi8vaW1ha2V3ZWJ0aGluZ3MuY29tL3dheXBvaW50cy9hcGkvdmlld3BvcnQtd2lkdGggKi9cbiAgV2F5cG9pbnQudmlld3BvcnRXaWR0aCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGhcbiAgfVxuXG4gIFdheXBvaW50LmFkYXB0ZXJzID0gW11cblxuICBXYXlwb2ludC5kZWZhdWx0cyA9IHtcbiAgICBjb250ZXh0OiB3aW5kb3csXG4gICAgY29udGludW91czogdHJ1ZSxcbiAgICBlbmFibGVkOiB0cnVlLFxuICAgIGdyb3VwOiAnZGVmYXVsdCcsXG4gICAgaG9yaXpvbnRhbDogZmFsc2UsXG4gICAgb2Zmc2V0OiAwXG4gIH1cblxuICBXYXlwb2ludC5vZmZzZXRBbGlhc2VzID0ge1xuICAgICdib3R0b20taW4tdmlldyc6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuY29udGV4dC5pbm5lckhlaWdodCgpIC0gdGhpcy5hZGFwdGVyLm91dGVySGVpZ2h0KClcbiAgICB9LFxuICAgICdyaWdodC1pbi12aWV3JzogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5jb250ZXh0LmlubmVyV2lkdGgoKSAtIHRoaXMuYWRhcHRlci5vdXRlcldpZHRoKClcbiAgICB9XG4gIH1cblxuICB3aW5kb3cuV2F5cG9pbnQgPSBXYXlwb2ludFxufSgpKVxuOyhmdW5jdGlvbigpIHtcbiAgJ3VzZSBzdHJpY3QnXG5cbiAgZnVuY3Rpb24gcmVxdWVzdEFuaW1hdGlvbkZyYW1lU2hpbShjYWxsYmFjaykge1xuICAgIHdpbmRvdy5zZXRUaW1lb3V0KGNhbGxiYWNrLCAxMDAwIC8gNjApXG4gIH1cblxuICB2YXIga2V5Q291bnRlciA9IDBcbiAgdmFyIGNvbnRleHRzID0ge31cbiAgdmFyIFdheXBvaW50ID0gd2luZG93LldheXBvaW50XG4gIHZhciBvbGRXaW5kb3dMb2FkID0gd2luZG93Lm9ubG9hZFxuXG4gIC8qIGh0dHA6Ly9pbWFrZXdlYnRoaW5ncy5jb20vd2F5cG9pbnRzL2FwaS9jb250ZXh0ICovXG4gIGZ1bmN0aW9uIENvbnRleHQoZWxlbWVudCkge1xuICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnRcbiAgICB0aGlzLkFkYXB0ZXIgPSBXYXlwb2ludC5BZGFwdGVyXG4gICAgdGhpcy5hZGFwdGVyID0gbmV3IHRoaXMuQWRhcHRlcihlbGVtZW50KVxuICAgIHRoaXMua2V5ID0gJ3dheXBvaW50LWNvbnRleHQtJyArIGtleUNvdW50ZXJcbiAgICB0aGlzLmRpZFNjcm9sbCA9IGZhbHNlXG4gICAgdGhpcy5kaWRSZXNpemUgPSBmYWxzZVxuICAgIHRoaXMub2xkU2Nyb2xsID0ge1xuICAgICAgeDogdGhpcy5hZGFwdGVyLnNjcm9sbExlZnQoKSxcbiAgICAgIHk6IHRoaXMuYWRhcHRlci5zY3JvbGxUb3AoKVxuICAgIH1cbiAgICB0aGlzLndheXBvaW50cyA9IHtcbiAgICAgIHZlcnRpY2FsOiB7fSxcbiAgICAgIGhvcml6b250YWw6IHt9XG4gICAgfVxuXG4gICAgZWxlbWVudC53YXlwb2ludENvbnRleHRLZXkgPSB0aGlzLmtleVxuICAgIGNvbnRleHRzW2VsZW1lbnQud2F5cG9pbnRDb250ZXh0S2V5XSA9IHRoaXNcbiAgICBrZXlDb3VudGVyICs9IDFcblxuICAgIHRoaXMuY3JlYXRlVGhyb3R0bGVkU2Nyb2xsSGFuZGxlcigpXG4gICAgdGhpcy5jcmVhdGVUaHJvdHRsZWRSZXNpemVIYW5kbGVyKClcbiAgfVxuXG4gIC8qIFByaXZhdGUgKi9cbiAgQ29udGV4dC5wcm90b3R5cGUuYWRkID0gZnVuY3Rpb24od2F5cG9pbnQpIHtcbiAgICB2YXIgYXhpcyA9IHdheXBvaW50Lm9wdGlvbnMuaG9yaXpvbnRhbCA/ICdob3Jpem9udGFsJyA6ICd2ZXJ0aWNhbCdcbiAgICB0aGlzLndheXBvaW50c1theGlzXVt3YXlwb2ludC5rZXldID0gd2F5cG9pbnRcbiAgICB0aGlzLnJlZnJlc2goKVxuICB9XG5cbiAgLyogUHJpdmF0ZSAqL1xuICBDb250ZXh0LnByb3RvdHlwZS5jaGVja0VtcHR5ID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGhvcml6b250YWxFbXB0eSA9IHRoaXMuQWRhcHRlci5pc0VtcHR5T2JqZWN0KHRoaXMud2F5cG9pbnRzLmhvcml6b250YWwpXG4gICAgdmFyIHZlcnRpY2FsRW1wdHkgPSB0aGlzLkFkYXB0ZXIuaXNFbXB0eU9iamVjdCh0aGlzLndheXBvaW50cy52ZXJ0aWNhbClcbiAgICBpZiAoaG9yaXpvbnRhbEVtcHR5ICYmIHZlcnRpY2FsRW1wdHkpIHtcbiAgICAgIHRoaXMuYWRhcHRlci5vZmYoJy53YXlwb2ludHMnKVxuICAgICAgZGVsZXRlIGNvbnRleHRzW3RoaXMua2V5XVxuICAgIH1cbiAgfVxuXG4gIC8qIFByaXZhdGUgKi9cbiAgQ29udGV4dC5wcm90b3R5cGUuY3JlYXRlVGhyb3R0bGVkUmVzaXplSGFuZGxlciA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBzZWxmID0gdGhpc1xuXG4gICAgZnVuY3Rpb24gcmVzaXplSGFuZGxlcigpIHtcbiAgICAgIHNlbGYuaGFuZGxlUmVzaXplKClcbiAgICAgIHNlbGYuZGlkUmVzaXplID0gZmFsc2VcbiAgICB9XG5cbiAgICB0aGlzLmFkYXB0ZXIub24oJ3Jlc2l6ZS53YXlwb2ludHMnLCBmdW5jdGlvbigpIHtcbiAgICAgIGlmICghc2VsZi5kaWRSZXNpemUpIHtcbiAgICAgICAgc2VsZi5kaWRSZXNpemUgPSB0cnVlXG4gICAgICAgIFdheXBvaW50LnJlcXVlc3RBbmltYXRpb25GcmFtZShyZXNpemVIYW5kbGVyKVxuICAgICAgfVxuICAgIH0pXG4gIH1cblxuICAvKiBQcml2YXRlICovXG4gIENvbnRleHQucHJvdG90eXBlLmNyZWF0ZVRocm90dGxlZFNjcm9sbEhhbmRsZXIgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXNcbiAgICBmdW5jdGlvbiBzY3JvbGxIYW5kbGVyKCkge1xuICAgICAgc2VsZi5oYW5kbGVTY3JvbGwoKVxuICAgICAgc2VsZi5kaWRTY3JvbGwgPSBmYWxzZVxuICAgIH1cblxuICAgIHRoaXMuYWRhcHRlci5vbignc2Nyb2xsLndheXBvaW50cycsIGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKCFzZWxmLmRpZFNjcm9sbCB8fCBXYXlwb2ludC5pc1RvdWNoKSB7XG4gICAgICAgIHNlbGYuZGlkU2Nyb2xsID0gdHJ1ZVxuICAgICAgICBXYXlwb2ludC5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoc2Nyb2xsSGFuZGxlcilcbiAgICAgIH1cbiAgICB9KVxuICB9XG5cbiAgLyogUHJpdmF0ZSAqL1xuICBDb250ZXh0LnByb3RvdHlwZS5oYW5kbGVSZXNpemUgPSBmdW5jdGlvbigpIHtcbiAgICBXYXlwb2ludC5Db250ZXh0LnJlZnJlc2hBbGwoKVxuICB9XG5cbiAgLyogUHJpdmF0ZSAqL1xuICBDb250ZXh0LnByb3RvdHlwZS5oYW5kbGVTY3JvbGwgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgdHJpZ2dlcmVkR3JvdXBzID0ge31cbiAgICB2YXIgYXhlcyA9IHtcbiAgICAgIGhvcml6b250YWw6IHtcbiAgICAgICAgbmV3U2Nyb2xsOiB0aGlzLmFkYXB0ZXIuc2Nyb2xsTGVmdCgpLFxuICAgICAgICBvbGRTY3JvbGw6IHRoaXMub2xkU2Nyb2xsLngsXG4gICAgICAgIGZvcndhcmQ6ICdyaWdodCcsXG4gICAgICAgIGJhY2t3YXJkOiAnbGVmdCdcbiAgICAgIH0sXG4gICAgICB2ZXJ0aWNhbDoge1xuICAgICAgICBuZXdTY3JvbGw6IHRoaXMuYWRhcHRlci5zY3JvbGxUb3AoKSxcbiAgICAgICAgb2xkU2Nyb2xsOiB0aGlzLm9sZFNjcm9sbC55LFxuICAgICAgICBmb3J3YXJkOiAnZG93bicsXG4gICAgICAgIGJhY2t3YXJkOiAndXAnXG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgYXhpc0tleSBpbiBheGVzKSB7XG4gICAgICB2YXIgYXhpcyA9IGF4ZXNbYXhpc0tleV1cbiAgICAgIHZhciBpc0ZvcndhcmQgPSBheGlzLm5ld1Njcm9sbCA+IGF4aXMub2xkU2Nyb2xsXG4gICAgICB2YXIgZGlyZWN0aW9uID0gaXNGb3J3YXJkID8gYXhpcy5mb3J3YXJkIDogYXhpcy5iYWNrd2FyZFxuXG4gICAgICBmb3IgKHZhciB3YXlwb2ludEtleSBpbiB0aGlzLndheXBvaW50c1theGlzS2V5XSkge1xuICAgICAgICB2YXIgd2F5cG9pbnQgPSB0aGlzLndheXBvaW50c1theGlzS2V5XVt3YXlwb2ludEtleV1cbiAgICAgICAgdmFyIHdhc0JlZm9yZVRyaWdnZXJQb2ludCA9IGF4aXMub2xkU2Nyb2xsIDwgd2F5cG9pbnQudHJpZ2dlclBvaW50XG4gICAgICAgIHZhciBub3dBZnRlclRyaWdnZXJQb2ludCA9IGF4aXMubmV3U2Nyb2xsID49IHdheXBvaW50LnRyaWdnZXJQb2ludFxuICAgICAgICB2YXIgY3Jvc3NlZEZvcndhcmQgPSB3YXNCZWZvcmVUcmlnZ2VyUG9pbnQgJiYgbm93QWZ0ZXJUcmlnZ2VyUG9pbnRcbiAgICAgICAgdmFyIGNyb3NzZWRCYWNrd2FyZCA9ICF3YXNCZWZvcmVUcmlnZ2VyUG9pbnQgJiYgIW5vd0FmdGVyVHJpZ2dlclBvaW50XG4gICAgICAgIGlmIChjcm9zc2VkRm9yd2FyZCB8fCBjcm9zc2VkQmFja3dhcmQpIHtcbiAgICAgICAgICB3YXlwb2ludC5xdWV1ZVRyaWdnZXIoZGlyZWN0aW9uKVxuICAgICAgICAgIHRyaWdnZXJlZEdyb3Vwc1t3YXlwb2ludC5ncm91cC5pZF0gPSB3YXlwb2ludC5ncm91cFxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgZ3JvdXBLZXkgaW4gdHJpZ2dlcmVkR3JvdXBzKSB7XG4gICAgICB0cmlnZ2VyZWRHcm91cHNbZ3JvdXBLZXldLmZsdXNoVHJpZ2dlcnMoKVxuICAgIH1cblxuICAgIHRoaXMub2xkU2Nyb2xsID0ge1xuICAgICAgeDogYXhlcy5ob3Jpem9udGFsLm5ld1Njcm9sbCxcbiAgICAgIHk6IGF4ZXMudmVydGljYWwubmV3U2Nyb2xsXG4gICAgfVxuICB9XG5cbiAgLyogUHJpdmF0ZSAqL1xuICBDb250ZXh0LnByb3RvdHlwZS5pbm5lckhlaWdodCA9IGZ1bmN0aW9uKCkge1xuICAgIC8qZXNsaW50LWRpc2FibGUgZXFlcWVxICovXG4gICAgaWYgKHRoaXMuZWxlbWVudCA9PSB0aGlzLmVsZW1lbnQud2luZG93KSB7XG4gICAgICByZXR1cm4gV2F5cG9pbnQudmlld3BvcnRIZWlnaHQoKVxuICAgIH1cbiAgICAvKmVzbGludC1lbmFibGUgZXFlcWVxICovXG4gICAgcmV0dXJuIHRoaXMuYWRhcHRlci5pbm5lckhlaWdodCgpXG4gIH1cblxuICAvKiBQcml2YXRlICovXG4gIENvbnRleHQucHJvdG90eXBlLnJlbW92ZSA9IGZ1bmN0aW9uKHdheXBvaW50KSB7XG4gICAgZGVsZXRlIHRoaXMud2F5cG9pbnRzW3dheXBvaW50LmF4aXNdW3dheXBvaW50LmtleV1cbiAgICB0aGlzLmNoZWNrRW1wdHkoKVxuICB9XG5cbiAgLyogUHJpdmF0ZSAqL1xuICBDb250ZXh0LnByb3RvdHlwZS5pbm5lcldpZHRoID0gZnVuY3Rpb24oKSB7XG4gICAgLyplc2xpbnQtZGlzYWJsZSBlcWVxZXEgKi9cbiAgICBpZiAodGhpcy5lbGVtZW50ID09IHRoaXMuZWxlbWVudC53aW5kb3cpIHtcbiAgICAgIHJldHVybiBXYXlwb2ludC52aWV3cG9ydFdpZHRoKClcbiAgICB9XG4gICAgLyplc2xpbnQtZW5hYmxlIGVxZXFlcSAqL1xuICAgIHJldHVybiB0aGlzLmFkYXB0ZXIuaW5uZXJXaWR0aCgpXG4gIH1cblxuICAvKiBQdWJsaWMgKi9cbiAgLyogaHR0cDovL2ltYWtld2VidGhpbmdzLmNvbS93YXlwb2ludHMvYXBpL2NvbnRleHQtZGVzdHJveSAqL1xuICBDb250ZXh0LnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGFsbFdheXBvaW50cyA9IFtdXG4gICAgZm9yICh2YXIgYXhpcyBpbiB0aGlzLndheXBvaW50cykge1xuICAgICAgZm9yICh2YXIgd2F5cG9pbnRLZXkgaW4gdGhpcy53YXlwb2ludHNbYXhpc10pIHtcbiAgICAgICAgYWxsV2F5cG9pbnRzLnB1c2godGhpcy53YXlwb2ludHNbYXhpc11bd2F5cG9pbnRLZXldKVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBpID0gMCwgZW5kID0gYWxsV2F5cG9pbnRzLmxlbmd0aDsgaSA8IGVuZDsgaSsrKSB7XG4gICAgICBhbGxXYXlwb2ludHNbaV0uZGVzdHJveSgpXG4gICAgfVxuICB9XG5cbiAgLyogUHVibGljICovXG4gIC8qIGh0dHA6Ly9pbWFrZXdlYnRoaW5ncy5jb20vd2F5cG9pbnRzL2FwaS9jb250ZXh0LXJlZnJlc2ggKi9cbiAgQ29udGV4dC5wcm90b3R5cGUucmVmcmVzaCA9IGZ1bmN0aW9uKCkge1xuICAgIC8qZXNsaW50LWRpc2FibGUgZXFlcWVxICovXG4gICAgdmFyIGlzV2luZG93ID0gdGhpcy5lbGVtZW50ID09IHRoaXMuZWxlbWVudC53aW5kb3dcbiAgICAvKmVzbGludC1lbmFibGUgZXFlcWVxICovXG4gICAgdmFyIGNvbnRleHRPZmZzZXQgPSBpc1dpbmRvdyA/IHVuZGVmaW5lZCA6IHRoaXMuYWRhcHRlci5vZmZzZXQoKVxuICAgIHZhciB0cmlnZ2VyZWRHcm91cHMgPSB7fVxuICAgIHZhciBheGVzXG5cbiAgICB0aGlzLmhhbmRsZVNjcm9sbCgpXG4gICAgYXhlcyA9IHtcbiAgICAgIGhvcml6b250YWw6IHtcbiAgICAgICAgY29udGV4dE9mZnNldDogaXNXaW5kb3cgPyAwIDogY29udGV4dE9mZnNldC5sZWZ0LFxuICAgICAgICBjb250ZXh0U2Nyb2xsOiBpc1dpbmRvdyA/IDAgOiB0aGlzLm9sZFNjcm9sbC54LFxuICAgICAgICBjb250ZXh0RGltZW5zaW9uOiB0aGlzLmlubmVyV2lkdGgoKSxcbiAgICAgICAgb2xkU2Nyb2xsOiB0aGlzLm9sZFNjcm9sbC54LFxuICAgICAgICBmb3J3YXJkOiAncmlnaHQnLFxuICAgICAgICBiYWNrd2FyZDogJ2xlZnQnLFxuICAgICAgICBvZmZzZXRQcm9wOiAnbGVmdCdcbiAgICAgIH0sXG4gICAgICB2ZXJ0aWNhbDoge1xuICAgICAgICBjb250ZXh0T2Zmc2V0OiBpc1dpbmRvdyA/IDAgOiBjb250ZXh0T2Zmc2V0LnRvcCxcbiAgICAgICAgY29udGV4dFNjcm9sbDogaXNXaW5kb3cgPyAwIDogdGhpcy5vbGRTY3JvbGwueSxcbiAgICAgICAgY29udGV4dERpbWVuc2lvbjogdGhpcy5pbm5lckhlaWdodCgpLFxuICAgICAgICBvbGRTY3JvbGw6IHRoaXMub2xkU2Nyb2xsLnksXG4gICAgICAgIGZvcndhcmQ6ICdkb3duJyxcbiAgICAgICAgYmFja3dhcmQ6ICd1cCcsXG4gICAgICAgIG9mZnNldFByb3A6ICd0b3AnXG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgYXhpc0tleSBpbiBheGVzKSB7XG4gICAgICB2YXIgYXhpcyA9IGF4ZXNbYXhpc0tleV1cbiAgICAgIGZvciAodmFyIHdheXBvaW50S2V5IGluIHRoaXMud2F5cG9pbnRzW2F4aXNLZXldKSB7XG4gICAgICAgIHZhciB3YXlwb2ludCA9IHRoaXMud2F5cG9pbnRzW2F4aXNLZXldW3dheXBvaW50S2V5XVxuICAgICAgICB2YXIgYWRqdXN0bWVudCA9IHdheXBvaW50Lm9wdGlvbnMub2Zmc2V0XG4gICAgICAgIHZhciBvbGRUcmlnZ2VyUG9pbnQgPSB3YXlwb2ludC50cmlnZ2VyUG9pbnRcbiAgICAgICAgdmFyIGVsZW1lbnRPZmZzZXQgPSAwXG4gICAgICAgIHZhciBmcmVzaFdheXBvaW50ID0gb2xkVHJpZ2dlclBvaW50ID09IG51bGxcbiAgICAgICAgdmFyIGNvbnRleHRNb2RpZmllciwgd2FzQmVmb3JlU2Nyb2xsLCBub3dBZnRlclNjcm9sbFxuICAgICAgICB2YXIgdHJpZ2dlcmVkQmFja3dhcmQsIHRyaWdnZXJlZEZvcndhcmRcblxuICAgICAgICBpZiAod2F5cG9pbnQuZWxlbWVudCAhPT0gd2F5cG9pbnQuZWxlbWVudC53aW5kb3cpIHtcbiAgICAgICAgICBlbGVtZW50T2Zmc2V0ID0gd2F5cG9pbnQuYWRhcHRlci5vZmZzZXQoKVtheGlzLm9mZnNldFByb3BdXG4gICAgICAgIH1cblxuICAgICAgICBpZiAodHlwZW9mIGFkanVzdG1lbnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICBhZGp1c3RtZW50ID0gYWRqdXN0bWVudC5hcHBseSh3YXlwb2ludClcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlb2YgYWRqdXN0bWVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICBhZGp1c3RtZW50ID0gcGFyc2VGbG9hdChhZGp1c3RtZW50KVxuICAgICAgICAgIGlmICh3YXlwb2ludC5vcHRpb25zLm9mZnNldC5pbmRleE9mKCclJykgPiAtIDEpIHtcbiAgICAgICAgICAgIGFkanVzdG1lbnQgPSBNYXRoLmNlaWwoYXhpcy5jb250ZXh0RGltZW5zaW9uICogYWRqdXN0bWVudCAvIDEwMClcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBjb250ZXh0TW9kaWZpZXIgPSBheGlzLmNvbnRleHRTY3JvbGwgLSBheGlzLmNvbnRleHRPZmZzZXRcbiAgICAgICAgd2F5cG9pbnQudHJpZ2dlclBvaW50ID0gZWxlbWVudE9mZnNldCArIGNvbnRleHRNb2RpZmllciAtIGFkanVzdG1lbnRcbiAgICAgICAgd2FzQmVmb3JlU2Nyb2xsID0gb2xkVHJpZ2dlclBvaW50IDwgYXhpcy5vbGRTY3JvbGxcbiAgICAgICAgbm93QWZ0ZXJTY3JvbGwgPSB3YXlwb2ludC50cmlnZ2VyUG9pbnQgPj0gYXhpcy5vbGRTY3JvbGxcbiAgICAgICAgdHJpZ2dlcmVkQmFja3dhcmQgPSB3YXNCZWZvcmVTY3JvbGwgJiYgbm93QWZ0ZXJTY3JvbGxcbiAgICAgICAgdHJpZ2dlcmVkRm9yd2FyZCA9ICF3YXNCZWZvcmVTY3JvbGwgJiYgIW5vd0FmdGVyU2Nyb2xsXG5cbiAgICAgICAgaWYgKCFmcmVzaFdheXBvaW50ICYmIHRyaWdnZXJlZEJhY2t3YXJkKSB7XG4gICAgICAgICAgd2F5cG9pbnQucXVldWVUcmlnZ2VyKGF4aXMuYmFja3dhcmQpXG4gICAgICAgICAgdHJpZ2dlcmVkR3JvdXBzW3dheXBvaW50Lmdyb3VwLmlkXSA9IHdheXBvaW50Lmdyb3VwXG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoIWZyZXNoV2F5cG9pbnQgJiYgdHJpZ2dlcmVkRm9yd2FyZCkge1xuICAgICAgICAgIHdheXBvaW50LnF1ZXVlVHJpZ2dlcihheGlzLmZvcndhcmQpXG4gICAgICAgICAgdHJpZ2dlcmVkR3JvdXBzW3dheXBvaW50Lmdyb3VwLmlkXSA9IHdheXBvaW50Lmdyb3VwXG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoZnJlc2hXYXlwb2ludCAmJiBheGlzLm9sZFNjcm9sbCA+PSB3YXlwb2ludC50cmlnZ2VyUG9pbnQpIHtcbiAgICAgICAgICB3YXlwb2ludC5xdWV1ZVRyaWdnZXIoYXhpcy5mb3J3YXJkKVxuICAgICAgICAgIHRyaWdnZXJlZEdyb3Vwc1t3YXlwb2ludC5ncm91cC5pZF0gPSB3YXlwb2ludC5ncm91cFxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgV2F5cG9pbnQucmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uKCkge1xuICAgICAgZm9yICh2YXIgZ3JvdXBLZXkgaW4gdHJpZ2dlcmVkR3JvdXBzKSB7XG4gICAgICAgIHRyaWdnZXJlZEdyb3Vwc1tncm91cEtleV0uZmx1c2hUcmlnZ2VycygpXG4gICAgICB9XG4gICAgfSlcblxuICAgIHJldHVybiB0aGlzXG4gIH1cblxuICAvKiBQcml2YXRlICovXG4gIENvbnRleHQuZmluZE9yQ3JlYXRlQnlFbGVtZW50ID0gZnVuY3Rpb24oZWxlbWVudCkge1xuICAgIHJldHVybiBDb250ZXh0LmZpbmRCeUVsZW1lbnQoZWxlbWVudCkgfHwgbmV3IENvbnRleHQoZWxlbWVudClcbiAgfVxuXG4gIC8qIFByaXZhdGUgKi9cbiAgQ29udGV4dC5yZWZyZXNoQWxsID0gZnVuY3Rpb24oKSB7XG4gICAgZm9yICh2YXIgY29udGV4dElkIGluIGNvbnRleHRzKSB7XG4gICAgICBjb250ZXh0c1tjb250ZXh0SWRdLnJlZnJlc2goKVxuICAgIH1cbiAgfVxuXG4gIC8qIFB1YmxpYyAqL1xuICAvKiBodHRwOi8vaW1ha2V3ZWJ0aGluZ3MuY29tL3dheXBvaW50cy9hcGkvY29udGV4dC1maW5kLWJ5LWVsZW1lbnQgKi9cbiAgQ29udGV4dC5maW5kQnlFbGVtZW50ID0gZnVuY3Rpb24oZWxlbWVudCkge1xuICAgIHJldHVybiBjb250ZXh0c1tlbGVtZW50LndheXBvaW50Q29udGV4dEtleV1cbiAgfVxuXG4gIHdpbmRvdy5vbmxvYWQgPSBmdW5jdGlvbigpIHtcbiAgICBpZiAob2xkV2luZG93TG9hZCkge1xuICAgICAgb2xkV2luZG93TG9hZCgpXG4gICAgfVxuICAgIENvbnRleHQucmVmcmVzaEFsbCgpXG4gIH1cblxuICBXYXlwb2ludC5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgPSBmdW5jdGlvbihjYWxsYmFjaykge1xuICAgIHZhciByZXF1ZXN0Rm4gPSB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8XG4gICAgICB3aW5kb3cubW96UmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8XG4gICAgICB3aW5kb3cud2Via2l0UmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8XG4gICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWVTaGltXG4gICAgcmVxdWVzdEZuLmNhbGwod2luZG93LCBjYWxsYmFjaylcbiAgfVxuICBXYXlwb2ludC5Db250ZXh0ID0gQ29udGV4dFxufSgpKVxuOyhmdW5jdGlvbigpIHtcbiAgJ3VzZSBzdHJpY3QnXG5cbiAgZnVuY3Rpb24gYnlUcmlnZ2VyUG9pbnQoYSwgYikge1xuICAgIHJldHVybiBhLnRyaWdnZXJQb2ludCAtIGIudHJpZ2dlclBvaW50XG4gIH1cblxuICBmdW5jdGlvbiBieVJldmVyc2VUcmlnZ2VyUG9pbnQoYSwgYikge1xuICAgIHJldHVybiBiLnRyaWdnZXJQb2ludCAtIGEudHJpZ2dlclBvaW50XG4gIH1cblxuICB2YXIgZ3JvdXBzID0ge1xuICAgIHZlcnRpY2FsOiB7fSxcbiAgICBob3Jpem9udGFsOiB7fVxuICB9XG4gIHZhciBXYXlwb2ludCA9IHdpbmRvdy5XYXlwb2ludFxuXG4gIC8qIGh0dHA6Ly9pbWFrZXdlYnRoaW5ncy5jb20vd2F5cG9pbnRzL2FwaS9ncm91cCAqL1xuICBmdW5jdGlvbiBHcm91cChvcHRpb25zKSB7XG4gICAgdGhpcy5uYW1lID0gb3B0aW9ucy5uYW1lXG4gICAgdGhpcy5heGlzID0gb3B0aW9ucy5heGlzXG4gICAgdGhpcy5pZCA9IHRoaXMubmFtZSArICctJyArIHRoaXMuYXhpc1xuICAgIHRoaXMud2F5cG9pbnRzID0gW11cbiAgICB0aGlzLmNsZWFyVHJpZ2dlclF1ZXVlcygpXG4gICAgZ3JvdXBzW3RoaXMuYXhpc11bdGhpcy5uYW1lXSA9IHRoaXNcbiAgfVxuXG4gIC8qIFByaXZhdGUgKi9cbiAgR3JvdXAucHJvdG90eXBlLmFkZCA9IGZ1bmN0aW9uKHdheXBvaW50KSB7XG4gICAgdGhpcy53YXlwb2ludHMucHVzaCh3YXlwb2ludClcbiAgfVxuXG4gIC8qIFByaXZhdGUgKi9cbiAgR3JvdXAucHJvdG90eXBlLmNsZWFyVHJpZ2dlclF1ZXVlcyA9IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMudHJpZ2dlclF1ZXVlcyA9IHtcbiAgICAgIHVwOiBbXSxcbiAgICAgIGRvd246IFtdLFxuICAgICAgbGVmdDogW10sXG4gICAgICByaWdodDogW11cbiAgICB9XG4gIH1cblxuICAvKiBQcml2YXRlICovXG4gIEdyb3VwLnByb3RvdHlwZS5mbHVzaFRyaWdnZXJzID0gZnVuY3Rpb24oKSB7XG4gICAgZm9yICh2YXIgZGlyZWN0aW9uIGluIHRoaXMudHJpZ2dlclF1ZXVlcykge1xuICAgICAgdmFyIHdheXBvaW50cyA9IHRoaXMudHJpZ2dlclF1ZXVlc1tkaXJlY3Rpb25dXG4gICAgICB2YXIgcmV2ZXJzZSA9IGRpcmVjdGlvbiA9PT0gJ3VwJyB8fCBkaXJlY3Rpb24gPT09ICdsZWZ0J1xuICAgICAgd2F5cG9pbnRzLnNvcnQocmV2ZXJzZSA/IGJ5UmV2ZXJzZVRyaWdnZXJQb2ludCA6IGJ5VHJpZ2dlclBvaW50KVxuICAgICAgZm9yICh2YXIgaSA9IDAsIGVuZCA9IHdheXBvaW50cy5sZW5ndGg7IGkgPCBlbmQ7IGkgKz0gMSkge1xuICAgICAgICB2YXIgd2F5cG9pbnQgPSB3YXlwb2ludHNbaV1cbiAgICAgICAgaWYgKHdheXBvaW50Lm9wdGlvbnMuY29udGludW91cyB8fCBpID09PSB3YXlwb2ludHMubGVuZ3RoIC0gMSkge1xuICAgICAgICAgIHdheXBvaW50LnRyaWdnZXIoW2RpcmVjdGlvbl0pXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5jbGVhclRyaWdnZXJRdWV1ZXMoKVxuICB9XG5cbiAgLyogUHJpdmF0ZSAqL1xuICBHcm91cC5wcm90b3R5cGUubmV4dCA9IGZ1bmN0aW9uKHdheXBvaW50KSB7XG4gICAgdGhpcy53YXlwb2ludHMuc29ydChieVRyaWdnZXJQb2ludClcbiAgICB2YXIgaW5kZXggPSBXYXlwb2ludC5BZGFwdGVyLmluQXJyYXkod2F5cG9pbnQsIHRoaXMud2F5cG9pbnRzKVxuICAgIHZhciBpc0xhc3QgPSBpbmRleCA9PT0gdGhpcy53YXlwb2ludHMubGVuZ3RoIC0gMVxuICAgIHJldHVybiBpc0xhc3QgPyBudWxsIDogdGhpcy53YXlwb2ludHNbaW5kZXggKyAxXVxuICB9XG5cbiAgLyogUHJpdmF0ZSAqL1xuICBHcm91cC5wcm90b3R5cGUucHJldmlvdXMgPSBmdW5jdGlvbih3YXlwb2ludCkge1xuICAgIHRoaXMud2F5cG9pbnRzLnNvcnQoYnlUcmlnZ2VyUG9pbnQpXG4gICAgdmFyIGluZGV4ID0gV2F5cG9pbnQuQWRhcHRlci5pbkFycmF5KHdheXBvaW50LCB0aGlzLndheXBvaW50cylcbiAgICByZXR1cm4gaW5kZXggPyB0aGlzLndheXBvaW50c1tpbmRleCAtIDFdIDogbnVsbFxuICB9XG5cbiAgLyogUHJpdmF0ZSAqL1xuICBHcm91cC5wcm90b3R5cGUucXVldWVUcmlnZ2VyID0gZnVuY3Rpb24od2F5cG9pbnQsIGRpcmVjdGlvbikge1xuICAgIHRoaXMudHJpZ2dlclF1ZXVlc1tkaXJlY3Rpb25dLnB1c2god2F5cG9pbnQpXG4gIH1cblxuICAvKiBQcml2YXRlICovXG4gIEdyb3VwLnByb3RvdHlwZS5yZW1vdmUgPSBmdW5jdGlvbih3YXlwb2ludCkge1xuICAgIHZhciBpbmRleCA9IFdheXBvaW50LkFkYXB0ZXIuaW5BcnJheSh3YXlwb2ludCwgdGhpcy53YXlwb2ludHMpXG4gICAgaWYgKGluZGV4ID4gLTEpIHtcbiAgICAgIHRoaXMud2F5cG9pbnRzLnNwbGljZShpbmRleCwgMSlcbiAgICB9XG4gIH1cblxuICAvKiBQdWJsaWMgKi9cbiAgLyogaHR0cDovL2ltYWtld2VidGhpbmdzLmNvbS93YXlwb2ludHMvYXBpL2ZpcnN0ICovXG4gIEdyb3VwLnByb3RvdHlwZS5maXJzdCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLndheXBvaW50c1swXVxuICB9XG5cbiAgLyogUHVibGljICovXG4gIC8qIGh0dHA6Ly9pbWFrZXdlYnRoaW5ncy5jb20vd2F5cG9pbnRzL2FwaS9sYXN0ICovXG4gIEdyb3VwLnByb3RvdHlwZS5sYXN0ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMud2F5cG9pbnRzW3RoaXMud2F5cG9pbnRzLmxlbmd0aCAtIDFdXG4gIH1cblxuICAvKiBQcml2YXRlICovXG4gIEdyb3VwLmZpbmRPckNyZWF0ZSA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gZ3JvdXBzW29wdGlvbnMuYXhpc11bb3B0aW9ucy5uYW1lXSB8fCBuZXcgR3JvdXAob3B0aW9ucylcbiAgfVxuXG4gIFdheXBvaW50Lkdyb3VwID0gR3JvdXBcbn0oKSlcbjsoZnVuY3Rpb24oKSB7XG4gICd1c2Ugc3RyaWN0J1xuXG4gIHZhciBXYXlwb2ludCA9IHdpbmRvdy5XYXlwb2ludFxuXG4gIGZ1bmN0aW9uIGlzV2luZG93KGVsZW1lbnQpIHtcbiAgICByZXR1cm4gZWxlbWVudCA9PT0gZWxlbWVudC53aW5kb3dcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldFdpbmRvdyhlbGVtZW50KSB7XG4gICAgaWYgKGlzV2luZG93KGVsZW1lbnQpKSB7XG4gICAgICByZXR1cm4gZWxlbWVudFxuICAgIH1cbiAgICByZXR1cm4gZWxlbWVudC5kZWZhdWx0Vmlld1xuICB9XG5cbiAgZnVuY3Rpb24gTm9GcmFtZXdvcmtBZGFwdGVyKGVsZW1lbnQpIHtcbiAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50XG4gICAgdGhpcy5oYW5kbGVycyA9IHt9XG4gIH1cblxuICBOb0ZyYW1ld29ya0FkYXB0ZXIucHJvdG90eXBlLmlubmVySGVpZ2h0ID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGlzV2luID0gaXNXaW5kb3codGhpcy5lbGVtZW50KVxuICAgIHJldHVybiBpc1dpbiA/IHRoaXMuZWxlbWVudC5pbm5lckhlaWdodCA6IHRoaXMuZWxlbWVudC5jbGllbnRIZWlnaHRcbiAgfVxuXG4gIE5vRnJhbWV3b3JrQWRhcHRlci5wcm90b3R5cGUuaW5uZXJXaWR0aCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBpc1dpbiA9IGlzV2luZG93KHRoaXMuZWxlbWVudClcbiAgICByZXR1cm4gaXNXaW4gPyB0aGlzLmVsZW1lbnQuaW5uZXJXaWR0aCA6IHRoaXMuZWxlbWVudC5jbGllbnRXaWR0aFxuICB9XG5cbiAgTm9GcmFtZXdvcmtBZGFwdGVyLnByb3RvdHlwZS5vZmYgPSBmdW5jdGlvbihldmVudCwgaGFuZGxlcikge1xuICAgIGZ1bmN0aW9uIHJlbW92ZUxpc3RlbmVycyhlbGVtZW50LCBsaXN0ZW5lcnMsIGhhbmRsZXIpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwLCBlbmQgPSBsaXN0ZW5lcnMubGVuZ3RoIC0gMTsgaSA8IGVuZDsgaSsrKSB7XG4gICAgICAgIHZhciBsaXN0ZW5lciA9IGxpc3RlbmVyc1tpXVxuICAgICAgICBpZiAoIWhhbmRsZXIgfHwgaGFuZGxlciA9PT0gbGlzdGVuZXIpIHtcbiAgICAgICAgICBlbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIobGlzdGVuZXIpXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgZXZlbnRQYXJ0cyA9IGV2ZW50LnNwbGl0KCcuJylcbiAgICB2YXIgZXZlbnRUeXBlID0gZXZlbnRQYXJ0c1swXVxuICAgIHZhciBuYW1lc3BhY2UgPSBldmVudFBhcnRzWzFdXG4gICAgdmFyIGVsZW1lbnQgPSB0aGlzLmVsZW1lbnRcblxuICAgIGlmIChuYW1lc3BhY2UgJiYgdGhpcy5oYW5kbGVyc1tuYW1lc3BhY2VdICYmIGV2ZW50VHlwZSkge1xuICAgICAgcmVtb3ZlTGlzdGVuZXJzKGVsZW1lbnQsIHRoaXMuaGFuZGxlcnNbbmFtZXNwYWNlXVtldmVudFR5cGVdLCBoYW5kbGVyKVxuICAgICAgdGhpcy5oYW5kbGVyc1tuYW1lc3BhY2VdW2V2ZW50VHlwZV0gPSBbXVxuICAgIH1cbiAgICBlbHNlIGlmIChldmVudFR5cGUpIHtcbiAgICAgIGZvciAodmFyIG5zIGluIHRoaXMuaGFuZGxlcnMpIHtcbiAgICAgICAgcmVtb3ZlTGlzdGVuZXJzKGVsZW1lbnQsIHRoaXMuaGFuZGxlcnNbbnNdW2V2ZW50VHlwZV0gfHwgW10sIGhhbmRsZXIpXG4gICAgICAgIHRoaXMuaGFuZGxlcnNbbnNdW2V2ZW50VHlwZV0gPSBbXVxuICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmIChuYW1lc3BhY2UgJiYgdGhpcy5oYW5kbGVyc1tuYW1lc3BhY2VdKSB7XG4gICAgICBmb3IgKHZhciB0eXBlIGluIHRoaXMuaGFuZGxlcnNbbmFtZXNwYWNlXSkge1xuICAgICAgICByZW1vdmVMaXN0ZW5lcnMoZWxlbWVudCwgdGhpcy5oYW5kbGVyc1tuYW1lc3BhY2VdW3R5cGVdLCBoYW5kbGVyKVxuICAgICAgfVxuICAgICAgdGhpcy5oYW5kbGVyc1tuYW1lc3BhY2VdID0ge31cbiAgICB9XG4gIH1cblxuICAvKiBBZGFwdGVkIGZyb20galF1ZXJ5IDEueCBvZmZzZXQoKSAqL1xuICBOb0ZyYW1ld29ya0FkYXB0ZXIucHJvdG90eXBlLm9mZnNldCA9IGZ1bmN0aW9uKCkge1xuICAgIGlmICghdGhpcy5lbGVtZW50Lm93bmVyRG9jdW1lbnQpIHtcbiAgICAgIHJldHVybiBudWxsXG4gICAgfVxuXG4gICAgdmFyIGRvY3VtZW50RWxlbWVudCA9IHRoaXMuZWxlbWVudC5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudFxuICAgIHZhciB3aW4gPSBnZXRXaW5kb3codGhpcy5lbGVtZW50Lm93bmVyRG9jdW1lbnQpXG4gICAgdmFyIHJlY3QgPSB7XG4gICAgICB0b3A6IDAsXG4gICAgICBsZWZ0OiAwXG4gICAgfVxuXG4gICAgaWYgKHRoaXMuZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QpIHtcbiAgICAgIHJlY3QgPSB0aGlzLmVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgdG9wOiByZWN0LnRvcCArIHdpbi5wYWdlWU9mZnNldCAtIGRvY3VtZW50RWxlbWVudC5jbGllbnRUb3AsXG4gICAgICBsZWZ0OiByZWN0LmxlZnQgKyB3aW4ucGFnZVhPZmZzZXQgLSBkb2N1bWVudEVsZW1lbnQuY2xpZW50TGVmdFxuICAgIH1cbiAgfVxuXG4gIE5vRnJhbWV3b3JrQWRhcHRlci5wcm90b3R5cGUub24gPSBmdW5jdGlvbihldmVudCwgaGFuZGxlcikge1xuICAgIHZhciBldmVudFBhcnRzID0gZXZlbnQuc3BsaXQoJy4nKVxuICAgIHZhciBldmVudFR5cGUgPSBldmVudFBhcnRzWzBdXG4gICAgdmFyIG5hbWVzcGFjZSA9IGV2ZW50UGFydHNbMV0gfHwgJ19fZGVmYXVsdCdcbiAgICB2YXIgbnNIYW5kbGVycyA9IHRoaXMuaGFuZGxlcnNbbmFtZXNwYWNlXSA9IHRoaXMuaGFuZGxlcnNbbmFtZXNwYWNlXSB8fCB7fVxuICAgIHZhciBuc1R5cGVMaXN0ID0gbnNIYW5kbGVyc1tldmVudFR5cGVdID0gbnNIYW5kbGVyc1tldmVudFR5cGVdIHx8IFtdXG5cbiAgICBuc1R5cGVMaXN0LnB1c2goaGFuZGxlcilcbiAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGhhbmRsZXIpXG4gIH1cblxuICBOb0ZyYW1ld29ya0FkYXB0ZXIucHJvdG90eXBlLm91dGVySGVpZ2h0ID0gZnVuY3Rpb24oaW5jbHVkZU1hcmdpbikge1xuICAgIHZhciBoZWlnaHQgPSB0aGlzLmlubmVySGVpZ2h0KClcbiAgICB2YXIgY29tcHV0ZWRTdHlsZVxuXG4gICAgaWYgKGluY2x1ZGVNYXJnaW4gJiYgIWlzV2luZG93KHRoaXMuZWxlbWVudCkpIHtcbiAgICAgIGNvbXB1dGVkU3R5bGUgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzLmVsZW1lbnQpXG4gICAgICBoZWlnaHQgKz0gcGFyc2VJbnQoY29tcHV0ZWRTdHlsZS5tYXJnaW5Ub3AsIDEwKVxuICAgICAgaGVpZ2h0ICs9IHBhcnNlSW50KGNvbXB1dGVkU3R5bGUubWFyZ2luQm90dG9tLCAxMClcbiAgICB9XG5cbiAgICByZXR1cm4gaGVpZ2h0XG4gIH1cblxuICBOb0ZyYW1ld29ya0FkYXB0ZXIucHJvdG90eXBlLm91dGVyV2lkdGggPSBmdW5jdGlvbihpbmNsdWRlTWFyZ2luKSB7XG4gICAgdmFyIHdpZHRoID0gdGhpcy5pbm5lcldpZHRoKClcbiAgICB2YXIgY29tcHV0ZWRTdHlsZVxuXG4gICAgaWYgKGluY2x1ZGVNYXJnaW4gJiYgIWlzV2luZG93KHRoaXMuZWxlbWVudCkpIHtcbiAgICAgIGNvbXB1dGVkU3R5bGUgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzLmVsZW1lbnQpXG4gICAgICB3aWR0aCArPSBwYXJzZUludChjb21wdXRlZFN0eWxlLm1hcmdpbkxlZnQsIDEwKVxuICAgICAgd2lkdGggKz0gcGFyc2VJbnQoY29tcHV0ZWRTdHlsZS5tYXJnaW5SaWdodCwgMTApXG4gICAgfVxuXG4gICAgcmV0dXJuIHdpZHRoXG4gIH1cblxuICBOb0ZyYW1ld29ya0FkYXB0ZXIucHJvdG90eXBlLnNjcm9sbExlZnQgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgd2luID0gZ2V0V2luZG93KHRoaXMuZWxlbWVudClcbiAgICByZXR1cm4gd2luID8gd2luLnBhZ2VYT2Zmc2V0IDogdGhpcy5lbGVtZW50LnNjcm9sbExlZnRcbiAgfVxuXG4gIE5vRnJhbWV3b3JrQWRhcHRlci5wcm90b3R5cGUuc2Nyb2xsVG9wID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHdpbiA9IGdldFdpbmRvdyh0aGlzLmVsZW1lbnQpXG4gICAgcmV0dXJuIHdpbiA/IHdpbi5wYWdlWU9mZnNldCA6IHRoaXMuZWxlbWVudC5zY3JvbGxUb3BcbiAgfVxuXG4gIE5vRnJhbWV3b3JrQWRhcHRlci5leHRlbmQgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cylcblxuICAgIGZ1bmN0aW9uIG1lcmdlKHRhcmdldCwgb2JqKSB7XG4gICAgICBpZiAodHlwZW9mIHRhcmdldCA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG9iaiA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgZm9yICh2YXIga2V5IGluIG9iaikge1xuICAgICAgICAgIGlmIChvYmouaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICAgICAgdGFyZ2V0W2tleV0gPSBvYmpba2V5XVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGFyZ2V0XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDEsIGVuZCA9IGFyZ3MubGVuZ3RoOyBpIDwgZW5kOyBpKyspIHtcbiAgICAgIG1lcmdlKGFyZ3NbMF0sIGFyZ3NbaV0pXG4gICAgfVxuICAgIHJldHVybiBhcmdzWzBdXG4gIH1cblxuICBOb0ZyYW1ld29ya0FkYXB0ZXIuaW5BcnJheSA9IGZ1bmN0aW9uKGVsZW1lbnQsIGFycmF5LCBpKSB7XG4gICAgcmV0dXJuIGFycmF5ID09IG51bGwgPyAtMSA6IGFycmF5LmluZGV4T2YoZWxlbWVudCwgaSlcbiAgfVxuXG4gIE5vRnJhbWV3b3JrQWRhcHRlci5pc0VtcHR5T2JqZWN0ID0gZnVuY3Rpb24ob2JqKSB7XG4gICAgLyogZXNsaW50IG5vLXVudXNlZC12YXJzOiAwICovXG4gICAgZm9yICh2YXIgbmFtZSBpbiBvYmopIHtcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZVxuICB9XG5cbiAgV2F5cG9pbnQuYWRhcHRlcnMucHVzaCh7XG4gICAgbmFtZTogJ25vZnJhbWV3b3JrJyxcbiAgICBBZGFwdGVyOiBOb0ZyYW1ld29ya0FkYXB0ZXJcbiAgfSlcbiAgV2F5cG9pbnQuQWRhcHRlciA9IE5vRnJhbWV3b3JrQWRhcHRlclxufSgpKVxuO1xuLyohXG5XYXlwb2ludHMgSW52aWV3IFNob3J0Y3V0IC0gNC4wLjBcbkNvcHlyaWdodCDCqSAyMDExLTIwMTUgQ2FsZWIgVHJvdWdodG9uXG5MaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5odHRwczovL2dpdGh1Yi5jb20vaW1ha2V3ZWJ0aGluZ3Mvd2F5cG9pbnRzL2Jsb2IvbWFzdGVyL2xpY2Vuc2VzLnR4dFxuKi9cbihmdW5jdGlvbigpIHtcbiAgJ3VzZSBzdHJpY3QnXG5cbiAgZnVuY3Rpb24gbm9vcCgpIHt9XG5cbiAgdmFyIFdheXBvaW50ID0gd2luZG93LldheXBvaW50XG5cbiAgLyogaHR0cDovL2ltYWtld2VidGhpbmdzLmNvbS93YXlwb2ludHMvc2hvcnRjdXRzL2ludmlldyAqL1xuICBmdW5jdGlvbiBJbnZpZXcob3B0aW9ucykge1xuICAgIHRoaXMub3B0aW9ucyA9IFdheXBvaW50LkFkYXB0ZXIuZXh0ZW5kKHt9LCBJbnZpZXcuZGVmYXVsdHMsIG9wdGlvbnMpXG4gICAgdGhpcy5heGlzID0gdGhpcy5vcHRpb25zLmhvcml6b250YWwgPyAnaG9yaXpvbnRhbCcgOiAndmVydGljYWwnXG4gICAgdGhpcy53YXlwb2ludHMgPSBbXVxuICAgIHRoaXMuZWxlbWVudCA9IHRoaXMub3B0aW9ucy5lbGVtZW50XG4gICAgdGhpcy5jcmVhdGVXYXlwb2ludHMoKVxuICB9XG5cbiAgLyogUHJpdmF0ZSAqL1xuICBJbnZpZXcucHJvdG90eXBlLmNyZWF0ZVdheXBvaW50cyA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBjb25maWdzID0ge1xuICAgICAgdmVydGljYWw6IFt7XG4gICAgICAgIGRvd246ICdlbnRlcicsXG4gICAgICAgIHVwOiAnZXhpdGVkJyxcbiAgICAgICAgb2Zmc2V0OiAnMTAwJSdcbiAgICAgIH0sIHtcbiAgICAgICAgZG93bjogJ2VudGVyZWQnLFxuICAgICAgICB1cDogJ2V4aXQnLFxuICAgICAgICBvZmZzZXQ6ICdib3R0b20taW4tdmlldydcbiAgICAgIH0sIHtcbiAgICAgICAgZG93bjogJ2V4aXQnLFxuICAgICAgICB1cDogJ2VudGVyZWQnLFxuICAgICAgICBvZmZzZXQ6IDBcbiAgICAgIH0sIHtcbiAgICAgICAgZG93bjogJ2V4aXRlZCcsXG4gICAgICAgIHVwOiAnZW50ZXInLFxuICAgICAgICBvZmZzZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHJldHVybiAtdGhpcy5hZGFwdGVyLm91dGVySGVpZ2h0KClcbiAgICAgICAgfVxuICAgICAgfV0sXG4gICAgICBob3Jpem9udGFsOiBbe1xuICAgICAgICByaWdodDogJ2VudGVyJyxcbiAgICAgICAgbGVmdDogJ2V4aXRlZCcsXG4gICAgICAgIG9mZnNldDogJzEwMCUnXG4gICAgICB9LCB7XG4gICAgICAgIHJpZ2h0OiAnZW50ZXJlZCcsXG4gICAgICAgIGxlZnQ6ICdleGl0JyxcbiAgICAgICAgb2Zmc2V0OiAncmlnaHQtaW4tdmlldydcbiAgICAgIH0sIHtcbiAgICAgICAgcmlnaHQ6ICdleGl0JyxcbiAgICAgICAgbGVmdDogJ2VudGVyZWQnLFxuICAgICAgICBvZmZzZXQ6IDBcbiAgICAgIH0sIHtcbiAgICAgICAgcmlnaHQ6ICdleGl0ZWQnLFxuICAgICAgICBsZWZ0OiAnZW50ZXInLFxuICAgICAgICBvZmZzZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHJldHVybiAtdGhpcy5hZGFwdGVyLm91dGVyV2lkdGgoKVxuICAgICAgICB9XG4gICAgICB9XVxuICAgIH1cblxuICAgIGZvciAodmFyIGkgPSAwLCBlbmQgPSBjb25maWdzW3RoaXMuYXhpc10ubGVuZ3RoOyBpIDwgZW5kOyBpKyspIHtcbiAgICAgIHZhciBjb25maWcgPSBjb25maWdzW3RoaXMuYXhpc11baV1cbiAgICAgIHRoaXMuY3JlYXRlV2F5cG9pbnQoY29uZmlnKVxuICAgIH1cbiAgfVxuXG4gIC8qIFByaXZhdGUgKi9cbiAgSW52aWV3LnByb3RvdHlwZS5jcmVhdGVXYXlwb2ludCA9IGZ1bmN0aW9uKGNvbmZpZykge1xuICAgIHZhciBzZWxmID0gdGhpc1xuICAgIHRoaXMud2F5cG9pbnRzLnB1c2gobmV3IFdheXBvaW50KHtcbiAgICAgIGNvbnRleHQ6IHRoaXMub3B0aW9ucy5jb250ZXh0LFxuICAgICAgZWxlbWVudDogdGhpcy5vcHRpb25zLmVsZW1lbnQsXG4gICAgICBlbmFibGVkOiB0aGlzLm9wdGlvbnMuZW5hYmxlZCxcbiAgICAgIGhhbmRsZXI6IChmdW5jdGlvbihjb25maWcpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKGRpcmVjdGlvbikge1xuICAgICAgICAgIHNlbGYub3B0aW9uc1tjb25maWdbZGlyZWN0aW9uXV0uY2FsbChzZWxmLCBkaXJlY3Rpb24pXG4gICAgICAgIH1cbiAgICAgIH0oY29uZmlnKSksXG4gICAgICBvZmZzZXQ6IGNvbmZpZy5vZmZzZXQsXG4gICAgICBob3Jpem9udGFsOiB0aGlzLm9wdGlvbnMuaG9yaXpvbnRhbFxuICAgIH0pKVxuICB9XG5cbiAgLyogUHVibGljICovXG4gIEludmlldy5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uKCkge1xuICAgIGZvciAodmFyIGkgPSAwLCBlbmQgPSB0aGlzLndheXBvaW50cy5sZW5ndGg7IGkgPCBlbmQ7IGkrKykge1xuICAgICAgdGhpcy53YXlwb2ludHNbaV0uZGVzdHJveSgpXG4gICAgfVxuICAgIHRoaXMud2F5cG9pbnRzID0gW11cbiAgfVxuXG4gIEludmlldy5wcm90b3R5cGUuZGlzYWJsZSA9IGZ1bmN0aW9uKCkge1xuICAgIGZvciAodmFyIGkgPSAwLCBlbmQgPSB0aGlzLndheXBvaW50cy5sZW5ndGg7IGkgPCBlbmQ7IGkrKykge1xuICAgICAgdGhpcy53YXlwb2ludHNbaV0uZGlzYWJsZSgpXG4gICAgfVxuICB9XG5cbiAgSW52aWV3LnByb3RvdHlwZS5lbmFibGUgPSBmdW5jdGlvbigpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgZW5kID0gdGhpcy53YXlwb2ludHMubGVuZ3RoOyBpIDwgZW5kOyBpKyspIHtcbiAgICAgIHRoaXMud2F5cG9pbnRzW2ldLmVuYWJsZSgpXG4gICAgfVxuICB9XG5cbiAgSW52aWV3LmRlZmF1bHRzID0ge1xuICAgIGNvbnRleHQ6IHdpbmRvdyxcbiAgICBlbmFibGVkOiB0cnVlLFxuICAgIGVudGVyOiBub29wLFxuICAgIGVudGVyZWQ6IG5vb3AsXG4gICAgZXhpdDogbm9vcCxcbiAgICBleGl0ZWQ6IG5vb3BcbiAgfVxuXG4gIFdheXBvaW50LkludmlldyA9IEludmlld1xufSgpKVxuO1xuIiwiLyoqXG4gKiBaZW5zY3JvbGwgMy4wLjFcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS96ZW5nYWJvci96ZW5zY3JvbGwvXG4gKlxuICogQ29weXJpZ2h0IDIwMTXigJMyMDE2IEdhYm9yIExlbmFyZFxuICpcbiAqIFRoaXMgaXMgZnJlZSBhbmQgdW5lbmN1bWJlcmVkIHNvZnR3YXJlIHJlbGVhc2VkIGludG8gdGhlIHB1YmxpYyBkb21haW4uXG4gKlxuICogQW55b25lIGlzIGZyZWUgdG8gY29weSwgbW9kaWZ5LCBwdWJsaXNoLCB1c2UsIGNvbXBpbGUsIHNlbGwsIG9yXG4gKiBkaXN0cmlidXRlIHRoaXMgc29mdHdhcmUsIGVpdGhlciBpbiBzb3VyY2UgY29kZSBmb3JtIG9yIGFzIGEgY29tcGlsZWRcbiAqIGJpbmFyeSwgZm9yIGFueSBwdXJwb3NlLCBjb21tZXJjaWFsIG9yIG5vbi1jb21tZXJjaWFsLCBhbmQgYnkgYW55XG4gKiBtZWFucy5cbiAqXG4gKiBJbiBqdXJpc2RpY3Rpb25zIHRoYXQgcmVjb2duaXplIGNvcHlyaWdodCBsYXdzLCB0aGUgYXV0aG9yIG9yIGF1dGhvcnNcbiAqIG9mIHRoaXMgc29mdHdhcmUgZGVkaWNhdGUgYW55IGFuZCBhbGwgY29weXJpZ2h0IGludGVyZXN0IGluIHRoZVxuICogc29mdHdhcmUgdG8gdGhlIHB1YmxpYyBkb21haW4uIFdlIG1ha2UgdGhpcyBkZWRpY2F0aW9uIGZvciB0aGUgYmVuZWZpdFxuICogb2YgdGhlIHB1YmxpYyBhdCBsYXJnZSBhbmQgdG8gdGhlIGRldHJpbWVudCBvZiBvdXIgaGVpcnMgYW5kXG4gKiBzdWNjZXNzb3JzLiBXZSBpbnRlbmQgdGhpcyBkZWRpY2F0aW9uIHRvIGJlIGFuIG92ZXJ0IGFjdCBvZlxuICogcmVsaW5xdWlzaG1lbnQgaW4gcGVycGV0dWl0eSBvZiBhbGwgcHJlc2VudCBhbmQgZnV0dXJlIHJpZ2h0cyB0byB0aGlzXG4gKiBzb2Z0d2FyZSB1bmRlciBjb3B5cmlnaHQgbGF3LlxuICpcbiAqIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsXG4gKiBFWFBSRVNTIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0ZcbiAqIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC5cbiAqIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SXG4gKiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSxcbiAqIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUlxuICogT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuICpcbiAqIEZvciBtb3JlIGluZm9ybWF0aW9uLCBwbGVhc2UgcmVmZXIgdG8gPGh0dHA6Ly91bmxpY2Vuc2Uub3JnPlxuICpcbiAqL1xuXG4vKmpzaGludCBkZXZlbDp0cnVlLCBhc2k6dHJ1ZSAqL1xuXG4vKmdsb2JhbCBkZWZpbmUsIG1vZHVsZSAqL1xuXG5cbihmdW5jdGlvbiAocm9vdCwgemVuc2Nyb2xsKSB7XG4gICAgaWYgKHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kKSB7XG4gICAgICAgIGRlZmluZShbXSwgemVuc2Nyb2xsKCkpXG4gICAgfSBlbHNlIGlmICh0eXBlb2YgbW9kdWxlID09PSBcIm9iamVjdFwiICYmIG1vZHVsZS5leHBvcnRzKSB7XG4gICAgICAgIG1vZHVsZS5leHBvcnRzID0gemVuc2Nyb2xsKClcbiAgICB9IGVsc2Uge1xuICAgICAgICByb290LnplbnNjcm9sbCA9IHplbnNjcm9sbCgpXG4gICAgfVxufSh0aGlzLCBmdW5jdGlvbiAoKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCJcblxuICAgIHZhciBjcmVhdGVTY3JvbGxlciA9IGZ1bmN0aW9uIChzY3JvbGxDb250YWluZXIsIGRlZmF1bHREdXJhdGlvbiwgZWRnZU9mZnNldCkge1xuXG4gICAgICAgIGRlZmF1bHREdXJhdGlvbiA9IGRlZmF1bHREdXJhdGlvbiB8fCA5OTkgLy9tc1xuICAgICAgICBpZiAoIWVkZ2VPZmZzZXQgfHwgZWRnZU9mZnNldCAhPT0gMCkge1xuICAgICAgICAgICAgLy8gV2hlbiBzY3JvbGxpbmcsIHRoaXMgYW1vdW50IG9mIGRpc3RhbmNlIGlzIGtlcHQgZnJvbSB0aGUgZWRnZXMgb2YgdGhlIHNjcm9sbENvbnRhaW5lcjpcbiAgICAgICAgICAgIGVkZ2VPZmZzZXQgPSA5IC8vcHhcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBzY3JvbGxUaW1lb3V0SWRcbiAgICAgICAgdmFyIGRvY0VsZW0gPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnRcblxuICAgICAgICAvLyBEZXRlY3QgaWYgdGhlIGJyb3dzZXIgYWxyZWFkeSBzdXBwb3J0cyBuYXRpdmUgc21vb3RoIHNjcm9sbGluZyAoZS5nLiwgRmlyZWZveCAzNisgYW5kIENocm9tZSA0OSspIGFuZCBpdCBpcyBlbmFibGVkOlxuICAgICAgICB2YXIgbmF0aXZlU21vb3RoU2Nyb2xsRW5hYmxlZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiAoXCJnZXRDb21wdXRlZFN0eWxlXCIgaW4gd2luZG93KSAmJlxuICAgICAgICAgICAgICAgIHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHNjcm9sbENvbnRhaW5lciA/IHNjcm9sbENvbnRhaW5lciA6IGRvY3VtZW50LmJvZHkpW1wic2Nyb2xsLWJlaGF2aW9yXCJdID09PSBcInNtb290aFwiXG4gICAgICAgIH1cblxuICAgICAgICB2YXIgZ2V0U2Nyb2xsVG9wID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHNjcm9sbENvbnRhaW5lciA/IHNjcm9sbENvbnRhaW5lci5zY3JvbGxUb3AgOiAod2luZG93LnNjcm9sbFkgfHwgZG9jRWxlbS5zY3JvbGxUb3ApXG4gICAgICAgIH1cblxuICAgICAgICB2YXIgZ2V0Vmlld0hlaWdodCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBzY3JvbGxDb250YWluZXIgP1xuICAgICAgICAgICAgICAgIE1hdGgubWluKHNjcm9sbENvbnRhaW5lci5vZmZzZXRIZWlnaHQsIHdpbmRvdy5pbm5lckhlaWdodCkgOlxuICAgICAgICAgICAgICAgIHdpbmRvdy5pbm5lckhlaWdodCB8fCBkb2NFbGVtLmNsaWVudEhlaWdodFxuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGdldFJlbGF0aXZlVG9wT2YgPSBmdW5jdGlvbiAoZWxlbSkge1xuICAgICAgICAgICAgaWYgKHNjcm9sbENvbnRhaW5lcikge1xuICAgICAgICAgICAgICAgIHJldHVybiBlbGVtLm9mZnNldFRvcCAtIHNjcm9sbENvbnRhaW5lci5vZmZzZXRUb3BcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wICsgZ2V0U2Nyb2xsVG9wKCkgLSBkb2NFbGVtLm9mZnNldFRvcFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEltbWVkaWF0ZWx5IHN0b3BzIHRoZSBjdXJyZW50IHNtb290aCBzY3JvbGwgb3BlcmF0aW9uXG4gICAgICAgICAqL1xuICAgICAgICB2YXIgc3RvcFNjcm9sbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGNsZWFyVGltZW91dChzY3JvbGxUaW1lb3V0SWQpXG4gICAgICAgICAgICBzY3JvbGxUaW1lb3V0SWQgPSAwXG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogU2Nyb2xscyB0byBhIHNwZWNpZmljIHZlcnRpY2FsIHBvc2l0aW9uIGluIHRoZSBkb2N1bWVudC5cbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIHtlbmRZfSBUaGUgdmVydGljYWwgcG9zaXRpb24gd2l0aGluIHRoZSBkb2N1bWVudC5cbiAgICAgICAgICogQHBhcmFtIHtkdXJhdGlvbn0gT3B0aW9uYWxseSB0aGUgZHVyYXRpb24gb2YgdGhlIHNjcm9sbCBvcGVyYXRpb24uXG4gICAgICAgICAqICAgICAgICBJZiAwIG9yIG5vdCBwcm92aWRlZCBpdCBpcyBhdXRvbWF0aWNhbGx5IGNhbGN1bGF0ZWQgYmFzZWQgb24gdGhlXG4gICAgICAgICAqICAgICAgICBkaXN0YW5jZSBhbmQgdGhlIGRlZmF1bHQgZHVyYXRpb24uXG4gICAgICAgICAqL1xuICAgICAgICB2YXIgc2Nyb2xsVG9ZID0gZnVuY3Rpb24gKGVuZFksIGR1cmF0aW9uKSB7XG4gICAgICAgICAgICBzdG9wU2Nyb2xsKClcbiAgICAgICAgICAgIGlmIChuYXRpdmVTbW9vdGhTY3JvbGxFbmFibGVkKCkpIHtcbiAgICAgICAgICAgICAgICAoc2Nyb2xsQ29udGFpbmVyIHx8IHdpbmRvdykuc2Nyb2xsVG8oMCwgZW5kWSlcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdmFyIHN0YXJ0WSA9IGdldFNjcm9sbFRvcCgpXG4gICAgICAgICAgICAgICAgdmFyIGRpc3RhbmNlID0gTWF0aC5tYXgoZW5kWSwwKSAtIHN0YXJ0WVxuICAgICAgICAgICAgICAgIGR1cmF0aW9uID0gZHVyYXRpb24gfHwgTWF0aC5taW4oTWF0aC5hYnMoZGlzdGFuY2UpLCBkZWZhdWx0RHVyYXRpb24pXG4gICAgICAgICAgICAgICAgdmFyIHN0YXJ0VGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xuICAgICAgICAgICAgICAgIChmdW5jdGlvbiBsb29wU2Nyb2xsKCkge1xuICAgICAgICAgICAgICAgICAgICBzY3JvbGxUaW1lb3V0SWQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwID0gTWF0aC5taW4oKG5ldyBEYXRlKCkuZ2V0VGltZSgpIC0gc3RhcnRUaW1lKSAvIGR1cmF0aW9uLCAxKSAvLyBwZXJjZW50YWdlXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgeSA9IE1hdGgubWF4KE1hdGguZmxvb3Ioc3RhcnRZICsgZGlzdGFuY2UqKHAgPCAwLjUgPyAyKnAqcCA6IHAqKDQgLSBwKjIpLTEpKSwgMClcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzY3JvbGxDb250YWluZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY3JvbGxDb250YWluZXIuc2Nyb2xsVG9wID0geVxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuc2Nyb2xsVG8oMCwgeSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwIDwgMSAmJiAoZ2V0Vmlld0hlaWdodCgpICsgeSkgPCAoc2Nyb2xsQ29udGFpbmVyIHx8IGRvY0VsZW0pLnNjcm9sbEhlaWdodCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvb3BTY3JvbGwoKVxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KHN0b3BTY3JvbGwsIDk5KSAvLyB3aXRoIGNvb2xkb3duIHRpbWVcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSwgOSlcbiAgICAgICAgICAgICAgICB9KSgpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogU2Nyb2xscyB0byB0aGUgdG9wIG9mIGEgc3BlY2lmaWMgZWxlbWVudC5cbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIHtlbGVtfSBUaGUgZWxlbWVudC5cbiAgICAgICAgICogQHBhcmFtIHtkdXJhdGlvbn0gT3B0aW9uYWxseSB0aGUgZHVyYXRpb24gb2YgdGhlIHNjcm9sbCBvcGVyYXRpb24uXG4gICAgICAgICAqICAgICAgICBBIHZhbHVlIG9mIDAgaXMgaWdub3JlZC5cbiAgICAgICAgICovXG4gICAgICAgIHZhciBzY3JvbGxUb0VsZW0gPSBmdW5jdGlvbiAoZWxlbSwgZHVyYXRpb24pIHtcbiAgICAgICAgICAgIHNjcm9sbFRvWShnZXRSZWxhdGl2ZVRvcE9mKGVsZW0pIC0gZWRnZU9mZnNldCwgZHVyYXRpb24pXG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogU2Nyb2xscyBhbiBlbGVtZW50IGludG8gdmlldyBpZiBuZWNlc3NhcnkuXG4gICAgICAgICAqXG4gICAgICAgICAqIEBwYXJhbSB7ZWxlbX0gVGhlIGVsZW1lbnQuXG4gICAgICAgICAqIEBwYXJhbSB7ZHVyYXRpb259IE9wdGlvbmFsbHkgdGhlIGR1cmF0aW9uIG9mIHRoZSBzY3JvbGwgb3BlcmF0aW9uLlxuICAgICAgICAgKiAgICAgICAgQSB2YWx1ZSBvZiAwIGlzIGlnbm9yZWQuXG4gICAgICAgICAqL1xuICAgICAgICB2YXIgc2Nyb2xsSW50b1ZpZXcgPSBmdW5jdGlvbiAoZWxlbSwgZHVyYXRpb24pIHtcbiAgICAgICAgICAgIHZhciBlbGVtU2Nyb2xsSGVpZ2h0ID0gZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5oZWlnaHQgKyAyKmVkZ2VPZmZzZXRcbiAgICAgICAgICAgIHZhciB2SGVpZ2h0ID0gZ2V0Vmlld0hlaWdodCgpXG4gICAgICAgICAgICB2YXIgZWxlbVRvcCA9IGdldFJlbGF0aXZlVG9wT2YoZWxlbSlcbiAgICAgICAgICAgIHZhciBlbGVtQm90dG9tID0gZWxlbVRvcCArIGVsZW1TY3JvbGxIZWlnaHRcbiAgICAgICAgICAgIHZhciBzY3JvbGxUb3AgPSBnZXRTY3JvbGxUb3AoKVxuICAgICAgICAgICAgaWYgKChlbGVtVG9wIC0gc2Nyb2xsVG9wKSA8IGVkZ2VPZmZzZXQgfHwgZWxlbVNjcm9sbEhlaWdodCA+IHZIZWlnaHQpIHtcbiAgICAgICAgICAgICAgICAvLyBFbGVtZW50IGlzIGNsaXBwZWQgYXQgdG9wIG9yIGlzIGhpZ2hlciB0aGFuIHNjcmVlbi5cbiAgICAgICAgICAgICAgICBzY3JvbGxUb0VsZW0oZWxlbSwgZHVyYXRpb24pXG4gICAgICAgICAgICB9IGVsc2UgaWYgKChzY3JvbGxUb3AgKyB2SGVpZ2h0IC0gZWxlbUJvdHRvbSkgPCBlZGdlT2Zmc2V0KSB7XG4gICAgICAgICAgICAgICAgLy8gRWxlbWVudCBpcyBjbGlwcGVkIGF0IHRoZSBib3R0b20uXG4gICAgICAgICAgICAgICAgc2Nyb2xsVG9ZKGVsZW1Cb3R0b20gLSB2SGVpZ2h0LCBkdXJhdGlvbilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTY3JvbGxzIHRvIHRoZSBjZW50ZXIgb2YgYW4gZWxlbWVudC5cbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIHtlbGVtfSBUaGUgZWxlbWVudC5cbiAgICAgICAgICogQHBhcmFtIHtkdXJhdGlvbn0gT3B0aW9uYWxseSB0aGUgZHVyYXRpb24gb2YgdGhlIHNjcm9sbCBvcGVyYXRpb24uXG4gICAgICAgICAqIEBwYXJhbSB7b2Zmc2V0fSBPcHRpb25hbGx5IHRoZSBvZmZzZXQgb2YgdGhlIHRvcCBvZiB0aGUgZWxlbWVudCBmcm9tIHRoZSBjZW50ZXIgb2YgdGhlIHNjcmVlbi5cbiAgICAgICAgICogICAgICAgIEEgdmFsdWUgb2YgMCBpcyBpZ25vcmVkLlxuICAgICAgICAgKi9cbiAgICAgICAgdmFyIHNjcm9sbFRvQ2VudGVyT2YgPSBmdW5jdGlvbiAoZWxlbSwgZHVyYXRpb24sIG9mZnNldCkge1xuICAgICAgICAgICAgc2Nyb2xsVG9ZKFxuICAgICAgICAgICAgICAgIE1hdGgubWF4KFxuICAgICAgICAgICAgICAgICAgICBnZXRSZWxhdGl2ZVRvcE9mKGVsZW0pIC0gZ2V0Vmlld0hlaWdodCgpLzIgKyAob2Zmc2V0IHx8IGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkuaGVpZ2h0LzIpLFxuICAgICAgICAgICAgICAgICAgICAwXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBkdXJhdGlvblxuICAgICAgICAgICAgKVxuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIENoYW5nZXMgZGVmYXVsdCBzZXR0aW5ncyBmb3IgdGhpcyBzY3JvbGxlci5cbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIHtuZXdEZWZhdWx0RHVyYXRpb259IE5ldyB2YWx1ZSBmb3IgZGVmYXVsdCBkdXJhdGlvbiwgdXNlZCBmb3IgZWFjaCBzY3JvbGwgbWV0aG9kIGJ5IGRlZmF1bHQuXG4gICAgICAgICAqICAgICAgICBJZ25vcmVkIGlmIDAgb3IgZmFsc3kuXG4gICAgICAgICAqIEBwYXJhbSB7bmV3RWRnZU9mZnNldH0gTmV3IHZhbHVlIGZvciB0aGUgZWRnZSBvZmZzZXQsIHVzZWQgYnkgZWFjaCBzY3JvbGwgbWV0aG9kIGJ5IGRlZmF1bHQuXG4gICAgICAgICAqL1xuICAgICAgICB2YXIgc2V0dXAgPSBmdW5jdGlvbiAobmV3RGVmYXVsdER1cmF0aW9uLCBuZXdFZGdlT2Zmc2V0KSB7XG4gICAgICAgICAgICBpZiAobmV3RGVmYXVsdER1cmF0aW9uKSB7XG4gICAgICAgICAgICAgICAgZGVmYXVsdER1cmF0aW9uID0gbmV3RGVmYXVsdER1cmF0aW9uXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobmV3RWRnZU9mZnNldCA9PT0gMCB8fCBuZXdFZGdlT2Zmc2V0KSB7XG4gICAgICAgICAgICAgICAgZWRnZU9mZnNldCA9IG5ld0VkZ2VPZmZzZXRcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzZXR1cDogc2V0dXAsXG4gICAgICAgICAgICB0bzogc2Nyb2xsVG9FbGVtLFxuICAgICAgICAgICAgdG9ZOiBzY3JvbGxUb1ksXG4gICAgICAgICAgICBpbnRvVmlldzogc2Nyb2xsSW50b1ZpZXcsXG4gICAgICAgICAgICBjZW50ZXI6IHNjcm9sbFRvQ2VudGVyT2YsXG4gICAgICAgICAgICBzdG9wOiBzdG9wU2Nyb2xsLFxuICAgICAgICAgICAgbW92aW5nOiBmdW5jdGlvbiAoKSB7IHJldHVybiAhIXNjcm9sbFRpbWVvdXRJZCB9XG4gICAgICAgIH1cblxuICAgIH1cblxuICAgIC8vIENyZWF0ZSBhIHNjcm9sbGVyIGZvciB0aGUgYnJvd3NlciB3aW5kb3csIG9taXR0aW5nIHBhcmFtZXRlcnM6XG4gICAgdmFyIGRlZmF1bHRTY3JvbGxlciA9IGNyZWF0ZVNjcm9sbGVyKClcblxuICAgIC8vIENyZWF0ZSBsaXN0ZW5lcnMgZm9yIHRoZSBkb2N1bWVudEVsZW1lbnQgb25seSAmIGV4Y2x1ZGUgSUU4LVxuICAgIGlmIChcImFkZEV2ZW50TGlzdGVuZXJcIiBpbiB3aW5kb3cgJiYgZG9jdW1lbnQuYm9keS5zdHlsZS5zY3JvbGxCZWhhdmlvciAhPT0gXCJzbW9vdGhcIiAmJiAhd2luZG93Lm5vWmVuc21vb3RoKSB7XG4gICAgICAgIHZhciByZXBsYWNlVXJsID0gZnVuY3Rpb24gKGhhc2gpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgaGlzdG9yeS5yZXBsYWNlU3RhdGUoe30sIFwiXCIsIHdpbmRvdy5sb2NhdGlvbi5ocmVmLnNwbGl0KFwiI1wiKVswXSArIGhhc2gpXG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgLy8gVG8gYXZvaWQgdGhlIFNlY3VyaXR5IGV4Y2VwdGlvbiBpbiBDaHJvbWUgd2hlbiB0aGUgcGFnZSB3YXMgb3BlbmVkIHZpYSB0aGUgZmlsZSBwcm90b2NvbCwgZS5nLiwgZmlsZTovL2luZGV4Lmh0bWxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgdmFyIGFuY2hvciA9IGV2ZW50LnRhcmdldFxuICAgICAgICAgICAgd2hpbGUgKGFuY2hvciAmJiBhbmNob3IudGFnTmFtZSAhPT0gXCJBXCIpIHtcbiAgICAgICAgICAgICAgICBhbmNob3IgPSBhbmNob3IucGFyZW50Tm9kZVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFhbmNob3IgfHwgZXZlbnQud2hpY2ggIT09IDEgfHwgZXZlbnQuc2hpZnRLZXkgfHwgZXZlbnQubWV0YUtleSB8fCBldmVudC5jdHJsS2V5IHx8IGV2ZW50LmFsdEtleSkge1xuICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIGhyZWYgPSBhbmNob3IuZ2V0QXR0cmlidXRlKFwiaHJlZlwiKSB8fCBcIlwiXG4gICAgICAgICAgICBpZiAoaHJlZi5pbmRleE9mKFwiI1wiKSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGlmIChocmVmID09PSBcIiNcIikge1xuICAgICAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpIC8vIFByZXZlbnQgdGhlIGJyb3dzZXIgZnJvbSBoYW5kbGluZyB0aGUgYWN0aXZhdGlvbiBvZiB0aGUgbGlua1xuICAgICAgICAgICAgICAgICAgICBkZWZhdWx0U2Nyb2xsZXIudG9ZKDApXG4gICAgICAgICAgICAgICAgICAgIHJlcGxhY2VVcmwoXCJcIilcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB2YXIgdGFyZ2V0SWQgPSBhbmNob3IuaGFzaC5zdWJzdHJpbmcoMSlcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRhcmdldEVsZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0YXJnZXRJZClcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRhcmdldEVsZW0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCkgLy8gUHJldmVudCB0aGUgYnJvd3NlciBmcm9tIGhhbmRsaW5nIHRoZSBhY3RpdmF0aW9uIG9mIHRoZSBsaW5rXG4gICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0U2Nyb2xsZXIudG8odGFyZ2V0RWxlbSlcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcGxhY2VVcmwoXCIjXCIgKyB0YXJnZXRJZClcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwgZmFsc2UpXG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgLy8gRXhwb3NlIHRoZSBcImNvbnN0cnVjdG9yXCIgdGhhdCBjYW4gY3JlYXRlIGEgbmV3IHNjcm9sbGVyOlxuICAgICAgICBjcmVhdGVTY3JvbGxlcjogY3JlYXRlU2Nyb2xsZXIsXG4gICAgICAgIC8vIFN1cmZhY2UgdGhlIG1ldGhvZHMgb2YgdGhlIGRlZmF1bHQgc2Nyb2xsZXI6XG4gICAgICAgIHNldHVwOiBkZWZhdWx0U2Nyb2xsZXIuc2V0dXAsXG4gICAgICAgIHRvOiBkZWZhdWx0U2Nyb2xsZXIudG8sXG4gICAgICAgIHRvWTogZGVmYXVsdFNjcm9sbGVyLnRvWSxcbiAgICAgICAgaW50b1ZpZXc6IGRlZmF1bHRTY3JvbGxlci5pbnRvVmlldyxcbiAgICAgICAgY2VudGVyOiBkZWZhdWx0U2Nyb2xsZXIuY2VudGVyLFxuICAgICAgICBzdG9wOiBkZWZhdWx0U2Nyb2xsZXIuc3RvcCxcbiAgICAgICAgbW92aW5nOiBkZWZhdWx0U2Nyb2xsZXIubW92aW5nXG4gICAgfVxuXG59KSk7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBQcmltYXJ5TmF2KCkge1xuXG4gICAgLy8gY2FjaGUgZG9tIGVsZW1lbnRzXG4gICAgdmFyIGJvZHkgPSBkb2N1bWVudC5ib2R5LFxuICAgICAgICBuYXZUcmlnZ2VyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5qcy1uYXYtdHJpZ2dlclwiKSxcbiAgICAgICAgY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jb250YWluZXJcIiksXG4gICAgICAgIHByaW1hcnlOYXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmpzLXByaW1hcnktbmF2XCIpLFxuICAgICAgICBwcmltYXJ5TmF2TGlua3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmpzLXByaW1hcnktbmF2IGFcIik7XG5cbiAgICAvLyBGbGFnIHRoYXQgSlMgaGFzIGxvYWRlZFxuICAgIGJvZHkuY2xhc3NMaXN0LnJlbW92ZShcIm5vLWpzXCIpO1xuICAgIGJvZHkuY2xhc3NMaXN0LmFkZChcImpzXCIpO1xuXG4gICAgLy8gSGFtYnVyZ2VyIG1lbnVcbiAgICBuYXZUcmlnZ2VyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbigpe1xuICAgICAgICAvLyB0b2dnbGUgYWN0aXZlIGNsYXNzIG9uIHRoZSBuYXYgdHJpZ2dlclxuICAgICAgICB0aGlzLmNsYXNzTGlzdC50b2dnbGUoXCJvcGVuXCIpO1xuICAgICAgICAvLyB0b2dnbGUgdGhlIGFjdGl2ZSBjbGFzcyBvbiBzaXRlIGNvbnRhaW5lclxuICAgICAgICBjb250YWluZXIuY2xhc3NMaXN0LnRvZ2dsZShcImpzLW5hdi1hY3RpdmVcIik7XG4gICAgfSk7XG5cbiAgICAvLyBJbi1tZW51IGxpbmsgY2xpY2tcbiAgICBmb3IodmFyIGk9MDsgaSA8IHByaW1hcnlOYXZMaW5rcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgIHZhciBwcmltYXJ5TmF2TGluayA9IHByaW1hcnlOYXZMaW5rc1tpXTtcbiAgICAgICAgcHJpbWFyeU5hdkxpbmsub25jbGljayA9IGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAvLyB0b2dnbGUgYWN0aXZlIGNsYXNzIG9uIHRoZSBuYXYgdHJpZ2dlclxuICAgICAgICAgICAgbmF2VHJpZ2dlci5jbGFzc0xpc3QudG9nZ2xlKFwib3BlblwiKTtcbiAgICAgICAgICAgIC8vIGltbWVkaWF0ZWx5IGhpZGUgdGhlIG5hdlxuICAgICAgICAgICAgcHJpbWFyeU5hdi5zdHlsZS5vcGFjaXR5PSBcIjBcIjtcbiAgICAgICAgICAgIC8vIG9uY2UgZHJhd2VyIGhhcyBoYWQgdGltZSB0byBwdWxsIHVwLCByZXN0b3JlIG9wYWNpdHlcbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7IHByaW1hcnlOYXYuc3R5bGUub3BhY2l0eT0gXCIxXCI7IH0sIDEwMDApO1xuICAgICAgICAgICAgLy8gdG9nZ2xlIHRoZSBhY3RpdmUgY2xhc3Mgb24gc2l0ZSBjb250YWluZXJcbiAgICAgICAgICAgIGNvbnRhaW5lci5jbGFzc0xpc3QudG9nZ2xlKFwianMtbmF2LWFjdGl2ZVwiKTtcbiAgICAgICAgfTtcbiAgICB9XG5cbn07XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBUaW1lbGluZUxvYWRpbmcoKSB7XG5cbnZhciB0aW1lbGluZUJsb2NrcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuY2QtdGltZWxpbmUtYmxvY2tcIik7XG5cbiAgQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbCh0aW1lbGluZUJsb2NrcywgZnVuY3Rpb24oZWwsIGkpe1xuXG4gICAgdmFyIHdheXBvaW50ID0gbmV3IFdheXBvaW50KHtcbiAgICAgIGVsZW1lbnQ6IGVsLFxuICAgICAgaGFuZGxlcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIGVsLmNsYXNzTGlzdC5hZGQoJ2ZhZGVJblVwJyk7XG4gICAgICB9LFxuICAgICAgb2Zmc2V0OiAnNzUlJ1xuICAgIH0pXG5cbiAgfSk7XG59O1xuIl19"}